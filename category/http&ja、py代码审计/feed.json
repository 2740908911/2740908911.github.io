{
    "version": "https://jsonfeed.org/version/1",
    "title": "imFanqie • All posts by \"http&ja、py代码审计\" category",
    "description": "学习博客",
    "home_page_url": "http://imfanqie.top",
    "items": [
        {
            "id": "http://imfanqie.top/2021/08/16/ctf/web/http/(ctfwp)py%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/",
            "url": "http://imfanqie.top/2021/08/16/ctf/web/http/(ctfwp)py%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/",
            "title": "(ctfwp)py代码审计",
            "date_published": "2021-08-16T12:35:41.221Z",
            "content_html": "<p>真服了，本来觉得代码审计真没啥考的，结果被 py 代码搞得头大，c</p>\n<p>我还是记录一下吧</p>\n<p><span id=\"more\"></span></p>\n<p>wp 大佬们都说简单，头真大，真搞心态，py 不行真是硬伤</p>\n<h1 id=\"1de1ctf-2019ssrf-me\"><a class=\"anchor\" href=\"#1de1ctf-2019ssrf-me\">#</a> 1.[De1CTF 2019]SSRF Me</h1>\n<hr>\n<p>说实话，ssrf 没咋考出来，全被代码审计坑了。。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMTYvb3A4VmFHdVRYSDlSZ2NQLnBuZw==\">https://i.loli.net/2021/08/16/op8VaGuTXH9RgcP.png</span>&quot; alt=&quot;1.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p1--&gt;</p>\n<p>出个真是代码也不好好给，还得自己整理：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#! /usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># #encoding=utf-8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> request</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> socket</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> urllib</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin\">reload</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sys<span class=\"token punctuation\">.</span>setdefaultencoding<span class=\"token punctuation\">(</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>secert_key <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Task</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> action</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        self<span class=\"token punctuation\">.</span>param <span class=\"token operator\">=</span> param</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        self<span class=\"token punctuation\">.</span>sign <span class=\"token operator\">=</span> sign</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        self<span class=\"token punctuation\">.</span>sandbox <span class=\"token operator\">=</span> md5<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>sandbox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>sandbox<span class=\"token punctuation\">)</span>          <span class=\"token comment\">#整个大类主要就是三个元素写的 action param sign</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">Exec</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        result<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>checkSign<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t<span class=\"token comment\">#检查，然后如果有 scan，就把东西写到 result.txt</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">\"scan\"</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">:</span>\t\t<span class=\"token comment\">#如果有 read，就读 result.txt；由此可知，俩都得有才行</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                tmpfile <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./%s/result.txt\"</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>sandbox<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                resp <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>param<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resp <span class=\"token operator\">==</span> <span class=\"token string\">\"Connection Timeout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    result<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> resp</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token keyword\">print</span> resp</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    tmpfile<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    tmpfile<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                result<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">\"read\"</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./%s/result.txt\"</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>sandbox<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                result<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                result<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span> result<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">500</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                result<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Action Error\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Sign Error\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">checkSign</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t\t<span class=\"token comment\">#检查可以看出是调用了 getsign，看是否和 sign 相等</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getSign<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>param<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/geneSign\"</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t\t\t\t<span class=\"token comment\">#路径之一，可以传参 param，让 action 默认成 scan</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">geneSign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    param <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    action <span class=\"token operator\">=</span> <span class=\"token string\">\"scan\"</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">return</span> getSign<span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre> </pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/De1ta'</span><span class=\"token punctuation\">,</span>methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token comment\">#路径之一，可以通过 cookie 传参 action 和 sign</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">challenge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#可以通过 get 传参 param，后面有个 waf 没啥用</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    action <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    param <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    sign <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"sign\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    ip <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>remote_addr</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>waf<span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"No Hacker!!!!\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    task <span class=\"token operator\">=</span> Task<span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span>Exec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre> </pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token comment\">#根目录，显示原码用的</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre> </pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#scan，配合上面那个扫描文件读取文件用，不管</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    socket<span class=\"token punctuation\">.</span>setdefaulttimeout<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">return</span> urllib<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Connection Timeout\"</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre> </pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getSign</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>·\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#配合上面使用，把三个东西拼接起来（直接拼接）md5</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">return</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>secert_key <span class=\"token operator\">+</span> param <span class=\"token operator\">+</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#显然这里需要利用，来绕过前面的判断 checkSign</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre> </pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">return</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre> </pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">waf</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    check<span class=\"token operator\">=</span>param<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#不能出现这俩字符，没啥用</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">if</span> check<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"gopher\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> check<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    app<span class=\"token punctuation\">.</span>debug <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span>port<span class=\"token operator\">=</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>（我在代码上标注了一下自己的理解）</p>\n<p>整个代码是要读拼接后的 param，方法是靠 action，来获取 flag.txt</p>\n<p>就是让我们 action=readscan 或者 scanread，只要包含就行，然后文件 param=flag.txt 就能读，只要 sign = 拼接后的 md5 值就行。</p>\n<p>而 sign 在 genesign 里构造就行，让 param=flag.txtread，action 默认赋值 scan 不用管，这样拼接起来就是是需要的 sign，既有 scan 又有 read</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMTYvNWZCdEUzVXF4WTdqZWM4LnBuZw==\">https://i.loli.net/2021/08/16/5fBtE3UqxY7jec8.png</span>&quot; alt=&quot;2.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p2--&gt;</p>\n<p>读取了 sign 后，抓包改 cookie 值传参，通过路径 / De1ta，就正常传就出来了</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMTYvMWk4WUFIM2d0enhkdjdCLnBuZw==\">https://i.loli.net/2021/08/16/1i8YAH3gtzxdv7B.png</span>&quot; alt=&quot;3.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p3--&gt;</p>\n<p>说实话，思路确实不难，主要就是记录一下代码，梳理下代码。</p>\n<hr>\n<p>有不懂的代码再补充</p>\n<p>END</p>\n",
            "tags": [
                "代码审计"
            ]
        },
        {
            "id": "http://imfanqie.top/2021/07/08/ctf/web/http/(ctfwp)http&java/",
            "url": "http://imfanqie.top/2021/07/08/ctf/web/http/(ctfwp)http&java/",
            "title": "(ctfwp)http&java",
            "date_published": "2021-07-08T14:30:37.254Z",
            "content_html": "<p>最近遇到不少奇奇怪怪的题，方法很少见且唯一，直接总结一下。</p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"1极客大挑战-2019http\"><a class=\"anchor\" href=\"#1极客大挑战-2019http\">#</a> 1.[极客大挑战 2019] Http</h1>\n<p>进去后是个介绍页面，由于没有信息，先查看源码</p>\n<p>发现相关信息，看名字可能与答案有关：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvNzVpU09GS2h1THZFcXp4LnBuZw==\">https://i.loli.net/2021/07/09/75iSOFKhuLvEqzx.png</span>&quot; alt=&quot;1.1.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p1--&gt;</p>\n<p>点进去后界面如下：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvUWF5dVdyRDVQWHZaMjhvLnBuZw==\">https://i.loli.net/2021/07/09/QayuWrD5PXvZ28o.png</span>&quot; alt=&quot;1.2.png&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;!--p2--&gt;</p>\n<p>根据网页提示，应该在头请求里修改 referer，这里有很多方法（burp 抓包添加，火狐 F12 网络里拦截修改，hackbar 修改）</p>\n<p>我都已尝试过了，所以这里用最简单的 hackbar：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvSjcyeFZPOUkzcmh3UzVGLnBuZw==\">https://i.loli.net/2021/07/09/J72xVO9I3rhwS5F.png</span>&quot; alt=&quot;1.3.png&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;!--p3--&gt;</p>\n<p>界面如下，根据提示，要通过 Syclover 浏览，所以修改 user-agent：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvYmVOUTdwOEpMd21PQjJ6LnBuZw==\">https://i.loli.net/2021/07/09/beNQ7p8JLwmOB2z.png</span>&quot; alt=&quot;1.4.png&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;!--p4--&gt;</p>\n<p>界面如下，再根据提示，需要本地查看</p>\n<p>在简单的学习后，发现通过 X-Forwarded-For:127.0.0.1 可以伪造 ip 地址到本地</p>\n<p>（顺便学习了一下 html 请求头和响应头，相关文章附到后文）</p>\n<p>此时不能用 hackbar 添加，所以我选择用火狐工具直接修改：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvYUR0UGJ5V3M3RjFyWWpRLnBuZw==\">https://i.loli.net/2021/07/09/aDtPbyWs7F1rYjQ.png</span>&quot; alt=&quot;1.5.png&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;!--p5--&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDcvMDkvQWJIMmtKcUVLMWVDeDRTLnBuZw==\">https://i.loli.net/2021/07/09/AbH2kJqEK1eCx4S.png</span>&quot; alt=&quot;1.6.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p6--&gt;</p>\n<hr>\n<h1 id=\"2roarctf-2019easy-java\"><a class=\"anchor\" href=\"#2roarctf-2019easy-java\">#</a> 2.[RoarCTF 2019]Easy Java</h1>\n<p>这题真是没见过就不会做，进去先注入了几下，没有；扫目录，没有，点开 help，考虑是利用了 download 下载了啥东西：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDkvVEdLSVlPOVhSM1daRmkyLnBuZw==\">https://i.loli.net/2021/08/09/TGKIYO9XR3WZFi2.png</span>&quot; alt=&quot;7.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p7--&gt;</p>\n<p>然后就没思路了，被迫看了眼 wp：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDkvNHdTbDJ2MzFaa1lUV2RuLnBuZw==\">https://i.loli.net/2021/08/09/4wSl2v31ZkYTWdn.png</span>&quot; alt=&quot;8.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p8--&gt;</p>\n<p>确实有漏洞，能带出源码，虽然我没听过，所以我查了一下相关资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5Xzk3L2FydGljbGUvZGV0YWlscy83ODE2NTA1MQ==\">ctf/web 源码泄露及利用办法</span></p>\n<p>nb，继续做题：</p>\n<p>这里 get 下载不下来东西，burp 抓包后用 post 下载 web-xml (通过 WEB-INF)：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDkvbU5KaWFiV0Q4UjRRUEt2LnBuZw==\">https://i.loli.net/2021/08/09/mNJiabWD8R4QPKv.png</span>&quot; alt=&quot;9.png&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;!--p9--&gt;</p>\n<p>根据漏洞说明，找到相关的 class 文件，下载（就是我图中画出来的文件）：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDkvcW9lVzdHWEhjZjVSODFTLnBuZw==\">https://i.loli.net/2021/08/09/qoeW7GXHcf5R81S.png</span>&quot; alt=&quot;10.png&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;!--p10--&gt;</p>\n<p>得到 base64 加密后的 flag，结束</p>\n<p>说实话这题挺简单，主要靠经验做，但是像我这种 cj，直接傻眼。。</p>\n<hr>\n<h1 id=\"附参考文章\"><a class=\"anchor\" href=\"#附参考文章\">#</a> 附：参考文章</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2x2Y2hlbi9wLzEwMTY5MjQ1Lmh0bWw=\">HTML 请求头，响应头和 HTTP 状态码</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9odHRwL2h0dHAtbWV0aG9kcy5odG1s\">菜鸟教程 HTTP 请求方法</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aW5kYXJkLmNvbS9wcm9qZWN0LzIwMTYvMDUvMDgvRm9yZ2UtSVAtQWRkcmVzcw==\">通过修改 http 请求的 header 请求头来伪造 ip</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5Xzk3L2FydGljbGUvZGV0YWlscy83ODE2NTA1MQ==\">ctf/web 源码泄露及利用办法</span></p>\n<hr>\n<p>遇到类似的的奇怪题再总结</p>\n<p>END</p>\n",
            "tags": [
                "http"
            ]
        }
    ]
}