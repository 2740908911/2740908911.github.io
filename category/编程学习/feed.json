{
    "version": "https://jsonfeed.org/version/1",
    "title": "imFanqie • All posts by \"编程学习\" category",
    "description": "学习博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/07/01/program/php/phpstudy/php%E5%AD%A6%E4%B9%A0%E4%B8%AD%E4%B8%80%E4%BA%9B%E6%98%93%E5%BF%98%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "url": "http://example.com/2021/07/01/program/php/phpstudy/php%E5%AD%A6%E4%B9%A0%E4%B8%AD%E4%B8%80%E4%BA%9B%E6%98%93%E5%BF%98%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "title": "php的浅显学习中一些知识点",
            "date_published": "2021-07-01T03:03:51.726Z",
            "content_html": "<p>为了读懂 web 一些漏洞和原理，浅显学习了一下 php 语言，并做了一点简陋的笔记，方便回顾。</p>\n<p>后面还会不断的或是专业的学习这门语言。</p>\n<p><span id=\"more\"></span></p>\n<p>1. 变量以 $ 符号开始，不能包含空格，区分大小写。php 定义变量，不用声明变量类型。</p>\n<p>2. 以 <code>?php</code>  开始，以 <code>?&gt;</code>  结尾。</p>\n<p>3. 在函数内调用全局变量，要用  <code>global</code>  关键字，比如：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$y</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">global</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当然，也可这么引用：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>4. <code>static</code>  作用域，用法语 c 语言差不多，让一个变量的值不会被清除或重置。</p>\n<p>5.echo 和 print 的区别：</p>\n<ul>\n<li><code>echo</code>  - 可以输出一个或多个字符串，没有返回值，速度比 print 要快。</li>\n<li><code>print</code>  - 只允许输出一个字符串，返回值总为 1</li>\n</ul>\n<p>6. 类型比较， <code>==</code>  只比较值，不比较类型； <code>===</code>  既比较值也比较类型</p>\n<p>7. 定义常量时 可选择是否区分大小写区分，不区分则在后面加 <code>true</code> ，例如：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"value\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>8. 并置运算符 (.)，例如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$txt1</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$txt2</span> <span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>9. 整除运算符 <code> intdiv()</code>  ，该函数返回值为第一个参数除以第二个参数的值并向下取整数，例如 <code>intdiv(10,3)</code>   值为 3</p>\n<p>10. 赋值运算符中    <code>a .= b</code> , 相当于  <code>a = a . b</code>  , 连接两个字符串。</p>\n<p>11. 比较运算符中   <code>x &lt;&gt; y</code>  相当于  <code>x != y</code>  ， <code>x!==y</code>  会同时判断值和类型。</p>\n<p>12. 数组运算符中， <code>x + y</code>  能拼接两个数组。</p>\n<p>13. 组合比较符 <code>&lt;=&gt;</code> ，用法：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">&lt;=></span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>if $a &gt; $b, $c = 1;</p>\n<p>if $a &lt; $b, $c = -1;</p>\n<p>if $a = $b, $c = 0;</p>\n<p>14. 数组，可以储存字符串，用 <strong>array()</strong> 函数创建。</p>\n<p>关联数组，可以通过一个数组关联到另外的数组。</p>\n<p>部分有关数组的函数：</p>\n<ul>\n<li>sort () - 对数组进行升序排列</li>\n<li>rsort () - 对数组进行降序排列</li>\n<li>asort () - 根据关联数组的键值，对数组进行升序排列</li>\n<li>ksort () - 根据关联数组的键名，对数组进行升序排列</li>\n<li>arsort () - 根据关联数组的键值，对数组进行降序排列</li>\n<li>krsort () - 根据关联数组的键名，对数组进行降序排列</li>\n<li>count () - 用于返回数组元素的数量。</li>\n</ul>\n<p>15.foreach 循环，用于遍历数组。例如：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$x</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Google\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Runoob\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$value</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?></span></pre></td></tr></table></figure><p>16. 常用函数</p>\n<p>创建一个函数用   <code>function xxx()</code></p>\n<p><strong>strpos()</strong>  用于在字符串内查找一个字符或一段指定的文本。</p>\n<p>如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果 未找到匹配，则返回 FALSE。</p>\n<p>17.php 魔术常量</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">__LINE__</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">#报行号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token constant\">__FILE__</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">#报文件路径和文件名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token constant\">__DIR__</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">#报文件所在目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token constant\">__FUNCTION__</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">#返回函数名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token constant\">__CLASS__</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">#返回类名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token constant\">__TRAIT__</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">#trait 名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token constant\">__METHOD__</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">#类的方法名，返回该方法被定义时的名字</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token constant\">__NAMESPACE__</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">#当前命名空间的名称</span></pre></td></tr></table></figure><p>18.php 命名空间（namespace）</p>\n<p>PHP 命名空间可以解决以下两类问题：</p>\n<p>1. 用户编写的代码与 PHP 内部的类 / 函数 / 常量或第三方类 / 函数 / 常量之间的名字冲突。<br>\n2. 为很长的标识符名称 (通常是为了缓解第一类问题而定义的) 创建一个别名（或简短）的名称，提高源代码的可读性。</p>\n<p>注意：</p>\n<p>在声明命名空间之前唯一合法的代码是用于定义源文件编码方式的 declare 语句。所有非 PHP 代码包括空白符都不能出现在命名空间的声明之前。</p>\n<hr>\n<p>上面的知识点摘录于<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9waHAvcGhwLXR1dG9yaWFsLmh0bWw=\">菜鸟教程 php</span>，更详细。</p>\n",
            "tags": [
                "php"
            ]
        },
        {
            "id": "http://example.com/2021/06/29/program/py/pystudy/python%E4%B8%AD%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "url": "http://example.com/2021/06/29/program/py/pystudy/python%E4%B8%AD%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "title": "python学习中部分易忘知识点",
            "date_published": "2021-06-29T10:41:39.545Z",
            "content_html": "<p>本文是我在 py 学习中总结梳理了一些常用的易忘的知识点，为方便回顾和复习，遂加以记录。</p>\n<p>本文我会不断的学习并总结。</p>\n<p><span id=\"more\"></span></p>\n<hr>\n<h2 id=\"1不希望出现转义字符起作用在printf中加rr\"><a class=\"anchor\" href=\"#1不希望出现转义字符起作用在printf中加rr\">#</a> 1. 不希望出现转义字符起作用，在 printf () 中加 r/R</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>printf <span class=\"token punctuation\">(</span>r <span class=\"token string\">'hello\\n world'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#但要注意，最后一个字符不能是 \\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>printf <span class=\"token punctuation\">(</span>r 'hello\\n world\\'<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#上面的写法是错的</span></pre></td></tr></table></figure><hr>\n<h2 id=\"2将数据输出到文件中去\"><a class=\"anchor\" href=\"#2将数据输出到文件中去\">#</a> 2. 将数据输出到文件中去</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">'D:/text.txt'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>printf <span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span> <span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><hr>\n<h2 id=\"3相比于c语言多的常用数据类型\"><a class=\"anchor\" href=\"#3相比于c语言多的常用数据类型\">#</a> 3. 相比于 c 语言，多的常用数据类型</h2>\n<p>布尔类型 ——bool (Ture , False)</p>\n<p>字符串类型 ——str (与 c 字符串类似)</p>\n<p>整数类型中：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>printf<span class=\"token punctuation\">(</span><span class=\"token string\">'十进制'</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span>  <span class=\"token comment\">#不用加开头</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>printf <span class=\"token punctuation\">(</span><span class=\"token string\">'二进制'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0b</span> <span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 要加开头</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>printf <span class=\"token punctuation\">(</span><span class=\"token string\">'八进制'</span> <span class=\"token punctuation\">,</span> 0o <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>printf <span class=\"token punctuation\">(</span><span class=\"token string\">'十六进制'</span> <span class=\"token punctuation\">,</span> 0x <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>浮点数计算中可能出现不精确的情况，另行解决。</p>\n<p>字符串在多换行显示用 ‘’‘xxx’‘’   or   “”“xxx”“”</p>\n<hr>\n<h2 id=\"4print注意\"><a class=\"anchor\" href=\"#4print注意\">#</a> 4.print 注意</h2>\n<p>在一句 printf () 里，不能同时出现多种数据类型，但可以用 str () /int () /  float ()</p>\n<hr>\n<h2 id=\"5计算和定义注意\"><a class=\"anchor\" href=\"#5计算和定义注意\">#</a> 5. 计算和定义注意</h2>\n<p>在 py3 里</p>\n<p>** 表示乘方</p>\n<p>// 表示整除</p>\n<p>数字很大时，可以用下划线来分隔，更清晰易读，py 不会打印下划线</p>\n<p>相比于 c 语言，py 可以这样赋值： x, y, z = 0, 0, 0</p>\n<p>常量一般用全大写表示</p>\n<hr>\n<h2 id=\"6总结一些常用的方法后面遇到的也写到这里了\"><a class=\"anchor\" href=\"#6总结一些常用的方法后面遇到的也写到这里了\">#</a> 6. 总结一些常用的方法（后面遇到的也写到这里了）</h2>\n<p><strong>title()</strong>\t以首字母大写的方式显示每个单词</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">\"ada lovelace\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Ada Lovelace</pre></td></tr></table></figure><p><strong>upper()</strong>\t全大写字母显示单词</p>\n<p><strong>lower()</strong>\t全小写字母显示单词</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">\"ada lovelace\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ADA LOVELACE</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ada lovelace</pre></td></tr></table></figure><p><strong>format()</strong>\t这个方法在 3.6 以后的版本已经换为用  f 字符  连接字符串了（所以只写了 f 字符的用法）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"ada\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"lovelace\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>full_name <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>first_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>last_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>full_name<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">!\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Hello<span class=\"token punctuation\">,</span> Ada Lovelace</pre></td></tr></table></figure><p><strong>rstrip()</strong>\t删除末尾空白</p>\n<p><strong>lstrip()</strong>\t删除开头空白</p>\n<p><strong>strip()</strong>\t 删除字符串两边的空白</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>language_1 <span class=\"token operator\">=</span> <span class=\"token string\">\"python \"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>language_2 <span class=\"token operator\">=</span> <span class=\"token string\">\" python\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>language_1 <span class=\"token operator\">=</span> language_1<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>language_2 <span class=\"token operator\">=</span> language_2<span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>language_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>language_2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>python</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>python</pre></td></tr></table></figure><p><strong>append()</strong>\t在列表末尾添加元素</p>\n<p><strong>insert()</strong>\t\t在列表的任何位置添加元素</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>phones<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'honor'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#换行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phones<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'honor'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'honor'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'honor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><strong>del 语句</strong>\t删除元素，需要知道元素的位置</p>\n<p><strong>pop()</strong>\t\t当需要删除值并接着使用时，用 pop，否则可以用 del 语句删除</p>\n<p><strong>remove()</strong>\t\t根据值删除元素</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">del</span> phones<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#换行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>buy <span class=\"token operator\">=</span> phones<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"I will buy </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>buy<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> phone.\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>phones<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#remove 有 pop 一样的用法，可以在删除时调用。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#remove 只删除第一次出现的值，如果有多个一样的都需要删除，需要用 while 循环。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>I will buy huawei phone<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span>`</pre></td></tr></table></figure><hr>\n<h2 id=\"7列表相关方法在6\"><a class=\"anchor\" href=\"#7列表相关方法在6\">#</a> 7. 列表（相关方法在 6）</h2>\n<p>普通列表及访问</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>phones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">#全部打印</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">#单个打印</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>phones<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#索引 - 1 可以访问最后一个</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'huawei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oppo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'oppo'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'vivo'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure>",
            "tags": [
                "python"
            ]
        }
    ]
}