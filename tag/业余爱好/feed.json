{
    "version": "https://jsonfeed.org/version/1",
    "title": "imFanqie • All posts by \"业余爱好\" tag",
    "description": "学习博客",
    "home_page_url": "http://git2740908911.gitee.io/fanqie.blog.io",
    "items": [
        {
            "id": "http://git2740908911.gitee.io/fanqie.blog.io/2021/11/30/ctf/crypto&misc/cryptotal/RSA%E8%84%9A%E6%9C%AC/",
            "url": "http://git2740908911.gitee.io/fanqie.blog.io/2021/11/30/ctf/crypto&misc/cryptotal/RSA%E8%84%9A%E6%9C%AC/",
            "title": "RSA脚本",
            "date_published": "2021-11-30T09:28:09.178Z",
            "content_html": "<h1 id=\"epqc\"><a class=\"anchor\" href=\"#epqc\">#</a> e,p,q,c</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2 <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>d <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"endpc\"><a class=\"anchor\" href=\"#endpc\">#</a> e,n,dp,c</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2 <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>dp<span class=\"token operator\">%</span>x<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        p<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span>dp<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span>p<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        q<span class=\"token operator\">=</span>n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        phin<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        d<span class=\"token operator\">=</span>gp<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        m<span class=\"token operator\">=</span>gp<span class=\"token punctuation\">.</span>powmod<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------------'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pqdpdqc\"><a class=\"anchor\" href=\"#pqdpdqc\">#</a> p,q,dp,dq,c</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2 <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dq <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>phin <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>dd <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>d<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>dp<span class=\"token operator\">-</span>dq<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>dd <span class=\"token operator\">*</span> gp<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>dd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>dd<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>dq</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>m <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>powmod<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-------------------'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"nee长度较大\"><a class=\"anchor\" href=\"#nee长度较大\">#</a> n,e（e 长度较大）</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  RSAwienerHacker</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n<span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e<span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span>  RSAwienerHacker<span class=\"token punctuation\">.</span>hack_RSA<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> d<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"flag&#123;\"</span> <span class=\"token operator\">+</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> flag</pre></td></tr></table></figure><h1 id=\"pqe求d\"><a class=\"anchor\" href=\"#pqe求d\">#</a> p,q,e 求 d</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util <span class=\"token keyword\">import</span> number</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">473398607161</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">4511491</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">17</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ned求pq\"><a class=\"anchor\" href=\"#ned求pq\">#</a> n,e,d 求 p,q</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> next_prime<span class=\"token punctuation\">,</span> gcd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Factorize</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    g <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        k <span class=\"token operator\">=</span> e <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> k <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            k <span class=\"token operator\">//=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            p <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gcd<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> p <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> n <span class=\"token operator\">//</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        g <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>next_prime<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">0x75be564267f8bf6c2038dd0cadfeecbc3158acfc27e679dd0bdb0db0e90bd5198a0a7edc0626f357a2d75f3c37ede045b7f7ca6bda79e5bf6fc0aea0aa7beda587388599d2b77b538fc3e666784493ffaf731e2ae232e8e9e9f9f2a4df25c19b7680f5bf6c485bd87923f01c17d8ec35438772c28e361774e6e7681d67ecbe19</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    e <span class=\"token operator\">=</span> <span class=\"token number\">0x14b367bf01efd4dc667b8e62975479c612c96e78f7f1f55242b2973c882ddcb33a65c52174d8ae1273764ce429054ea3f2fdc38ff205443c92ef4198739f05aa11fc10d3fc6ff30c8f5f05a04f43e3d8fc9bfffe916b2e0360560a162729e91b7775bda70177e0f875626e0a81bd4eacea9948b02232a82659f8d9aa9b4c754f</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">105446909057629013379692394355251350740773777593653963988108428818399001716079</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Factorize<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"共模攻击nm相同ce不同\"><a class=\"anchor\" href=\"#共模攻击nm相同ce不同\">#</a> 共模攻击 (n,m 相同，c,e 不同)</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> n2s<span class=\"token punctuation\">,</span>s2n</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> invert</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">egcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    g<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> egcd<span class=\"token punctuation\">(</span>b <span class=\"token operator\">%</span> a<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">//</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> y<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  n <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  c1 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  c2 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  e1 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  e2 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  s <span class=\"token operator\">=</span> egcd<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  s1 <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  s2 <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">if</span> s1<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    s1 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> s1</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    c1 <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">elif</span> s2<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    s2 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> s2</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    c2 <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"共模攻击分解e1e2并爆破判别\"><a class=\"anchor\" href=\"#共模攻击分解e1e2并爆破判别\">#</a> 共模攻击（分解 e1e2 并爆破判别）</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n<span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>c1<span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c2<span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e1e2<span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">rsa_gong_N_def</span><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span>e2<span class=\"token punctuation\">,</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#共模攻击函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> n<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e1,e2:\"</span><span class=\"token punctuation\">,</span>e1<span class=\"token punctuation\">,</span>e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    s <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcdext<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mpz:\"</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    s1 <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    s2 <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> s1 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        s1 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> s1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        c1 <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">elif</span> s2 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        s2 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> s2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        c2 <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2 <span class=\"token punctuation\">,</span>s2 <span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">de</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#因为此时的 m 不是真正的 m，而是 m^k，所以对 m^k 进行爆破</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">while</span> k<span class=\"token operator\">&lt;</span><span class=\"token number\">1000</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#指定 k 小于 1000</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        mk <span class=\"token operator\">=</span> c <span class=\"token operator\">+</span> n<span class=\"token operator\">*</span>k</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        flag<span class=\"token punctuation\">,</span> true1 <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>mk<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#返回的第一个数值为开方数，第二个数值为布尔型，可整除为 true，可自行测试</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token boolean\">True</span> <span class=\"token operator\">==</span> true1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\"># print(libnum.n2s(int(flag)))</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">return</span> flag</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> e1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>e1e2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> e1e2<span class=\"token operator\">%</span>e1<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>         <span class=\"token comment\">#爆破可整除的 e</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        e2<span class=\"token operator\">=</span>e1e2<span class=\"token operator\">//</span>e1</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        c<span class=\"token operator\">=</span>rsa_gong_N_def<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        e<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span>e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        m1<span class=\"token operator\">=</span>de<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">if</span> m1<span class=\"token punctuation\">:</span>  <span class=\"token comment\">#指定输出 m1</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"em相同存在两个n有公约数\"><a class=\"anchor\" href=\"#em相同存在两个n有公约数\">#</a> e,m 相同，存在两个 n 有公约数</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> invert<span class=\"token punctuation\">,</span> iroot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2 <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> libnum <span class=\"token keyword\">import</span> xgcd<span class=\"token punctuation\">,</span> invmod</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;></span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            pub_p<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>gcdext<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pub_p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">></span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">print</span> i</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">print</span> j</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">print</span> pub_p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                a<span class=\"token operator\">=</span>i<span class=\"token punctuation\">,</span>p<span class=\"token operator\">=</span>pub_p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>q<span class=\"token operator\">=</span>a<span class=\"token operator\">/</span>p</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>q <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>e <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c <span class=\"token operator\">=</span>  gp<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>d <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"根据enc文件pqe求d和key\"><a class=\"anchor\" href=\"#根据enc文件pqe求d和key\">#</a> 根据 enc 文件，p,q,e 求 d 和 key</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> rsa</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">285960468890451637935629440372639283459</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">304008741604601924494328155975272418463</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token number\">81176168860169991027846870170527607562179635470395365333547868786951080991441</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>key <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>PrivateKey<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag.enc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rsa<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"根据pem文件解密\"><a class=\"anchor\" href=\"#根据pem文件解密\">#</a> 根据 pem 文件解密</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hhY3VvLm5ldC9jcnlwdHJzYXB1YmtleQ==\">RSA public key encryption and decryption</span></p>\n<p>or 用 kali 跑 openssl</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NsaWZmb3JkUi9hcnRpY2xlL2RldGFpbHMvODI3NDcxMTI=\">RSA 解密 - 提供 enc 和 pem 文件类</span></p>\n<h1 id=\"e1\"><a class=\"anchor\" href=\"#e1\">#</a> e=1</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>N_hex<span class=\"token operator\">=</span><span class=\"token number\">0x180be86dc898a3c3a710e52b31de460f8f350610bf63e6b2203c08fddad44601d96eb454a34dab7684589bc32b19eb27cffff8c07179e349ddb62898ae896f8c681796052ae1598bd41f35491175c9b60ae2260d0d4ebac05b4b6f2677a7609c2fe6194fe7b63841cec632e3a2f55d0cb09df08eacea34394ad473577dea5131552b0b30efac31c59087bfe603d2b13bed7d14967bfd489157aa01b14b4e1bd08d9b92ec0c319aeb8fedd535c56770aac95247d116d59cae2f99c3b51f43093fd39c10f93830c1ece75ee37e5fcdc5b174052eccadcadeda2f1b3a4a87184041d5c1a6a0b2eeaa3c3a1227bc27e130e67ac397b375ffe7c873e9b1c649812edcd</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e_hex<span class=\"token operator\">=</span><span class=\"token number\">0x1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c_hex<span class=\"token operator\">=</span><span class=\"token number\">0x4963654354467b66616c6c735f61706172745f736f5f656173696c795f616e645f7265617373656d626c65645f736f5f63727564656c797d</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c_hex <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span>c_hex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>N_hex <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span>N_hex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">while</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    m_hex <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>c_hex <span class=\"token operator\">+</span> gmpy2<span class=\"token punctuation\">.</span>mpz<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>N_hex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m_hex<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>a2b_hex<span class=\"token punctuation\">(</span>m_hex<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">except</span> binascii<span class=\"token punctuation\">.</span>Error <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"位数非偶数，跳过...\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><h1 id=\"e2\"><a class=\"anchor\" href=\"#e2\">#</a> e=2</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> RSA</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 读取公钥参数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./tmp/pubkey.pem'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    key <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>importKey<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    N <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>n</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    e <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>e</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">275127860351348928173285174381581152299</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">319576316814478949870590164193048041239</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./tmp/flag.enc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    cipher <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    cipher <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>atoi<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> base<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># print cipher</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 计算 yp 和 yq</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>yp <span class=\"token operator\">=</span> gmpy<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>yq <span class=\"token operator\">=</span> gmpy<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 计算 mp 和 mq</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>mp <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 计算 a,b,c,d</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>yp <span class=\"token operator\">*</span> p <span class=\"token operator\">*</span> mq <span class=\"token operator\">+</span> yq <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> mp<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>b <span class=\"token operator\">=</span> N <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>yp <span class=\"token operator\">*</span> p <span class=\"token operator\">*</span> mq <span class=\"token operator\">-</span> yq <span class=\"token operator\">*</span> q <span class=\"token operator\">*</span> mp<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> N</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>d <span class=\"token operator\">=</span> N <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token string\">'%x'</span> <span class=\"token operator\">%</span> i</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> s</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">print</span> s<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"e3\"><a class=\"anchor\" href=\"#e3\">#</a> e=3</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> RSA</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>public_key <span class=\"token operator\">=</span> <span class=\"token string\">\"./tmp/pubkey.pem\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cipher_file <span class=\"token operator\">=</span> <span class=\"token string\">\"./tmp/flag.enc\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#读入公钥</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>public_key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    key <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>importKey<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    n <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>n</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    e <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>e</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#读入密文</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>cipher_file<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    cipher <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cipher <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">#print(cipher)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#破解密文</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>cipher<span class=\"token operator\">+</span>i<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            flag_bin <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>cipher<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>flag_bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_flag_for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">xrange</span><span class=\"token punctuation\">(</span><span class=\"token number\">118600000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118720000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>cipher<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            flag_bin <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>cipher<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            flag <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>flag_bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">break</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    get_flag_for<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">#get_flag()</span></pre></td></tr></table></figure><h1 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2l1cy9yc2F0b29s\">rsatool</span></li>\n<li>[factordb](<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mYWN0b3JkYi5jb20=\">http://www.factordb.com </span>)</li>\n<li>gmpy2/pycrypto 库</li>\n<li>yafu</li>\n<li>openssl</li>\n</ul>\n<h1 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjMwMzE2L2FydGljbGUvZGV0YWlscy8xMDU5MDQwMjA=\">个人收集的 RSA 常用脚本</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vUDIwMTUyMTQ0MDAwMS9wLzExNDM5MzQ0Lmh0bWw=\">常见的 RSA 套路脚本</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NlcmVuZGlwaXR5MTEzMC9hcnRpY2xlL2RldGFpbHMvMTIwMTU0NTM0\">共模攻击原理详解</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc5MDc3OS9hcnRpY2xlL2RldGFpbHMvMTA4NDczOTg0P3NwbT0xMDAxLjIxMDEuMzAwMS42NjUwLjEmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VkZWZhdWx0LTEubm9fc2VhcmNoX2xpbmsmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RWRlZmF1bHQtMS5ub19zZWFyY2hfbGluaw==\">gmpy2 常见函数使用</span></p>\n",
            "tags": [
                "业余爱好"
            ]
        },
        {
            "id": "http://git2740908911.gitee.io/fanqie.blog.io/2021/10/23/ctf/crypto&misc/cryptotal/CRYPTO%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81%E7%9A%84%E5%8F%96%E7%BB%8F%E4%B9%8B%E8%B7%AF/",
            "url": "http://git2740908911.gitee.io/fanqie.blog.io/2021/10/23/ctf/crypto&misc/cryptotal/CRYPTO%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81%E7%9A%84%E5%8F%96%E7%BB%8F%E4%B9%8B%E8%B7%AF/",
            "title": "CRYPTO——密码的取经之路",
            "date_published": "2021-10-23T02:44:00.030Z",
            "content_html": "<p>just an introduction for 1024CTF to beginner, I'm also an amateur</p>\n<p><span id=\"more\"></span></p>\n<hr>\n<p><em><strong>welcome to 1024CTF !</strong></em></p>\n<p>这是一篇帮助你干掉密码的攻略，仔细阅读喔～</p>\n<hr>\n<h2 id=\"为什么写这篇文章why\"><a class=\"anchor\" href=\"#为什么写这篇文章why\">#</a> 为什么写这篇文章：Why</h2>\n<p>答：因为题出的有点有点难，密码题一般解题情况不是很乐观，因为大多依靠经验和网络。</p>\n<p>所以写这篇指南做一下简单介绍，帮你们排一下雷，快速入门</p>\n<blockquote>\n<p><s>ps：如果你对密码和其他方向都感兴趣，可以像我一样主攻其他的顺便搞一搞密码和杂项</s></p>\n<p>​\t\t战队缺密码手</p>\n</blockquote>\n<hr>\n<h2 id=\"什么是密码学what\"><a class=\"anchor\" href=\"#什么是密码学what\">#</a> <strong>什么是密码学：What</strong></h2>\n<blockquote>\n<p>** 顾名思义就是研究加密的学科。** 现代密码学要求在加密算法公开的情况下，只要不知道密钥，就无法对消息进行解密。这样的话，仅需要保护一个不算长的密钥即可保护一段信息；即使密钥泄露，换个密钥就能继续用同一个加密算法加密。所以，密码学就是要寻找一个在不知道密钥情况下无法破解的算法。</p>\n</blockquote>\n<p>在 CTF 比赛中，密码学有难有易，简单题甚至不需要过脑子就可以解密出来，而往往重要比赛中，解密需要脚本的支持与配合，这就要求解题人掌握熟练地编程能力，灵活的思维和丰富的经验。相对而言密码学是一个比较容易入手的方向，只是需要时间的积淀，你也可以成为一名合格的密码手，并且逐渐享受密码学带给你的乐趣。</p>\n<hr>\n<h2 id=\"学习密码学需要什么基础basis\"><a class=\"anchor\" href=\"#学习密码学需要什么基础basis\">#</a> <strong>学习密码学需要什么基础：Basis</strong></h2>\n<blockquote>\n<p><strong>数学基础</strong>： 密码学是数学的一个应用学科，最早的公钥密码算法 RSA 就是基于数论的，因此学习密码学通常还需要从数论开始学起。其次，最早不是基于数学的块密码，在发展的过程中，也被运用数学的语言来描述，从而更能够更清晰的找到攻击方法。因此，学习密码学会涉及到大量的数学知识，欢迎对数学感兴趣（至少不讨厌）的同学来钻研学习</p>\n</blockquote>\n<blockquote>\n<p><strong>编程基础</strong>： 现代密码学比古典密码复杂许多，它的加密解密算法不是人能够口算或者笔算出来的东西，因此也需要编程。而密码学由于经常要用到特别大的数字，远超 c 和 c++ 的 long long int 的上限，因此一般使用 python 编写程序。python 是一个较接近自然语言的编程语言，因此容易上手，灵活运用搜索引擎以及网上一些教程很容易学会。</p>\n</blockquote>\n<blockquote>\n<p><strong>英语基础</strong>： 你有可能会遇到一些需要阅读纯英文文章才能解决的题目，需要有一定的耐心才能看明白。</p>\n</blockquote>\n<p>害，不要被这些条件吓走，毕竟这是<strong>大佬水准</strong>，而我只是一名 web 来兼任的密码的菜鸡，教不了你们这些...</p>\n<p>对于我们这种小白，或者是想在其他方向瓶颈时研究一下密码学，其实都不是很难，只需要从基础密码抓起，慢慢培养兴趣，逐渐就会有所收获，成为密码大佬！</p>\n<hr>\n<h2 id=\"常见密码分类classify\"><a class=\"anchor\" href=\"#常见密码分类classify\">#</a> <strong>常见密码分类：Classify</strong></h2>\n<p>由于这是一篇赛前指南，我就不在此对密码详细介绍了，只做一下<strong>基本密码的分类</strong>，详细的问题还要自己努力呀</p>\n<p>（请仔细阅读，部分题型就在这里）</p>\n<p><em><strong>新手常见密码分类：</strong></em></p>\n<ul>\n<li>\n<p>基本古典密码：栅栏密码、埃特巴什码、凯撒密码、猪圈密码、Keyboard 密码、标准银河字母密码、圣堂武士密码、维吉尼亚密码</p>\n</li>\n<li>\n<p>基本编码类密码：ASCII 编码、Base64/32/16 编码、莫尔斯电码、UUencode 编码、URL 编码、Unicode 编码、敲击码、MD5</p>\n</li>\n<li>\n<p>花里胡哨可能出现但用处不多的密码：php 混淆加密、JSfuck、aaencode、brainfuck、ook 编码、emo 密码、base 全家桶系列</p>\n</li>\n<li>\n<p>其他可能出现的简单密码：ROT 系列、佛语论禅及其变形、价值观、猪圈及其变形等等（各种奇怪的我一时也想不起来）</p>\n</li>\n<li>\n<p>简单脚本类：常见的 RSA 求解、常见的编码转换求解、自加密算法脚本求解等</p>\n<hr>\n</li>\n</ul>\n<h2 id=\"密码学工具及准备toolspre\"><a class=\"anchor\" href=\"#密码学工具及准备toolspre\">#</a> <strong>密码学工具及准备：Tools</strong>&amp;Pre</h2>\n<ul>\n<li>python 及其对应的一堆库</li>\n<li>一些自己大佬编写的密码工具</li>\n</ul>\n<p>python 请自行配置，推荐 3.7 以上版本，请确保 pip 正常使用。平时积累的脚本可以收集起来，可能会反复使用</p>\n<p>建议多刷题，在无聊的时间里，养成基本密码一眼看出的水平。</p>\n<p>了解 rsa 算法，rsa 在密码方向占了重要位置</p>\n<p>多收藏大佬的网站和帖子，多找总结帖，说不定就用上了</p>\n<hr>\n<h2 id=\"做题的基本步骤step\"><a class=\"anchor\" href=\"#做题的基本步骤step\">#</a> <strong>做题的基本步骤：Step</strong></h2>\n<ul>\n<li>不要慌，先冷静五秒</li>\n<li>看看格式有印象吗</li>\n<li>如果没有就看描述，有就去尝试</li>\n<li>如果还是不知道就用常见的试试，或者找大佬的密码总结帖，看看是否有帮助</li>\n<li>尝试到你不想做了，或者搞到 flag</li>\n<li>再不行就看 wp 写 wp 吧</li>\n</ul>\n<hr>\n<h2 id=\"写在最后last\"><a class=\"anchor\" href=\"#写在最后last\">#</a> 写在最后：Last</h2>\n<p>密码能给你在其他方向做到痛不欲生时带来一丝惊喜（上分快），通常密码和杂项配合起来有奇效（上分非常快）</p>\n<p>密码学是信安和网安的必修专业课，学会了你就领先别人一手，一举两得～</p>\n<p>但是学习 crypto 的人很少，一开始学习密码学必有许多艰难险阻...</p>\n<p>一路下来，会有不少人放弃...</p>\n<p>但是如果你带着<strong>兴趣</strong>，坚持下来，必然会有效果不错的收获！</p>\n<p>在比赛的 CTFER 们，</p>\n<p>加油冲，XJUSEC 等你哟～</p>\n<blockquote>\n<p>在经历过风吹雨打之后，当第一缕的阳光投射到你疲劳憔悴的脸庞时，你会感到欣喜若狂。</p>\n</blockquote>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWritten by 一名废物 web 选手</p>\n",
            "tags": [
                "业余爱好"
            ]
        }
    ]
}